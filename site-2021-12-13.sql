-- MySQL dump 10.13  Distrib 5.7.29, for Linux (x86_64)
--
-- Host: localhost    Database: mysite
-- ------------------------------------------------------
-- Server version	5.7.29-0ubuntu0.18.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(80) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=43 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can add permission',2,'add_permission'),(5,'Can change permission',2,'change_permission'),(6,'Can delete permission',2,'delete_permission'),(7,'Can add group',3,'add_group'),(8,'Can change group',3,'change_group'),(9,'Can delete group',3,'delete_group'),(10,'Can add user',4,'add_user'),(11,'Can change user',4,'change_user'),(12,'Can delete user',4,'delete_user'),(13,'Can add content type',5,'add_contenttype'),(14,'Can change content type',5,'change_contenttype'),(15,'Can delete content type',5,'delete_contenttype'),(16,'Can add session',6,'add_session'),(17,'Can change session',6,'change_session'),(18,'Can delete session',6,'delete_session'),(19,'Can add blog type',7,'add_blogtype'),(20,'Can change blog type',7,'change_blogtype'),(21,'Can delete blog type',7,'delete_blogtype'),(22,'Can add blog',8,'add_blog'),(23,'Can change blog',8,'change_blog'),(24,'Can delete blog',8,'delete_blog'),(25,'Can add read num',9,'add_readnum'),(26,'Can change read num',9,'change_readnum'),(27,'Can delete read num',9,'delete_readnum'),(28,'Can add read detail',10,'add_readdetail'),(29,'Can change read detail',10,'change_readdetail'),(30,'Can delete read detail',10,'delete_readdetail'),(31,'Can add 评论',11,'add_comment'),(32,'Can change 评论',11,'change_comment'),(33,'Can delete 评论',11,'delete_comment'),(34,'Can add like record',12,'add_likerecord'),(35,'Can change like record',12,'change_likerecord'),(36,'Can delete like record',12,'delete_likerecord'),(37,'Can add like count',13,'add_likecount'),(38,'Can change like count',13,'change_likecount'),(39,'Can delete like count',13,'delete_likecount'),(40,'Can add profile',14,'add_profile'),(41,'Can change profile',14,'change_profile'),(42,'Can delete profile',14,'delete_profile');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user`
--

DROP TABLE IF EXISTS `auth_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user`
--

LOCK TABLES `auth_user` WRITE;
/*!40000 ALTER TABLE `auth_user` DISABLE KEYS */;
INSERT INTO `auth_user` VALUES (1,'pbkdf2_sha256$100000$x4VuryWj4r4m$nE6T9hfmtztI1O5IVz3HlZ0PqxZMpBiSGC8xS+ppdC0=','2021-11-21 11:13:08.731528',1,'herschel','','','maliang_gs@126.com',1,1,'2020-02-11 15:20:00.000000'),(9,'pbkdf2_sha256$100000$XvSsmG6Shwma$tyBqVRP1C00H1HDUfY69NXroD2LzPKQ13FdduKR8fSI=','2021-10-20 04:52:59.308605',0,'maliang','','','1746763823@qq.com',0,1,'2020-02-25 19:11:22.713000'),(10,'pbkdf2_sha256$100000$vuQFk1e7jJ4v$1lqkbNrJ5Ma6M9oFuhxg3OajAiHTfkBdvVgFXEyWyUY=','2020-06-08 19:33:42.945949',0,'小野鸡','','','xinyizhuhua@163.com',0,1,'2020-06-08 19:33:42.785444');
/*!40000 ALTER TABLE `auth_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_groups`
--

DROP TABLE IF EXISTS `auth_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_groups_user_id_group_id_94350c0c_uniq` (`user_id`,`group_id`),
  KEY `auth_user_groups_group_id_97559544_fk_auth_group_id` (`group_id`),
  CONSTRAINT `auth_user_groups_group_id_97559544_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `auth_user_groups_user_id_6a12ed8b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_groups`
--

LOCK TABLES `auth_user_groups` WRITE;
/*!40000 ALTER TABLE `auth_user_groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_user_permissions`
--

DROP TABLE IF EXISTS `auth_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_user_permissions_user_id_permission_id_14a6b632_uniq` (`user_id`,`permission_id`),
  KEY `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_user_permissions`
--

LOCK TABLES `auth_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `auth_user_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_blog`
--

DROP TABLE IF EXISTS `blog_blog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_blog` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL,
  `content` longtext NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_updated_time` datetime(6) NOT NULL,
  `author_id` int(11) NOT NULL,
  `blog_type_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_blog_author_id_8791af69_fk_auth_user_id` (`author_id`),
  KEY `blog_blog_blog_type_id_de11bd65_fk_blog_blogtype_id` (`blog_type_id`),
  CONSTRAINT `blog_blog_author_id_8791af69_fk_auth_user_id` FOREIGN KEY (`author_id`) REFERENCES `auth_user` (`id`),
  CONSTRAINT `blog_blog_blog_type_id_de11bd65_fk_blog_blogtype_id` FOREIGN KEY (`blog_type_id`) REFERENCES `blog_blogtype` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=160 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_blog`
--

LOCK TABLES `blog_blog` WRITE;
/*!40000 ALTER TABLE `blog_blog` DISABLE KEYS */;
INSERT INTO `blog_blog` VALUES (97,'做博客的想法','<h3>写这篇的初衷</h3>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 幸甚至哉，歌以咏志！（其实是做个纪念，阶段性总结）</p>\r\n\r\n<h3>为什么要自己做一个博客</h3>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;其实自己认认真真做一个博客是很享受的一件事情，可以在这个过程中获得成就感。就我而言，毕业后就转行做it，其实我心里是很开心的，因为起初我并不排斥做这个，就是因为这个可以给我成就感，工作后，有被抱怨讲话语无伦次，但是都过来了。当然做博客写一写文章是我做博客另一方面，因为自小就想象着自己是一个大作家，学富五车，天马行空，大学时还参加过诗社，虽大都淡忘了，但也是我大学里为数不多的最美好的回忆之一。还有一个原因，其实在这个之前我就已经在github上搭建过静态博客，但是还是觉得不能够自己定制，颇显得有些无聊，也或是我比较喜欢自己折腾一些事情吧，所以我就自己做了。</p>\r\n\r\n<h3>想把博客做成什么样子</h3>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 刚开始我是想把博客做成go语言加上前台的，其实做起来想必也不会太难，但是自己go没有过多的使用过，所以还是放了放，正好那段时间学了学 vue，当时我还写了vue的小项目，所以想用 vue+flask, 或者 vue+django 的架构来搭建，其实两者都是不错的选择，但由于刚学 vue，前后端交互我又觉得不是特别熟悉，所以也暂时放了放。其实现在想想，用 django restful freame work(drf框架）作为后端传送数据，前端vue用axios发送ajax请求，做成单页面富应用也极为不错，假如你也有做博客这么个需求，或许这样的架构是不错的选择。基于之前谈到的原因，我还是选择了最原始的方式，用 bootstrap+django做了博客，其中也有比较多的参考过 HaddyYang 的 b站视频讲解，所以比较相似，这里最后会放出我参考较多的 两个博客链接，同时也很感谢他们的分享，给了我启发或者说模板的作用。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 后台其实用 markdown 写博客是不错的选择，以前就倾心于 markdown 格式的文章，但我并不是的，正如大家在评论看到的那样，其实我用了 ckeditor，这和杨先生类似，同时我又加了代码高亮等等，这是参考杜先生的，当然也是必须的，评论中我也把代码部分加进来了，希望能有人喜欢。但还有一个问题，就是没有 markdown 那么方便的TOC目录，后面解决吧。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 我还想在网站上加上听音乐的功能，加上解析电子书，md格式和pdf格式文件的功能！</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;博客链接：<a href=\"http://dusaiphoto.com\">杜赛的个人网站&nbsp;</a>&nbsp; &nbsp;&nbsp;<a href=\"http://yshblog.com/\">杨仕航的博客</a></p>\r\n\r\n<h3>做博客网站的部分过程</h3>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 其实我是有使用一些插件的，当然不是vue的，可以说是jQuery的，比如我在博客中加入了我喜欢的看板娘，博客页面加了飘雪的背景等。看板娘是我起初在博客园中看到的，当时很是心动啊，想自己也搞一个，但是那时候（也就几个月前吧）并不知道这漂亮的二次元宝宝叫做看板娘，搜都不会搜，想象一下我在百度颤颤巍巍的搜索&ldquo;博客园漂亮的小姐姐&rdquo;是什么情景吧，哼哼。我简直是与的记忆啊，并不大记得看板娘的细节了，只晓得是 github上拽下来玩的，哦，当时搜过很多 live2d-widge 的文章参考。至于下雪也比较容易，当然我指的是用。虽然css层叠样式调起来比较繁琐，但是 canvas粒子飘雪很漂亮啊，对不对？</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<a href=\"http://www.htmleaf.com/\">jQuery插件</a>（打算借鉴一下3d ppt）</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 再然后呢，我就是做了 top功能，一个小火箭（比较丑，后面可能换icon），同时做了下登录页面的滑动验证，都是前端的东西。top是一个蓝色的小火箭，点一下可以飞上去，起初是有比较多的 bug的，之后比较不错的解决了。滑动验证和插件差不多啦，不过显示的图片后面打算用爬虫来解决（现在只有两个图片啦）</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 最基本的功能做的差不多了，然后我把代码托管到了 github远程仓库，方便后续管理。由于没有域名，暂时取消了之前&nbsp; herschel-ma.github.io上的静态博客（之前由于工作忙，没有更新几篇），做了个中转页面。之后的工作呢还是分步来吧，每天完善一点点，争取早日达到自己想要的状态。</p>','2020-03-12 18:22:37.576000','2020-03-15 20:42:11.101200',1,4),(98,'系列优化','<h4><strong>1.优化首页</strong></h4>\r\n\r\n<p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</strong>将首页的内容集中到一个选项卡中。参考图片：</p>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2020/03/13/ui.png\" style=\"height:260px; width:550px\" /></p>\r\n\r\n<h4><strong>2.优化博客列表页</strong></h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 博客列表页的文章信息，加入图标等，参考：<a href=\"https://cuiqingcai.com/\">静觅|崔庆才的个人站点</a></p>\r\n\r\n<h4><strong>3.新增照片墙页</strong></h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 可以和首页轮播图一起做，或者先做。</p>','2020-03-13 10:22:57.637000','2020-03-15 20:41:57.791200',1,4),(99,'登录滑动验证优化','<h4><strong>滑动验证的好处</strong></h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 其实验证码的初衷是设计出来反爬虫的，也可以&ldquo;恶心&rdquo;大家，降低垃圾评论，恶意注册等等。但是如今破解滑动验证的方法也层出不穷，虽然我还没有自己尝试过破解，但有了selenium，结合传说的的opencv，还有个什么库来着，想来也是可以做到，我之所以做这个主要就是上述原因。当然纯前端的东西，呵呵。</p>\r\n\r\n<h4><strong>目前存在的问题</strong></h4>\r\n\r\n<p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>我目前搞的滑动验证是拼图式的，手机端试过并不支持，所以得换个方式。先说说之前是怎么做的吧，目前这一块是根据登录的点击事件来进行的，其实原理很简单，点击登录时，组织表单的默认提交事件，等滑动验证之后再提交数据进行表单验证，界面呢就是隐藏--显示--隐藏（图片验证）。功能上是没问题，但是目前的问题有如下几个：</p>\r\n\r\n<p>1.手机端不支持，不能通过验证；</p>\r\n\r\n<p>2.pc端样式没有居中；</p>\r\n\r\n<p>所以呢，新的搞起来吧，go go go!&nbsp;</p>\r\n\r\n<h4><strong>准备如何做</strong></h4>\r\n\r\n<p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>其实做验证有个小插曲，就是极验其实是比较出名的，本来想用它的API直接搞了，但是他们没有给我开通账号，只能自己搞别的喽。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 简单直观就行，现在感觉也不一定是用图片了，还得占用空间，浪费性能。pc和手机必须都能用，因为博客我希望也可以在手机上看着玩，看着学习。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 昨天在<a href=\"https://v3.bootcss.com/javascript/\">bootstrap官网</a>上瞧见了<strong>模态框</strong>，这个应该可以完美解决我的问题，其次我还要优化详情页面的上一篇和下一篇，因为手机端样式会受到影响，不太美观，这个可以使用<strong>工具提示</strong>来完美解决，再然后呢，我还要在博客列表页加上<strong>徽章</strong>来显示分类，当标签来用，拭目以待吧，小宝贝！</p>\r\n\r\n<h4><strong>后面的一部分计划</strong></h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 我发现开发一个东西，产品规划好真的很重要，虽然可能不一定会喜欢哈，但是有规划真的很不错呢。目前我的个人中心以及首页，评论等等都是没有头像的，看着比较单调，这怎么可以呢？博客一定得美美哒，所以后面打算加上<strong>头像</strong>，具体的后面做到那一步再说也行。出发吧，奥利给！</p>','2020-03-15 21:23:28.396400','2020-03-16 10:44:09.738201',1,4),(100,'文章目录显示','<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实这是一个历史遗留问题，在我刚开始布置博客后台结构的时候，其实我可以用 markdown 的，但不是由于种种原因没有用嘛，所有目录显示就成了一个问题。ok，这篇就来讲讲我对这个的想法吧。再聊聊列表页的优化吧，在这之前，我有看过怎么用vue+express，当然 express 这部分很少，只是简单提供了一下数据，个人感觉还不错，简单明了，但是关于博客部分它是怎么实现的呢？它是读取本地的 markdown 文件，在列表页面是通过 express 的文件读取函数读取一部分。我的列表页部分原理和他相似，只不过是借用了django的模板中的过滤器，为了优化难看的内容截取，我自定义了过滤器，不过还是有待提高。</p>\r\n\r\n<h4><strong>打算怎么做</strong></h4>\r\n\r\n<p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</strong>不久之前刚给博客列表页添加完<strong>标签</strong>，就是页面加载的时候用js去统计本页最大阅读量以及评论量，找到这两篇博客，并且给其标题添加标签，其中用到了Math.map(...array), parentNode, previousSibling, previousElementSibling 等方法去找到这两篇博客以及标题等等，感觉还挺有意思。我之所以说这个，是因为我感觉<strong>目录</strong>也可以这样做。怎么做呢？</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 1.页面加载的时候我同样可以去找到这篇博客的所以一二级......<strong>标题</strong>，然后将它们打到页面的固定位置不就行了么？</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.加<strong>链接</strong>，可以在点击的时候将页面跳转到对应的标题那儿。让我想想假如是vue，我可以怎么做。博客内容肯定是通过axios异步请求后端接口来获取的，或许我们可以写个组件来展示目录，然后后端来返回所有的标题，再或许我可以让前端来获取标题。好，回归自身，其实我发现<a href=\"https://docs.djangoproject.com/zh-hans/3.0/\">django文档</a>官网中就是通过锚点的方式来链接的，所以我也可以这么来做。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 3.为了使得其好看，可以加上激活状态，页面滚动到对应位置的时候将它激活。其实这个我在vue中做过类似的，应该不太难。还可以加上背景色等等使其变得赏心悦目。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 4.最后一点，就是目录可以隐藏，等会再来决定是使用炫酷的插件还是自己来设计。</p>\r\n\r\n<h4><strong>总结下</strong></h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 先这样做吧 ，做到实在没有计划的地步再去拉代码部署吧。奥利给！（一篇比一篇字数少......）&nbsp; 说到字说，说不定后面在加一个统计字数的功能？谁知道呢，拭目以待喽。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>','2020-03-17 17:58:06.131000','2020-03-17 17:58:06.131000',1,4),(101,'基本的Promise','<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我现在觉得学习记笔记还是很有意义的，本来我做这个博客也有记录一些笔记的意思，虽然我这人非常讨厌复习，但是记笔记会使记得东西更牢固。这一点毋庸置疑。好了，废话不多说。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;昨天下午才开始听这个，感觉还是有点深吧，其实也就那样，能敲出来就应该不太难，关键是思路。之前这老师讲的有高阶函数，闭包，装饰，解决回调地狱以及后面说的发布订阅，观察者模式。可能这些都是第一次听说，不过不要紧，似曾相识的感觉。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;打起字来整个人都清爽了很多，要不要考虑去写个小说？好了，不皮了，那里面水太深了。</p>\r\n\r\n<h4>什么是Promise</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 1. Promise 是一个天生的类，类里面需要传入一个 executor 执行器，它默认会执行；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 2. Promise 有三个状态，等待态、成功态以及失败态，当 Promise 被创建传来的时候就已经是等待态,</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">new Promise((resolve, reject)=&gt;{\r\n  resolve();\r\n})</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;resolve 触发成功状态（成功的内容），reject 触发失败状态（失败的原因)，如果为空，则为 undefined ;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 3. Promise 是为了解决异步问题的；</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">let apromise = new Promise((resolve, reject)=&gt;{\r\n  resolve(\'value\');\r\n})\r\n\r\napromise.then((data)=&gt;{  //error的写法也类似，只能成功或者失败 ondulfilled|onrejected\r\n  console.log(data);\r\n},(err)=&gt;{  \r\n  console.log(err);\r\n})</code></pre>\r\n\r\n<p><em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tips: 上面的是最基本的使用方法，将 value的值传到data中输出。</em></p>\r\n\r\n<h4>实现Promise</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 引入(&#39; .js &#39; 可以省略)：</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">let Promise = require(\'./promise.js\')</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 构造 Promise 类：</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">const PENDING = \"PENDING\"   //人家叫宏变量（初始状态，等待态）\r\nconst SUCCESS = \"SUCCESS\"\r\nconst FAILED = \"FAILED\"\r\nclass Promise {\r\n    constructor(executor) {\r\n        // resolve和reject就两个箭头函数，this指向向爸爸要\r\n        this.status = PENDING;\r\n        this.value = undefined;\r\n        this.reason = undefined;\r\n        let resolve = (value) =&gt; {\r\n            if (this.status === PENDING) {\r\n                this.value = value;\r\n                this.status = SUCCESS;\r\n            }\r\n        };\r\n        let reject = (reason) =&gt; {\r\n            if (this.status === PENDING) {\r\n                this.reason = reason;\r\n                this.status = FAILED;\r\n            }\r\n        };\r\n        try {\r\n            executor(resolve, reject); //executor 会默认执行（理解为包resolve，reject的那函数/容器）\r\n        } catch (e) {\r\n            console.log(e);\r\n            reject(e);\r\n        }\r\n    };\r\n    then(onfulfilled, onrejected) {\r\n        if (this.status === SUCCESS) {\r\n            onfulfilled(this.value)\r\n        };\r\n        if (this.status === FAILED) {\r\n            onrejected(this.reason)\r\n        };\r\n    };\r\n}\r\n\r\nmodule.exports = Promise;</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 到这里，在 vscode 中使用 Code Run 插件运行 <strong>promise.js</strong>，传入<strong> resolve(&#39;value&#39;)</strong>，可以看到打印出了value,&nbsp; 传入<strong>reject(&#39;error message&#39;)</strong>，或者是抛出异常， <strong>throw Error(&#39;error message&#39;)</strong> ,也会输出错误信息，并且成功态和失败态两者表现互斥，其实同步的 Promise 类已经基本实现了。接下来我们实现异步：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 首先，将我们的promise测试代码改成这样:</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">let Promise = require(\'./promise\');\r\nlet apromise = new Promise((resolve, reject) =&gt; {\r\n    // throw Error(\'paole\');\r\n    setTimeout(()=&gt;{\r\n        resolve(\'value\');\r\n    }, 1000)\r\n})\r\n\r\napromise.then((data) =&gt; {  //error的写法也类似，只能成功或者失败 ondulfilled|onrejected\r\n    console.log(data);\r\n}, (err) =&gt; {\r\n    console.log(err);\r\n})</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 这时候，测试代码在1s之后没有任何输出，说明当前 Promise 不支持异步。我们在默认的 PENDING 状态下，增加成功和失败后执行的方法，并让他们在各自的状态下执行。</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">const PENDING = \"PENDING\"   //人家叫宏变量（初始状态，等待态）\r\nconst SUCCESS = \"SUCCESS\"\r\nconst FAILED = \"FAILED\"\r\nclass Promise {\r\n    constructor(executor) {\r\n        // resolve和reject就两个箭头函数，this指向向爸爸要\r\n        this.status = PENDING;\r\n        this.value = undefined;\r\n        this.reason = undefined;\r\n        // 成功的异步回调函数\r\n        this.SucessCallbacks = []\r\n        // 失败的异步回调函数\r\n        this.FailedCallbacks = []\r\n        let resolve = (value) =&gt; {\r\n            if (this.status === PENDING) {\r\n                this.value = value;\r\n                this.status = SUCCESS;\r\n                //需要让成功的方法依次执行\r\n                this.SucessCallbacks.forEach((fn)=&gt;{fn();})\r\n            }\r\n        };\r\n        let reject = (reason) =&gt; {\r\n            if (this.status === PENDING) {\r\n                this.reason = reason;\r\n                this.status = FAILED;\r\n                this.FailedCallbacks.forEach((fn)=&gt;{fn();})\r\n            }\r\n        };\r\n        try {\r\n            executor(resolve, reject); //executor 会默认执行（理解为包resolve，reject的那函数/容器）\r\n        } catch (e) {\r\n            console.log(e);\r\n            reject(e);\r\n        }\r\n    };\r\n    then(onfulfilled, onrejected) {\r\n        if (this.status === SUCCESS) {\r\n            onfulfilled(this.value)\r\n        };\r\n        if (this.status === FAILED) {\r\n            onrejected(this.reason)\r\n        };\r\n        if (this.status === PENDING){\r\n            this.SucessCallbacks.push(()=&gt;{\r\n                onfulfilled(this.value)\r\n            });\r\n            this.FailedCallbacks.push(()=&gt;{\r\n                onrejected(this.reason)\r\n            })\r\n        }\r\n    };\r\n}\r\n\r\nmodule.exports = Promise;</code></pre>\r\n\r\n<p>OK，改造完毕，不知道 then 调用两次是个什么鬼，暂时不管他。</p>','2020-03-24 20:10:49.275000','2020-03-24 22:54:55.288000',1,3),(102,'部署','<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不知道为啥，在阿里云服务器上用 git clone 拉代码非常慢的，为此，我还专门优化了一下，速度虽有提升，但不是很明显，乘此机会，整理下这次的部署。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 优化：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1. 查看并记下<strong>github.global.ssl.fastly.Net</strong> 的 Address1</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">nslookup github.global.ssl.fastly.Net</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp; 查看并记下&nbsp; <strong>github.com</strong> 的 Address2</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">nslookup github.com</code></pre>\r\n\r\n<p>&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 3.&nbsp;vim /etc/hosts 添加:&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;github.com Address1</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; github.com Address2</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 4. 清除 DNS 的缓存，让其立即生效</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">sudo apt-get install nscd + sudo /etc/init.d/nscd restart </code></pre>\r\n\r\n<h4>git</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 安装git(方便同步代码)</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">sudo apt-get install git  </code></pre>\r\n\r\n<h4>uWSGI</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装uWSGI，(不必要安装在虚拟环境中)，其实不用测试，直接上项目的测试：</p>\r\n\r\n<pre>\r\n<code class=\"language-scheme\">pip3 install uwsgi </code></pre>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;1. 切换目录 (与 manage.py 同一目录);</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">cd mysite</code></pre>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;2. 启动并测试，查看访问8000是否显示正常。</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">uwsgi --socket 127.0.0.1:8000 --chdir /home/mysite/ --wsgi-file mysite/wsgi.py --master --processes 4 --threads 2 --stats 127.0.0.1:80 --home /root/.vitrtualenvs/blog</code></pre>\r\n\r\n<h4>nginx</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;安装 nginx，修改配置文件。默认 log 在 <strong>/var/log/nginx</strong> 目录下，分别为 access.log 以及 error.log ,非常有用。</p>\r\n\r\n<pre>\r\n<code class=\"language-scheme\">sudo apt-get install nginx </code></pre>\r\n\r\n<h4>配置 nignx</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; nginx 配置在<strong> /etc/nginx/</strong> 下， 步骤</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1. <strong>touch mysite.conf</strong></p>\r\n\r\n<pre>\r\n<code class=\"language-nginx\">server{                                                   \r\n                listen 80;                                \r\n                server_name mysite;                       \r\n                charset utf-8;                            \r\n                                                          \r\n                client_max_body_size 75M;                 \r\n                location /static {                        \r\n                        alias /home/mysite/static;        \r\n                }                                         \r\n                location /media {                         \r\n                        alias /home/mysite/media;         \r\n                }                                         \r\n                location / {                              \r\n                        include /etc/nginx/uwsgi_params;  \r\n                        uwsgi_pass 39.101.213.182:8000;   \r\n                }                                         \r\n}                                                         </code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2. <strong>cp nginx.conf nginx_old.conf</strong> 备份原来的nignx配置</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3. 修改 <strong>nginx.conf</strong> 使其包含 <strong>mysite.conf</strong> （最后3行是改变的内容）</p>\r\n\r\n<pre>\r\n<code class=\"language-nginx\">http {                                                                                              \r\n                                                                                                    \r\n        ##                                                                                          \r\n        # Basic Settings                                                                            \r\n        ##                                                                                          \r\n                                                                                                    \r\n        sendfile on;                                                                                \r\n        tcp_nopush on;                                                                              \r\n        tcp_nodelay on;                                                                             \r\n        keepalive_timeout 65;                                                                       \r\n        types_hash_max_size 2048;                                                                   \r\n        # server_tokens off;                                                                        \r\n                                                                                                    \r\n        # server_names_hash_bucket_size 64;                                                         \r\n        # server_name_in_redirect off;                                                              \r\n                                                                                                    \r\n        include /etc/nginx/mime.types;                                                              \r\n        default_type application/octet-stream;                                                      \r\n                                                                                                    \r\n        ##                                                                                          \r\n        # SSL Settings                                                                              \r\n        ##                                                                                          \r\n                                                                                                    \r\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE                          \r\n        ssl_prefer_server_ciphers on;                                                               \r\n                                                                                                    \r\n        ##                                                                                          \r\n        # Logging Settings                                                                          \r\n        ##                                                                                          \r\n                                                                                                    \r\n        access_log /var/log/nginx/access.log;                                                       \r\n        error_log /var/log/nginx/error.log;                                                         \r\n                                                                                                    \r\n        ##                                                                                          \r\n        # Gzip Settings                                                                             \r\n        ##                                                                                          \r\n                                                                                                    \r\n        gzip on;                                                                                    \r\n                                                                                                    \r\n        # gzip_vary on;                                                                             \r\n        # gzip_proxied any;                                                                         \r\n        # gzip_comp_level 6;                                                                        \r\n        # gzip_buffers 16 8k;                                                                       \r\n        # gzip_http_version 1.1;                                                                    \r\n        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;                                                          \r\n                                                                                                    \r\n        ##                                                                                          \r\n        # Virtual Host Configs                                                                      \r\n        ##                                                                                          \r\n        include /etc/nginx/mysite.conf;                                                             \r\n        #include /etc/nginx/conf.d/*.conf;                                                          \r\n        #include /etc/nginx/sites-enabled/*;                                                        \r\n}                                                                                                   </code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4. <strong>nginx -t</strong> 测试语法等是否正确，这将非常有用</p>\r\n\r\n<h4>配置 uwsgi</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 这之前老是出错，最后的配置是这样的，做一参考吧。</p>\r\n\r\n<pre>\r\n<code class=\"language-ini\">[uwsgi]                                                                      \r\nchdir = /home/mysite                                                         \r\nwsgi-file = /home/mysite/mysite/wsgi.py                                      \r\nenv = DJANGO_SETTINGS_MODULE=mysite.settings                                 \r\nmaster = True                                                                \r\nprocesses = 4                                                                \r\nharakiri = 60                                                                \r\nmax-requests = 5000                                                          \r\nhome = /root/.virtualenvs/blog                                               \r\nsocket = :8000                                                               \r\n                                                                             \r\n                                                                             \r\npidfile = /home/mysite_uwsgi/master.pid                                      \r\ndaemonize = /home/mysite_uwsgi/mysite.log                                    \r\nvacuum = True                                                                \r\nenable-threads = True                                                        </code></pre>\r\n\r\n<p>&nbsp; &nbsp;<em>TODO-&gt;据说发邮件在阿里云把25端口屏蔽了，需改用465端口，加密方式把TLS改成SSL=True就可以，待后面验证。</em></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这时部分部署已经完成，很简单但很容易出错。</p>\r\n\r\n<h4>静态文件的部署</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 1. admin 后台管理的页面此时是没有样式的，先停掉 uwsgi 进程。</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">kill -9 `ps -ef | grep uwsgi | grep -v grep | awk \'{print $2}\'`</code></pre>\r\n\r\n<p>大概解释下，<strong>grep -v grep</strong> 是将 grep 的内容忽视掉，后面就是找到对应的进程号。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 2. 在 SETTINGS.py 文件中加入收集静态文件的根目录， 注册admin的插件 simpleui 。</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">STATIC_ROOT = os.path.join(BASE_DIR, \'static\')</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 3. 在虚拟环境中（记录下我的： windows-&gt;blog-diango2 ; linux -&gt; blog）, 收集静态文件, 提示覆盖直接 yes 即可。</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">python manage.py collectstatic</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 4. 在 mysite.conf 中增加静态文件代理，上面我已经加过了，就不再赘述。</p>\r\n\r\n<pre>\r\n<code class=\"language-nginx\">location /static {\r\n    alias /home/mysite/static;\r\n}</code></pre>\r\n\r\n<h4>数据的导入导出</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 由于我在开发时就已经有一些测试数据以及文章，所以我需要把数据导出放到服务器上</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 1. 导出数据&nbsp; &nbsp;</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">mysqldump -uroot -p**** databasename &gt; youfile.sql</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 2. 将数据传到服务器</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">scp file.sql root@yourip:/home</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 3. 服务器上将数据导入</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">mysql -uroot -p\r\nuse yourdatabase;\r\nsource path/to/yourfile.sql;</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4. 重新启动服务</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">service nginx reload\r\nuwwsgi --ini /home/mysite_uwsgi/mysite/ini</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 到这里，我的博客已经部署完成。由于目前没有域名，所以采用了取巧的方式，可以通过 <strong>github pages&nbsp;</strong>跳转到本博客。附上&nbsp;<a href=\"http://herschel-ma.github.io\">Herschel 的 github pages 地址</a></p>','2020-03-25 22:56:57.926000','2020-03-26 12:12:08.989126',1,4),(103,'promise 链式调用','<h4>链式调用的原理&nbsp;</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;之前我们知道<strong> jQuery</strong> 可以实现链式调用，因为其下一次调用时，会将 <strong>this</strong> 传出去。那么 promise 如何实现链式调用呢？其实可以返回一个新的 Promise 对象，这样就可以实现了（.then.then()）。&nbsp;附：&nbsp;<a href=\"https://promisesaplus.com/\">promise 文档</a></p>\r\n\r\n<p>为什么返回 promise 而不是 this？</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; jQuery 返回的是 this，但是假如 Promise 返回的也是 this，就是同一个 Promise，它的状态就是一样的，达不到通过状态，比如成功态走成功方法，失败态走失败方法的效果。</p>\r\n\r\n<h4>原生 Promise 的使用</h4>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; 尝试下原生的 Promise</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1. 返回的结果是一个普通值</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">let promise = new Promise((resolve, reject) =&gt; {\r\n    // throw Error(\'paole\');\r\n    // 普通值意味着不是一个promise, 普通值可以是数字，undefined等等\r\n    resolve(\'value\');  \r\n})\r\n\r\npromise.then(data =&gt; {\r\n    // 将数据直接返回。\r\n    // then方法中可以返回一个值（普通值）会把这个结果放到下一个then的成功的回调中\r\n    return data  \r\n}, err =&gt; {\r\n    console.log(err);\r\n}).then(data=&gt;{\r\n    console.log(data);\r\n})</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;结果是这样的：</p>\r\n\r\n<blockquote>[Running] node &quot;e:\\LearnVue\\09-promise\\tempCodeRunnerFile.js&quot;<br />\r\nvalue<br />\r\n[Done] exited with code=0 in 0.715 seconds</blockquote>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;2. 返回的结果是 Promise 对象（成功态）</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">let promise = new Promise((resolve, reject) =&gt; {\r\n    // throw Error(\'paole\');\r\n    // 普通值意味着不是一个promise, 普通值可以是数字，undefined等等\r\n    resolve(\'value\');  \r\n})\r\n\r\npromise.then(data =&gt; {// error的写法也类似，只能成功或者失败 ondulfilled|onrejected\r\n    return data  \r\n}, err =&gt; {\r\n    console.log(err);\r\n}).then(data=&gt;{\r\n    return new Promise((resolve) =&gt; {// 假如返回的是promise对象，采用promise的结果\r\n        setTimeout(()=&gt;{\r\n            resolve(\'hello\');\r\n        }, 1000)\r\n    })\r\n}).then(data =&gt; {\r\n    console.log(data)\r\n})</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结果是这样的：</p>\r\n\r\n<blockquote>\r\n<p>[Running]&nbsp;node&nbsp;&quot;e:\\LearnVue\\09-promise\\tempCodeRunnerFile.js&quot;</p>\r\n\r\n<p>hello</p>\r\n\r\n<p>&nbsp;</p>\r\n</blockquote>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;2. 返回的结果是 Promise 对象（失败态）</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;失败态也是一样的，将 promise 的结果在下一次 then 失败态调用。但如果在失败的函数中返回普通值，undefined，或者是 promise , 则下一次调用的时候是在外层的 promise 的成功中，不赘述了，很简单。</p>\r\n\r\n<h4>小总结</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 什么时候走成功什么时候走失败？</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;成功：返回的是一个成功的 promise 或者普通值。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;失败：返回的是一个失败的 promise 或者抛出异常。</p>\r\n\r\n<h4>自定义 Promise</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 根据官网规范进行自定义。</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">const PENDING = \"PENDING\"   //人家叫宏变量（初始状态，等待态）\r\nconst SUCCESS = \"SUCCESS\"\r\nconst FAILED = \"FAILED\"\r\n\r\n// 判断promise2是走成功还是失败态\r\nfunction resolvePromise(promise2, x, resolve, reject){\r\n    if (promise2 === x){\r\n        return reject(new TypeError(\'promise2 and x is one object\'))\r\n    }\r\n    if ((typeof x === \'object\' &amp;&amp; x != null) || typeof x === \'function\'){\r\n        try {\r\n            let then = x.then;\r\n            if (typeof then === \'function\'){\r\n                then.call(x,(y)=&gt;{\r\n                    resolve(y)\r\n                },(reason)=&gt;{\r\n                    reject(reason)\r\n                })\r\n            }else{\r\n                resolve(x)\r\n            }\r\n        } catch (e) {\r\n            reject(e)\r\n        }\r\n    }else{\r\n        reject(x)\r\n    }\r\n}\r\nclass Promise {\r\n    constructor(executor) {\r\n        // resolve和reject就两个箭头函数，this指向向爸爸要\r\n        this.status = PENDING;\r\n        this.value = undefined;\r\n        this.reason = undefined;\r\n        // 成功的异步回调函数\r\n        this.SucessCallbacks = []\r\n        // 失败的异步回调函数\r\n        this.FailedCallbacks = []\r\n        let resolve = (value) =&gt; {\r\n            if (this.status === PENDING) {\r\n                this.value = value;\r\n                this.status = SUCCESS;\r\n                //需要让成功的方法依次执行\r\n                this.SucessCallbacks.forEach((fn)=&gt;{fn();})\r\n            }\r\n        };\r\n        let reject = (reason) =&gt; {\r\n            if (this.status === PENDING) {\r\n                this.reason = reason;\r\n                this.status = FAILED;\r\n                this.FailedCallbacks.forEach((fn)=&gt;{fn();})\r\n            }\r\n        };\r\n        try {\r\n            executor(resolve, reject); //executor 会默认执行（理解为包resolve，reject的那函数/容器）\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    };\r\n    then(onfulfilled, onrejected) {\r\n        let promise2 = new Promise((resolve, reject)=&gt;{\r\n            if (this.status === SUCCESS) {\r\n                // 调用 then 方法的时候，返回的可能是普通值，\r\n                // 也可能是 promise 或者抛出异常，所以需要判断x的类型\r\n                setTimeout(()=&gt;{// 异步执行，避免promise2 undefied 错误\r\n                    try{\r\n                        let x = onfulfilled(this.value);\r\n                        resolvePromise(promise2, x, resolve, reject);// 将promise调用onfulfilled的结果resolve回去\r\n                    }catch(e){// 一旦调用then失败，就会走到promise2的reject中\r\n                        reject(e);\r\n                    }\r\n                }, 0)\r\n            };\r\n            if (this.status === FAILED) {\r\n                setTimeout(()=&gt;{\r\n                    try {\r\n                        let x = onrejected(this.value);\r\n                        resolvePromise(promise2, x, resolve, reject);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 0)\r\n            };\r\n            if (this.status === PENDING){\r\n                this.SucessCallbacks.push(()=&gt;{\r\n                    try{\r\n                        let x = onfulfilled(this.value);\r\n                        resolvePromise(promise2, x, resolve, reject);\r\n                    }catch(e){\r\n                        reject(e);\r\n                    }\r\n                });\r\n                this.FailedCallbacks.push(()=&gt;{\r\n                    try {\r\n                        let x = onrejected(this.value);\r\n                        resolvePromise(promise2, x, resolve, reject);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        return promise2;\r\n    };\r\n}\r\n\r\nmodule.exports = Promise;</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 在简单使用下，发现正常通过。</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">let Promise = require(\'./promise\');\r\nlet promise = new Promise((resolve, reject) =&gt; {\r\n    // 普通值意味着不是一个promise, 普通值可以是数字，undefined等等\r\n    resolve(\'value\')\r\n})\r\n\r\nlet promise2 = promise.then(() =&gt; {\r\n    return new Promise((resolve, reject) =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(\'value2\')\r\n        }, 1000);\r\n    })  \r\n    // return new Error(\'error\')\r\n})\r\npromise2.then((data)=&gt;{\r\n    console.log(data);\r\n}, err =&gt; {\r\n    console.log(err);\r\n})</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 但是假如返回的 promise 它的 resolve 也是promise呢，这时候需要在 then 里面一直解析 x ,直到它是一个普通值。</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">// 掉用方\r\nlet Promise = require(\'./promise\');\r\nlet promise = new Promise((resolve, reject) =&gt; {\r\n    // throw Error(\'paole\');\r\n    // 普通值意味着不是一个promise, 普通值可以是数字，undefined等等\r\n    resolve(\'value\')\r\n})\r\n\r\nlet promise2 = promise.then(() =&gt; {// error的写法也类似，只能成功或者失败 ondulfilled|onrejected\r\n    // 将数据直接返回\r\n    // then方法中可以返回一个值（不是promise），会把这个结果放到下一个then的成功的回调中\r\n    return new Promise((resolve, reject) =&gt; {\r\n        resolve(new Promise((resolve, reject)=&gt;{\r\n            setTimeout(()=&gt;{\r\n                resolve(\'hello!\')\r\n            },1000)\r\n        }))\r\n    })  \r\n})\r\npromise2.then().then((data)=&gt;{\r\n    console.log(\'====&gt;\'+data);\r\n}, err =&gt; {\r\n    console.log(err);\r\n})</code></pre>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">// 改造的 Promise 类\r\nconst PENDING = \"PENDING\"   //人家叫宏变量（初始状态，等待态）\r\nconst SUCCESS = \"SUCCESS\"\r\nconst FAILED = \"FAILED\"\r\n\r\n// 判断promise2是走成功还是失败态\r\nfunction resolvePromise(promise2, x, resolve, reject) {\r\n    let called;\r\n    if (promise2 === x) {\r\n        return reject(new TypeError(\'promise2 and x is one object\'))\r\n    }\r\n    if ((typeof x === \'object\' &amp;&amp; x != null) || typeof x === \'function\') {\r\n        try {\r\n            let then = x.then;\r\n            if (typeof then === \'function\') {\r\n                then.call(x, y =&gt; {// 只取一次，当前promise解析出来的结果可能还是一个promise\r\n                    // 继续解析直到它是一个普通值为止 \r\n                    // resolve(y)\r\n                    resolvePromise(promise2, y, resolve, reject)\r\n                }, r =&gt; {\r\n                    if (called) return\r\n                    reject(r)\r\n                })\r\n            } else {\r\n                if (called) return\r\n                resolve(x)\r\n            }\r\n        } catch (e) {\r\n            reject(e)\r\n        }\r\n    } else {\r\n        if (called) return\r\n        resolve(x)\r\n    }\r\n}\r\nclass Promise {\r\n    constructor(executor) {\r\n        // resolve和reject就两个箭头函数，this指向向爸爸要\r\n        this.status = PENDING;\r\n        this.value = undefined;\r\n        this.reason = undefined;\r\n        // 成功的异步回调函数\r\n        this.SucessCallbacks = []\r\n        // 失败的异步回调函数\r\n        this.FailedCallbacks = []\r\n        let resolve = (value) =&gt; {\r\n            if (this.status === PENDING) {\r\n                this.value = value;\r\n                this.status = SUCCESS;\r\n                //需要让成功的方法依次执行\r\n                this.SucessCallbacks.forEach((fn) =&gt; { fn(); })\r\n            }\r\n        };\r\n        let reject = (reason) =&gt; {\r\n            if (this.status === PENDING) {\r\n                this.reason = reason;\r\n                this.status = FAILED;\r\n                this.FailedCallbacks.forEach((fn) =&gt; { fn(); })\r\n            }\r\n        };\r\n        try {\r\n            executor(resolve, reject); //executor 会默认执行（理解为包resolve，reject的那函数/容器）\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    };\r\n    then(onfulfilled, onrejected) {\r\n        let promise2 = new Promise((resolve, reject) =&gt; {\r\n            onfulfilled = typeof onfulfilled === \'function\' ? onfulfilled:v=&gt;v\r\n            onrejected = typeof onrejected === \'function\' ? onrejected:e=&gt;{throw e}\r\n            if (this.status === SUCCESS) {\r\n                // 调用 then 方法的时候，返回的可能是普通值，\r\n                // 也可能是 promise 或者抛出异常，所以需要判断x的类型\r\n                setTimeout(() =&gt; {// 异步执行，避免promise2 undefied 错误\r\n                    try {\r\n                        let x = onfulfilled(this.value);\r\n                        resolvePromise(promise2, x, resolve, reject);// 将promise调用onfulfilled的结果resolve回去\r\n                    } catch (e) {// 一旦调用then失败，就会走到promise2的reject中\r\n                        reject(e);\r\n                    }\r\n                }, 0)\r\n            };\r\n            if (this.status === FAILED) {\r\n                setTimeout(() =&gt; {\r\n                    try {\r\n                        let x = onrejected(this.value);\r\n                        resolvePromise(promise2, x, resolve, reject);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 0)\r\n            };\r\n            if (this.status === PENDING) {\r\n                this.SucessCallbacks.push(() =&gt; {\r\n                    try {\r\n                        let x = onfulfilled(this.value);\r\n                        resolvePromise(promise2, x, resolve, reject);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    }\r\n                });\r\n                this.FailedCallbacks.push(() =&gt; {\r\n                    try {\r\n                        let x = onrejected(this.value);\r\n                        resolvePromise(promise2, x, resolve, reject);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        return promise2;\r\n    };\r\n}\r\n\r\nmodule.exports = Promise;</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 结果是可喜的，表示我们自定义 Promise 库成功了~</p>\r\n\r\n<blockquote>\r\n<p>[Running]&nbsp;node&nbsp;&quot;e:\\LearnVue\\09-promise\\Userpromis.js&quot;</p>\r\n\r\n<p>====&gt;hello!</p>\r\n\r\n<p>[Done]&nbsp;</p>\r\n</blockquote>','2020-03-26 20:31:01.832977','2020-03-30 08:08:56.210874',1,3),(104,'Promise 周边方法','<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;讲真的，能够安下心来学习下几个笔记是真的难，且不说游戏的影响，就拿工作来说，要是进行的顺利，那还好点，可以挤出来一点时间去学，但若是工作贼忙，解决起来超费时间，所有的精力就都放在工作上了，真的是么得时间，4 月份还没有开始第一篇博客呢，今晚就开张吧。</p>\r\n\r\n<h4>Promise 解决问题</h4>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 前面好像提到过 Promise 是为了解决嵌套使用，回调地狱啥的。现在假设我们有两个文件，第一个文件里的内容是第二个文件的文件名，我们要拿到第二个文件里面的数据，你会怎么做呢？</p>\r\n\r\n<blockquote>\r\n<p># name.txt</p>\r\n\r\n<p>age.txt</p>\r\n</blockquote>\r\n\r\n<blockquote>\r\n<p># age.txt</p>\r\n\r\n<p>22&nbsp;</p>\r\n</blockquote>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 我们先来查看一波 node.js 读取文件的API：</p>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2020/04/06/readfile_2020-04-06_22-17-16.png\" style=\"height:450px; width:700px\" /></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我可能会这么做：</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">let fs = require(\'fs\')\r\n\r\nfs.readFile(\'./name.txt\', \'utf8\',(err, data)=&gt;{\r\n    fs.readFile(data, \'utf8\', (err, data)=&gt;{\r\n        console.log(data)\r\n    })\r\n})</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 用 Promise 解决呢？我之前学过 Promise 的链式调用，现在看来这里用很合适呀！</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">let fs = require(\'fs\')\r\n\r\nfunction read(...args){\r\n    return new Promise((resolve, reject)=&gt;{\r\n        fs.readFile(...args, function(err, data){\r\n            if(err){reject(err)}\r\n            resolve(data)\r\n        })\r\n    })\r\n}\r\nread(\'./name.txt\', \'utf8\').then(data=&gt;{\r\n    return read(data,\'utf8\')\r\n}).then(data=&gt;{\r\n    console.log(data)\r\n}).catch(err=&gt;{\r\n        console.log(err)\r\n    })</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;解读一下，这里把 readFile 方法用 Promise&nbsp;进行了一层封装，假设我们要调用 read 方法读取文件内容，为了满足需求，我们返回一个新的 Promise 来进行链式调用达到目的。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 那能不能直接把 fs.readFile 方法变成 Promise 的形式呢？ node 里面已经有把一个方法 Promise 话的库了，是这样使用的：</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">let fs = require(\'fs\')\r\nlet {promisify} = require(\'util\')\r\n\r\nreadFile = promisify(fs.readFile)\r\nreadFile(\'./name.txt\', \'utf8\').then(data=&gt;{\r\n    return readFile(data,\'utf8\')\r\n}).then(data=&gt;{\r\n    console.log(data)\r\n}).catch(err=&gt;{\r\n        console.log(err)\r\n    })</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 现在我们自己实现下将 fs.readFile 方法 Promise 化的方法，感觉像是 python 的装饰器（注意传的参数的位置）,高阶函数保存一个变量将函数变得更具体：</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">let fs = require(\'fs\')\r\n// let {promisify} = require(\'util\')\r\nfunction promisify(fn){// readFile 返回一个函数，参数是一个函数\r\n    return function(...args){// 返回一个Promise\r\n        return new Promise((resolve, reject) =&gt; {\r\n            fn(...args, (err, data)=&gt;{//本身的callback\r\n                if(err){reject(err)}\r\n                resolve(data)\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nreadFile = promisify(fs.readFile)\r\nreadFile(\'./name.txt\', \'utf8\').then(data=&gt;{\r\n    return readFile(data,\'utf8\')\r\n}).then(data=&gt;{\r\n    console.log(data)\r\n}).catch(err=&gt;{\r\n        console.log(err)\r\n    })</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;困得不行了，剩下的明天再说...</p>','2020-04-06 23:45:05.592373','2020-04-06 23:45:05.592531',1,3),(105,'令人目眩的条件语句','<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 最近真是被各种事烦的不轻，也总是被别的事情耽误我这仅存的抒心方式。就在今天，我竟然忘打卡了，虽然不是什么大事，但是可见我精神萎靡了。好了，进入正题，昨天看见了一篇文章，讲的是 python 中条件语句的写法，好像讲了 7 种吧，感觉还不错，所以总结下留个纪念吧，嘻嘻。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 下面我就按原文的例子来吧，懒得改了，也比较通俗易懂。这是一段判断一个人是否成年的代码。这几种写法，python2 和 python3 都应该可以使用，已经证明了哈，并且我在protobuffer的源码中见到过...and...or...的这种写法， come on, baby~</p>\r\n\r\n<h4>No.1 原始写法&nbsp;</h4>\r\n\r\n<pre>\r\n<code class=\"language-python\">if age &gt; 18:\r\n    return \'已成年\'\r\nelse:\r\n    return \'未成年\'</code></pre>\r\n\r\n<h4>No.2 if...else</h4>\r\n\r\n<p>语法：</p>\r\n\r\n<blockquote>\r\n<p>&lt;on_true&gt; if &lt;condition&gt; else &lt;onf_false&gt;</p>\r\n</blockquote>\r\n\r\n<p>例子：</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">age = 10\r\nmsg = \"已成年“ if age&gt;18 else \"未成年\"\r\nprint(msg)  # 未成年</code></pre>\r\n\r\n<h4>No.3 and...or</h4>\r\n\r\n<p>语法：</p>\r\n\r\n<blockquote>\r\n<p>&lt;expression&gt; and &lt;on_true&gt; or &lt;on_false&gt;</p>\r\n</blockquote>\r\n\r\n<p>例子：</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">age = 10 \r\nmsg = age &gt; 18 and \"已成年\" or \"未成年\"  # 未成年</code></pre>\r\n\r\n<h4>No.4 (..., ...)[...]</h4>\r\n\r\n<p>语法：</p>\r\n\r\n<blockquote>\r\n<p>(&lt;on_false&gt;, &lt;on_true&gt;)[condition]</p>\r\n</blockquote>\r\n\r\n<p>例子：</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">age = 10\r\nmsg = (\'未成年\', \'已成年\')[age&gt;18]  # 未成年</code></pre>\r\n\r\n<h4>No.5 (lambda..., lambda...)[...]()</h4>\r\n\r\n<p>语法：</p>\r\n\r\n<blockquote>\r\n<p>(lambda: &lt;on_false&gt;, lambda: &lt;on_true&gt;)[condition]()</p>\r\n</blockquote>\r\n\r\n<p>例子：</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">age = 20\r\nmsg = (lambda:\"未成年\", lambda:\"已成年\")[age&gt;18]()  # 已成年</code></pre>\r\n\r\n<h4>No.6&nbsp; {True:..., False:...}[condition]</h4>\r\n\r\n<p>语法：</p>\r\n\r\n<blockquote>\r\n<p>&nbsp;&nbsp;{True:&lt;on_true&gt;, False:&lt;on_false&gt;}[condition]</p>\r\n</blockquote>\r\n\r\n<p>例子：</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">age = 13\r\nmsg = {True:\"已成年\", False:\"未成年\"}[age&gt;18]  # 未成年</code></pre>\r\n\r\n<h4>No.7 ((...)and(...)or(....))[0]</h4>\r\n\r\n<p>语法：</p>\r\n\r\n<blockquote>\r\n<p>((condition) and (&lt;on_true&gt;) or (&lt;on_false&gt;))[0]</p>\r\n</blockquote>\r\n\r\n<p>例子：</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">age = 55\r\nmsg = ((age &gt; 18) and (\"已成年\", ) or (\"未成年\", ))[0]  # 已成年\r\nassert msg == \"已成年\"  # True</code></pre>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 怎么样，好玩不？</p>','2020-04-15 23:33:53.943117','2020-04-16 15:56:44.670765',1,5),(106,'聊聊 go 中的模板继承','<p>本来想写一写 python 中的数据处理的库 numpy，因为今天有人用到，而我好久不接触就有些忘了。但是一查API，感觉写起来毫无乐趣可言，就不写了吧，只记录下是用到了啥。1. numpy.random.choice(array, size=None, replace=None,&nbsp;p=None)，如若日后相忘，请找<a href=\"https://blog.csdn.net/ImwaterP/article/details/96282230\">这篇博文</a>。2. 数组降维，numpy.ravel()，如若日后相忘，请找<a href=\"https://www.jianshu.com/p/f9b5fd252c78\">这篇博文</a>。好了，进入今天的正题。</p>\r\n\r\n<h4>Python 中 Django 的模板继承</h4>\r\n\r\n<p>Django 中使用模板继承非常简单。以下描述和案例摘自<a href=\"https://docs.djangoproject.com/en/3.0/\">官网</a>。</p>\r\n\r\n<h3>Template inheritance<a href=\"https://docs.djangoproject.com/en/3.0/ref/templates/language/#template-inheritance\" title=\"Permalink to this headline\">&para;</a></h3>\r\n\r\n<p>The most powerful &ndash; and thus the most complex &ndash; part of Django&rsquo;s template engine is template inheritance. Template inheritance allows you to build a base &ldquo;skeleton&rdquo; template that contains all the common elements of your site and defines&nbsp;<strong>blocks</strong>&nbsp;that child templates can override.</p>\r\n\r\n<p>Let&rsquo;s look at template inheritance by starting with an example:</p>\r\n\r\n<pre>\r\n<code class=\"language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\r\n    &lt;title&gt;{% block title %}My amazing site{% endblock %}&lt;/title&gt;\r\n&lt;/head&gt;\r\n\r\n&lt;body&gt;\r\n    &lt;div id=\"sidebar\"&gt;\r\n        {% block sidebar %}\r\n        &lt;ul&gt;\r\n            &lt;li&gt;&lt;a href=\"/\"&gt;Home&lt;/a&gt;&lt;/li&gt;\r\n            &lt;li&gt;&lt;a href=\"/blog/\"&gt;Blog&lt;/a&gt;&lt;/li&gt;\r\n        &lt;/ul&gt;\r\n        {% endblock %}\r\n    &lt;/div&gt;\r\n\r\n    &lt;div id=\"content\"&gt;\r\n        {% block content %}{% endblock %}\r\n    &lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n\r\n<p>This template, which we&rsquo;ll call&nbsp;<code>base.html</code>, defines an HTML skeleton document that you might use for a two-column page. It&rsquo;s the job of &ldquo;child&rdquo; templates to fill the empty blocks with content.</p>\r\n\r\n<p>In this example, the&nbsp;<a href=\"https://docs.djangoproject.com/en/3.0/ref/templates/builtins/#std:templatetag-block\"><code>block</code></a>&nbsp;tag defines three blocks that child templates can fill in. All the&nbsp;<a href=\"https://docs.djangoproject.com/en/3.0/ref/templates/builtins/#std:templatetag-block\"><code>block</code></a>&nbsp;tag does is to tell the template engine that a child template may override those portions of the template.</p>\r\n\r\n<p>A child template might look like this:</p>\r\n\r\n<pre>\r\n<code class=\"language-markup\">{% extends \"base.html\" %}\r\n\r\n{% block title %}My amazing blog{% endblock %}\r\n\r\n{% block content %}\r\n{% for entry in blog_entries %}\r\n    &lt;h2&gt;{{ entry.title }}&lt;/h2&gt;\r\n    &lt;p&gt;{{ entry.body }}&lt;/p&gt;\r\n{% endfor %}\r\n{% endblock %}</code></pre>\r\n\r\n<p>&nbsp;接下来我说了吧，子模板会将父模板中预留的块重新添加。</p>\r\n\r\n<h4>Python中 Flask 的模板继承</h4>\r\n\r\n<p>&nbsp;Flask 和 Django 中类似，不再赘述。</p>\r\n\r\n<h4>Golang 部分 API 科普</h4>\r\n\r\n<p><s>一股倦意袭来，明日再战！</s>&nbsp;</p>\r\n\r\n<p>来看看官网<a href=\"http://docscn.studygolang.com/pkg/text/template/#Template\">template</a>的描述:</p>\r\n\r\n<h3>func&nbsp;<a href=\"http://docscn.studygolang.com/src/text/template/helper.go?s=576:619#L11\">Must</a></h3>\r\n\r\n<pre>\r\nfunc Must(t *<a href=\"http://docscn.studygolang.com/pkg/text/template/#Template\">Template</a>, err <a href=\"http://docscn.studygolang.com/pkg/builtin/#error\">error</a>) *<a href=\"http://docscn.studygolang.com/pkg/text/template/#Template\">Template</a></pre>\r\n\r\n<p>Must is a helper that wraps a call to a function returning (*Template, error) and panics if the error is non-nil. It is intended for use in variable initializations such as</p>\r\n\r\n<pre>\r\nvar t = template.Must(template.New(&quot;name&quot;).Parse(&quot;text&quot;))</pre>\r\n\r\n<h4>Golang 中的模板继承</h4>\r\n\r\n<p>咱自己搭的博客，爱其如子，分享下这篇话题的来源与教程：<a href=\"https://github.com/bonfy/go-mega\">Go web course</a>。其实 Go 的模板应该没有 Flask <code>jinja2</code> 这样的功能强大，它只有 include，所以为了实现模板的继承，我们需要发挥下主观能动性。</p>\r\n\r\n<pre>\r\n<code class=\"language-go\">func PopulateTemplates() map[string]*template.Template {\r\n	const basePath = \"templates\"\r\n	result := make(map[string]*template.Template)\r\n\r\n	layout := template.Must(template.ParseFiles(basePath + \"/_base.html\"))\r\n	dir, err := os.Open(basePath + \"/content\")\r\n	if err != nil {\r\n		panic(\"Failed to open template blocks directory: \" + err.Error())\r\n	}\r\n	fis, err := dir.Readdir(-1)\r\n	if err != nil {\r\n		panic(\"Failed to read contents of content directory: \" + err.Error())\r\n	}\r\n	for _, fi := range fis {\r\n		func() {\r\n			f, err := os.Open(basePath + \"/content/\" + fi.Name())\r\n			if err != nil {\r\n				panic(\"Failed to open template \'\" + fi.Name() + \"\'\")\r\n			}\r\n			defer f.Close()\r\n			content, err := ioutil.ReadAll(f)\r\n			if err != nil {\r\n				panic(\"Failed to read content from file \'\" + fi.Name() + \"\'\")\r\n			}\r\n			tmpl := template.Must(layout.Clone())\r\n			_, err = tmpl.Parse(string(content))\r\n			if err != nil {\r\n				panic(\"Failed to parse contents of \'\" + fi.Name() + \"\' as template\")\r\n			}\r\n			result[fi.Name()] = tmpl\r\n		}()\r\n	}\r\n	return result\r\n}\r\n</code></pre>\r\n\r\n<p>这个函数（我也看不懂哇）的作用是 遍历 templates/content/ 文件夹下的所有文件，并和 templates/_base.html 合成 template.Template，然后再存入 map 中(在 Python 中一般叫 dict)，可以使用例如 index.html 的 key 来访问。</p>','2020-04-20 23:21:15.719751','2020-04-22 21:23:58.054937',1,6),(107,'开启 Java 之旅','<p>我为什么要开始 Java 之旅呢？其实这是第一次我自己这样问自己，或许是迫于环境的压力吧，又或许是别的原因吧，反正学习Java, 势在必行。有的人可能会说，你学那么多，那么杂，有用么？答案是肯定的，在 IT 界摸爬滚打，你敢说自己不会 Java 吗？所以这门技术，不论修的精不精，必须修。况且，基本了解了Golang，Javascript, Python等编程语言的规范、运作，上手另一门语言不是什么难事，这点信心还是有的。还有我深知杂而不精的道理，我也深切体会到学习的乐趣，远比什么王者荣耀更直击人灵魂。还有我想总结下关于这种东西的学习，无非就是见多识广，触类旁通罢了。经常有这样的声音传到我耳朵里，你广看有什么用啊？你去敲啊。话糙理不糙，是的呀，学习就是一个试错的过程，当然敲只是狭义的说法，是要多试错。算了，不多说了，说多了你们也不愿意看懂。</p>\r\n\r\n<h4>字节输出流到文件</h4>\r\n\r\n<p>Module&nbsp; <a href=\"../../java.base-summary.html\">java.base</a></p>\r\n\r\n<p>软件包&nbsp; <a href=\"../../java/io/package-summary.html\">java.io</a></p>\r\n\r\n<h4>Class OutputStream</h4>\r\n\r\n<ul>\r\n	<li><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">java.lang.Object</a></li>\r\n	<li>\r\n	<ul>\r\n		<li>java.io.OutputStream</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<p>All Implemented Interfaces:</p>\r\n\r\n	<p><code><a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></code> ， <code><a href=\"../../java/io/Flushable.html\" title=\"interface in java.io\">Flushable</a></code> ， <code><a href=\"../../java/lang/AutoCloseable.html\" title=\"interface in java.lang\">AutoCloseable</a></code></p>\r\n\r\n	<p>已知直接子类：</p>\r\n\r\n	<p><code><a href=\"../../java/io/ByteArrayOutputStream.html\" title=\"class in java.io\">ByteArrayOutputStream</a></code> ， <code><a href=\"../../java/io/FileOutputStream.html\" title=\"class in java.io\">FileOutputStream</a></code> ， <code><a href=\"../../java/io/FilterOutputStream.html\" title=\"class in java.io\">FilterOutputStream</a></code> ， <code><a href=\"../../java/io/ObjectOutputStream.html\" title=\"class in java.io\">ObjectOutputStream</a></code> ， <code><a href=\"../../org/omg/CORBA/portable/OutputStream.html\" title=\"class in org.omg.CORBA.portable\">OutputStream</a></code> ， <code><a href=\"../../java/io/PipedOutputStream.html\" title=\"class in java.io\">PipedOutputStream</a></code></p>\r\n\r\n	<hr />&nbsp;\r\n	<pre>\r\npublic abstract class OutputStream\r\nextends <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>\r\nimplements <a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a>, <a href=\"../../java/io/Flushable.html\" title=\"interface in java.io\">Flushable</a></pre>\r\n	这个抽象类是表示字节输出流的所有类的超类。 输出流接收输出字节并将其发送到某个接收器。\r\n\r\n	<p>需要定义<code>OutputStream</code>子类的应用程序必须至少提供一个写入一个字节输出的方法。</p>\r\n	</li>\r\n</ul>\r\n\r\n<h4>Class FileOutputStream</h4>\r\n\r\n<ul>\r\n	<li><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">java.lang.Object</a></li>\r\n	<li>\r\n	<ul>\r\n		<li><a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">java.io.OutputStream</a></li>\r\n		<li>\r\n		<ul>\r\n			<li>java.io.FileOutputStream</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n	<li>\r\n	<p>All Implemented Interfaces:</p>\r\n\r\n	<p><code><a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></code> ， <code><a href=\"../../java/io/Flushable.html\" title=\"interface in java.io\">Flushable</a></code> ， <code><a href=\"../../java/lang/AutoCloseable.html\" title=\"interface in java.lang\">AutoCloseable</a></code></p>\r\n\r\n	<hr />&nbsp;\r\n	<pre>\r\npublic class FileOutputStream\r\nextends <a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">OutputStream</a></pre>\r\n	文件输出流是用于将数据写入<code>File</code>或<code>FileDescriptor</code>的输出流。 文件是否可用或可能被创建取决于底层平台。 特别是某些平台允许一次只能打开一个文件来写入一个<code>FileOutputStream</code> （或其他文件写入对象）。 在这种情况下，如果所涉及的文件已经打开，则此类中的构造函数将失败。\r\n\r\n	<p><code>FileOutputStream</code>用于写入诸如图像数据的原始字节流。 要编写字符流，请考虑使用<code>FileWriter</code> 。</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>以上就是 jdk 1.9 对字节输出流的描述，本篇将用他们实现字节输出流到文件。</p>\r\n\r\n<h4>代码实现</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic04;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\n\r\npublic class Basic04FileOutputStream {\r\n    public static void main(String[] args) throws IOException {\r\n        /*使用后要释放资源，清空内存（流的使用会占用一定的内存）*/\r\n        FileOutputStream fos = new FileOutputStream(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic04\\\\TestOutputStream.txt\");\r\n        fos.write(\'b\');\r\n        fos.close();\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<p>OK，TestOutputStream.txt 文件中保存了一个字节，假如我们要写多个字节呢？请看下文。</p>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<td><code>void</code></td>\r\n					<th scope=\"row\"><code><a href=\"../../java/io/FileOutputStream.html#write-byte:A-\">write</a>​(byte[]&nbsp;b)</code></th>\r\n					<td>\r\n					<p>将 <code>b.length</code>字节从指定的字节数组写入此文件输出流。</p>\r\n					</td>\r\n				</tr>\r\n				<tr>\r\n					<td><code>void</code></td>\r\n					<th scope=\"row\"><code><a href=\"../../java/io/FileOutputStream.html#write-byte:A-int-int-\">write</a>​(byte[]&nbsp;b, int&nbsp;off, int&nbsp;len)</code></th>\r\n					<td>\r\n					<p>将 <code>len</code>字节从指定的字节数组开始，从偏移量 <code>off</code>开始写入此文件输出流。</p>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic04;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\n\r\npublic class Basic04FileOutputStreamMoreByte {\r\n    public static void main(String[] args) throws IOException {\r\n        FileOutputStream fos = new FileOutputStream(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic04\\\\TestOutputStream.txt\");\r\n        byte[] b = {49,48,48};\r\n        fos.write(b);\r\n        fos.write(b, 1, 2);\r\n        fos.close();\r\n    }\r\n}\r\n/*\r\nTestOutputStream.txt 10000\r\n*/</code></pre>\r\n\r\n<p>利用字符串的 getBytes() 方法将中文转化为字节数组！</p>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic04;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.util.Arrays;\r\n\r\npublic class Basic04FileOutputStreamMoreByte {\r\n    public static void main(String[] args) throws IOException {\r\n        FileOutputStream fos = new FileOutputStream(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic04\\\\TestOutputStream.txt\");\r\n        byte[] b = {49,48,48};\r\n        fos.write(b);\r\n        fos.write(b, 1, 2);\r\n        /*使用字符串的方法获取到字节数组并输出*/\r\n        byte[] c = \"加油\".getBytes();\r\n        System.out.println(Arrays.toString(c));\r\n        fos.write(c);\r\n        fos.close();\r\n    }\r\n}\r\n/*[-27, -118, -96, -26, -78, -71], utf-8编码，3个字节代表一个中文\r\n* TestOutputStream.txt\r\n* 10000加油*/\r\n</code></pre>\r\n\r\n<h4>追加和换行</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic04;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.util.Arrays;\r\n\r\npublic class Basic04FileOutputStreamAppendAndLine {\r\n    public static void main(String[] args) throws IOException {\r\n        FileOutputStream fos = new FileOutputStream(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\" +\r\n                \"\\\\Basic04\\\\TestOutputStream.txt\",true);\r\n        /*使用字符串的方法获取到字节数组并输出*/\r\n        byte[] c = \"加油\".getBytes();\r\n        System.out.println(Arrays.toString(c));\r\n        for (int i = 0; i &lt; 5; i++) {\r\n            fos.write(c);\r\n            fos.write(\"\\r\\n\".getBytes());\r\n        }\r\n        fos.close();\r\n    }\r\n}\r\n/*10000加油加油\r\n加油\r\n加油\r\n加油\r\n加油*/\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>','2020-05-08 22:58:15.678882','2020-05-08 23:01:19.421294',1,7),(108,'字符流','<h4>字符输入流</h4>\r\n\r\n<p>*Reader</p>\r\n\r\n<h4>Class Reader</h4>\r\n\r\n<ul>\r\n	<li><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">java.lang.Object</a></li>\r\n	<li>\r\n	<ul>\r\n		<li>java.io.Reader</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<p>All Implemented Interfaces:</p>\r\n\r\n	<p><code><a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></code> ， <code><a href=\"../../java/lang/AutoCloseable.html\" title=\"interface in java.lang\">AutoCloseable</a></code> ， <code><a href=\"../../java/lang/Readable.html\" title=\"interface in java.lang\">Readable</a></code></p>\r\n\r\n	<p>已知直接子类：</p>\r\n\r\n	<p><code><a href=\"../../java/io/BufferedReader.html\" title=\"class in java.io\">BufferedReader</a></code> ， <code><a href=\"../../java/io/CharArrayReader.html\" title=\"class in java.io\">CharArrayReader</a></code> ， <code><a href=\"../../java/io/FilterReader.html\" title=\"class in java.io\">FilterReader</a></code> ， <code><a href=\"../../java/io/InputStreamReader.html\" title=\"class in java.io\">InputStreamReader</a></code> ， <code><a href=\"../../java/io/PipedReader.html\" title=\"class in java.io\">PipedReader</a></code> ， <code><a href=\"../../java/io/StringReader.html\" title=\"class in java.io\">StringReader</a></code> ， <code><a href=\"../../jdk/nashorn/api/scripting/URLReader.html\" title=\"class in jdk.nashorn.api.scripting\">URLReader</a></code></p>\r\n\r\n	<hr />&nbsp;\r\n	<pre>\r\npublic abstract class Reader\r\nextends <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>\r\nimplements <a href=\"../../java/lang/Readable.html\" title=\"interface in java.lang\">Readable</a>, <a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></pre>\r\n\r\n	<p>用于读取字符流的抽象类。 子类必须实现的唯一方法是read（char []，int，int）和close（）。 然而，大多数子类将覆盖这里定义的一些方法，以便提供更高的效率，附加的功能或两者。</p>\r\n	</li>\r\n</ul>\r\n\r\n<h4>Class FilterReader</h4>\r\n\r\n<ul>\r\n	<li><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">java.lang.Object</a></li>\r\n	<li>\r\n	<ul>\r\n		<li><a href=\"../../java/io/Reader.html\" title=\"class in java.io\">java.io.Reader</a></li>\r\n		<li>\r\n		<ul>\r\n			<li>java.io.FilterReader</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<p>All Implemented Interfaces:</p>\r\n\r\n	<p><code><a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></code> ， <code><a href=\"../../java/lang/AutoCloseable.html\" title=\"interface in java.lang\">AutoCloseable</a></code> ， <code><a href=\"../../java/lang/Readable.html\" title=\"interface in java.lang\">Readable</a></code></p>\r\n\r\n	<p>已知直接子类：</p>\r\n\r\n	<p><code><a href=\"../../java/io/PushbackReader.html\" title=\"class in java.io\">PushbackReader</a></code></p>\r\n\r\n	<hr />&nbsp;\r\n	<pre>\r\npublic abstract class FilterReader\r\nextends <a href=\"../../java/io/Reader.html\" title=\"class in java.io\">Reader</a></pre>\r\n\r\n	<p>用于读取过滤后的字符流的抽象类。 抽象类<code>FilterReader</code>本身提供了将所有请求传递到包含的流的默认方法。 <code>FilterReader</code>子类应该覆盖这些方法中的一些，并且还可以提供其他方法和字段。</p>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>\r\n		<table>\r\n			<tbody>\r\n				<tr>\r\n					<th scope=\"col\">Modifier and Type</th>\r\n					<th scope=\"col\">方法</th>\r\n					<th scope=\"col\">描述</th>\r\n				</tr>\r\n				<tr>\r\n					<td><code>void</code></td>\r\n					<th scope=\"row\"><code><a href=\"../../java/io/FilterReader.html#close--\">close</a>​()</code></th>\r\n					<td>\r\n					<p>关闭流并释放与之相关联的任何系统资源。</p>\r\n					</td>\r\n				</tr>\r\n				<tr>\r\n					<td><code>void</code></td>\r\n					<th scope=\"row\"><code><a href=\"../../java/io/FilterReader.html#mark-int-\">mark</a>​(int&nbsp;readAheadLimit)</code></th>\r\n					<td>\r\n					<p>标记流中的当前位置。</p>\r\n					</td>\r\n				</tr>\r\n				<tr>\r\n					<td><code>boolean</code></td>\r\n					<th scope=\"row\"><code><a href=\"../../java/io/FilterReader.html#markSupported--\">markSupported</a>​()</code></th>\r\n					<td>\r\n					<p>告诉这个流是否支持mark（）操作。</p>\r\n					</td>\r\n				</tr>\r\n				<tr>\r\n					<td><code>int</code></td>\r\n					<th scope=\"row\"><code><a href=\"../../java/io/FilterReader.html#read--\">read</a>​()</code></th>\r\n					<td>\r\n					<p>读一个字符</p>\r\n					</td>\r\n				</tr>\r\n				<tr>\r\n					<td><code>int</code></td>\r\n					<th scope=\"row\"><code><a href=\"../../java/io/FilterReader.html#read-char:A-int-int-\">read</a>​(char[]&nbsp;cbuf, int&nbsp;off, int&nbsp;len)</code></th>\r\n					<td>\r\n					<p>将字符读入数组的一部分。</p>\r\n					</td>\r\n				</tr>\r\n				<tr>\r\n					<td><code>boolean</code></td>\r\n					<th scope=\"row\"><code><a href=\"../../java/io/FilterReader.html#ready--\">ready</a>​()</code></th>\r\n					<td>\r\n					<p>告诉这个流是否准备好被读取。</p>\r\n					</td>\r\n				</tr>\r\n				<tr>\r\n					<td><code>void</code></td>\r\n					<th scope=\"row\"><code><a href=\"../../java/io/FilterReader.html#reset--\">reset</a>​()</code></th>\r\n					<td>\r\n					<p>重置流。</p>\r\n					</td>\r\n				</tr>\r\n				<tr>\r\n					<td><code>long</code></td>\r\n					<th scope=\"row\"><code><a href=\"../../java/io/FilterReader.html#skip-long-\">skip</a>​(long&nbsp;n)</code></th>\r\n					<td>\r\n					<p>跳过字符</p>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h4>字符输入流读取字符数据</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic04;\r\n\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\n\r\npublic class Basic04FileReader {\r\n    /*字符输入流的使用步骤\r\n     * 1.创建FileReader对象，构造方法中绑定要读取的数据源\r\n     * 2.使用FileReader对象中的方法read读取文件\r\n     * 3.释放资源*/\r\n    public static void main(String[] args) throws IOException {\r\n        FileReader fr = new FileReader(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\" +\r\n                \"\\\\Basic04\\\\TestOutputStream.txt\");\r\n        char[] b = new char[1024];\r\n        int len = 0;\r\n        while ((len = fr.read(b)) != -1) {\r\n            System.out.println(new String(b, 0, len));\r\n        }\r\n        fr.close();\r\n        /*10000加油加油\r\n        加油\r\n        加油\r\n        加油\r\n        加油\r\n        */\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<h4>字符输出流</h4>\r\n\r\n<p>*Writer</p>\r\n\r\n<h4>Class Writer</h4>\r\n\r\n<ul>\r\n	<li><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">java.lang.Object</a></li>\r\n	<li>\r\n	<ul>\r\n		<li>java.io.Writer</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<p>All Implemented Interfaces:</p>\r\n\r\n	<p><code><a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></code> ， <code><a href=\"../../java/io/Flushable.html\" title=\"interface in java.io\">Flushable</a></code> ， <code><a href=\"../../java/lang/Appendable.html\" title=\"interface in java.lang\">Appendable</a></code> ， <code><a href=\"../../java/lang/AutoCloseable.html\" title=\"interface in java.lang\">AutoCloseable</a></code></p>\r\n\r\n	<p>已知直接子类：</p>\r\n\r\n	<p><code><a href=\"../../java/io/BufferedWriter.html\" title=\"class in java.io\">BufferedWriter</a></code> ， <code><a href=\"../../java/io/CharArrayWriter.html\" title=\"class in java.io\">CharArrayWriter</a></code> ， <code><a href=\"../../java/io/FilterWriter.html\" title=\"class in java.io\">FilterWriter</a></code> ， <code><a href=\"../../java/io/OutputStreamWriter.html\" title=\"class in java.io\">OutputStreamWriter</a></code> ， <code><a href=\"../../java/io/PipedWriter.html\" title=\"class in java.io\">PipedWriter</a></code> ， <code><a href=\"../../java/io/PrintWriter.html\" title=\"class in java.io\">PrintWriter</a></code> ， <code><a href=\"../../java/io/StringWriter.html\" title=\"class in java.io\">StringWriter</a></code></p>\r\n\r\n	<hr />&nbsp;\r\n	<pre>\r\npublic abstract class Writer\r\nextends <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>\r\nimplements <a href=\"../../java/lang/Appendable.html\" title=\"interface in java.lang\">Appendable</a>, <a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a>, <a href=\"../../java/io/Flushable.html\" title=\"interface in java.io\">Flushable</a></pre>\r\n\r\n	<p>用于写入字符流的抽象类。 子类必须实现的唯一方法是write（char []，int，int），flush（）和close（）。 然而，大多数子类将覆盖这里定义的一些方法，以便提供更高的效率，附加的功能或两者。</p>\r\n	</li>\r\n</ul>\r\n\r\n<h4>Class FilterWriter</h4>\r\n\r\n<ul>\r\n	<li><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">java.lang.Object</a></li>\r\n	<li>\r\n	<ul>\r\n		<li><a href=\"../../java/io/Writer.html\" title=\"class in java.io\">java.io.Writer</a></li>\r\n		<li>\r\n		<ul>\r\n			<li>java.io.FilterWriter</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<p>All Implemented Interfaces:</p>\r\n\r\n	<p><code><a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></code> ， <code><a href=\"../../java/io/Flushable.html\" title=\"interface in java.io\">Flushable</a></code> ， <code><a href=\"../../java/lang/Appendable.html\" title=\"interface in java.lang\">Appendable</a></code> ， <code><a href=\"../../java/lang/AutoCloseable.html\" title=\"interface in java.lang\">AutoCloseable</a></code></p>\r\n\r\n	<hr />&nbsp;\r\n	<pre>\r\npublic abstract class FilterWriter\r\nextends <a href=\"../../java/io/Writer.html\" title=\"class in java.io\">Writer</a></pre>\r\n\r\n	<p>用于编写过滤后的字符流的抽象类。 抽象类<code>FilterWriter</code>本身提供了将所有请求传递到包含的流的默认方法。 <code>FilterWriter</code>子类应该覆盖这些方法中的一些，并且还可以提供其他方法和字段。</p>\r\n	</li>\r\n</ul>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">\r\n			<p>Modifier and Type</p>\r\n			</th>\r\n			<th scope=\"col\">\r\n			<p>方法</p>\r\n			</th>\r\n			<th scope=\"col\">\r\n			<p>描述</p>\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p><code>void</code></p>\r\n			</td>\r\n			<th scope=\"row\">\r\n			<p><code><a href=\"../../java/io/FilterWriter.html#close--\">close</a>​()</code></p>\r\n			</th>\r\n			<td>\r\n			<p>关闭流，先刷新。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p><code>void</code></p>\r\n			</td>\r\n			<th scope=\"row\">\r\n			<p><code><a href=\"../../java/io/FilterWriter.html#flush--\">flush</a>​()</code></p>\r\n			</th>\r\n			<td>\r\n			<p>刷新流。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p><code>void</code></p>\r\n			</td>\r\n			<th scope=\"row\">\r\n			<p><code><a href=\"../../java/io/FilterWriter.html#write-char:A-int-int-\">write</a>​(char[]&nbsp;cbuf, int&nbsp;off, int&nbsp;len)</code></p>\r\n			</th>\r\n			<td>\r\n			<p>写入字符数组的一部分。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p><code>void</code></p>\r\n			</td>\r\n			<th scope=\"row\">\r\n			<p><code><a href=\"../../java/io/FilterWriter.html#write-int-\">write</a>​(int&nbsp;c)</code></p>\r\n			</th>\r\n			<td>\r\n			<p>写一个字符</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p><code>void</code></p>\r\n			</td>\r\n			<th scope=\"row\">\r\n			<p><code><a href=\"../../java/io/FilterWriter.html#write-java.lang.String-int-int-\">write</a>​(<a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;str, int&nbsp;off, int&nbsp;len)</code></p>\r\n			</th>\r\n			<td>\r\n			<p>写一个字符串的一部分。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h4>输出单个字符到文件</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic04;\r\n\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\n\r\npublic class Basic04FileWriter {\r\n    public static void main(String[] args) throws IOException {\r\n        FileWriter fw = new FileWriter(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic04\\\\TestFileWriter.txt\");\r\n        fw.write(97);\r\n        fw.flush();\r\n        fw.close();\r\n        /*TestFileWriter.txt\r\n        * a*/\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<h4>续写和其他写法</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic04;\r\n\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\n\r\npublic class Basic04FileWriter {\r\n    public static void main(String[] args) throws IOException {\r\n        FileWriter fw = new FileWriter(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic04\\\\TestFileWriter.txt\", true);\r\n        fw.write(97);\r\n        fw.flush();\r\n        char[] chr = {\'a\', \'b\', \'c\', \'d\', \'e\'};\r\n        fw.write(chr);\r\n        fw.write(chr, 3, 2);\r\n        fw.write(\"有个姑娘叫邵佳宇，我喜欢\");\r\n        fw.write(\"有个姑娘叫邵佳宇，我喜欢\",6,2);\r\n        fw.close();\r\n        /*TestFileWriter.txt\r\n         * aabcdede有个姑娘叫邵佳宇，我喜欢佳宇*/\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<h4>流异常处理</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic04;\r\n\r\nimport java.io.File;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\n\r\npublic class Bisic04StreamException {\r\n    public static void main(String[] args) {\r\n        FileWriter fw = null;\r\n        try {\r\n            fw = new FileWriter(new File(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic04\\\\TestException.txt\"));\r\n            for (int i = 0; i &lt; 22; i++) {\r\n                fw.write(\"Hello\" + i);\r\n            }\r\n            fw.flush();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        if (fw != null) {\r\n            try {\r\n                fw.close();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>','2020-05-09 22:56:19.073804','2020-05-09 22:58:33.750370',1,7),(109,'Properties集合','<h4>实现接口 Map&lt;k,v&gt;</h4>\r\n\r\n<p>Properties 实现了接口Map&lt;k,v&gt;</p>\r\n\r\n<h4>Interface Map&lt;K,V&gt;</h4>\r\n\r\n<ul>\r\n	<li>\r\n	<p>参数类型</p>\r\n\r\n	<p><code>K</code> - 由此地图维护的键的类型</p>\r\n\r\n	<p><code>V</code> - 映射值的类型</p>\r\n\r\n	<p>All Known Subinterfaces:</p>\r\n\r\n	<p><code><a href=\"../../javax/script/Bindings.html\" title=\"interface in javax.script\">Bindings</a></code> ， <code><a href=\"../../java/util/concurrent/ConcurrentMap.html\" title=\"interface in java.util.concurrent\">ConcurrentMap</a>&lt;K,V&gt;</code> ， <code><a href=\"../../java/util/concurrent/ConcurrentNavigableMap.html\" title=\"interface in java.util.concurrent\">ConcurrentNavigableMap</a>&lt;K,V&gt;</code> ， <code><a href=\"../../javax/xml/ws/handler/LogicalMessageContext.html\" title=\"interface in javax.xml.ws.handler\">LogicalMessageContext</a></code> ， <code><a href=\"../../javax/xml/ws/handler/MessageContext.html\" title=\"interface in javax.xml.ws.handler\">MessageContext</a></code> ， <code><a href=\"../../java/util/NavigableMap.html\" title=\"interface in java.util\">NavigableMap</a>&lt;K,V&gt;</code> ， <code><a href=\"../../javafx/collections/ObservableMap.html\" title=\"interface in javafx.collections\">ObservableMap</a>&lt;K,V&gt;</code> ， <code><a href=\"../../javafx/beans/value/ObservableMapValue.html\" title=\"interface in javafx.beans.value\">ObservableMapValue</a>&lt;K,V&gt;</code> ， <code><a href=\"../../javax/xml/ws/handler/soap/SOAPMessageContext.html\" title=\"interface in javax.xml.ws.handler.soap\">SOAPMessageContext</a></code> ， <code><a href=\"../../java/util/SortedMap.html\" title=\"interface in java.util\">SortedMap</a>&lt;K,V&gt;</code> ， <code><a href=\"../../javafx/beans/value/WritableMapValue.html\" title=\"interface in javafx.beans.value\">WritableMapValue</a>&lt;K,V&gt;</code></p>\r\n\r\n	<p>所有已知实现类：</p>\r\n\r\n	<p><code><a href=\"../../java/util/AbstractMap.html\" title=\"class in java.util\">AbstractMap</a></code> ， <code><a href=\"../../java/util/jar/Attributes.html\" title=\"class in java.util.jar\">Attributes</a></code> ， <code><a href=\"../../java/security/AuthProvider.html\" title=\"class in java.security\">AuthProvider</a></code> ， <code><a href=\"../../javafx/scene/input/ClipboardContent.html\" title=\"class in javafx.scene.input\">ClipboardContent</a></code> ， <code><a href=\"../../java/util/concurrent/ConcurrentHashMap.html\" title=\"class in java.util.concurrent\">ConcurrentHashMap</a></code> ， <code><a href=\"../../java/util/concurrent/ConcurrentSkipListMap.html\" title=\"class in java.util.concurrent\">ConcurrentSkipListMap</a></code> ， <code><a href=\"../../java/util/EnumMap.html\" title=\"class in java.util\">EnumMap</a></code> ， <code><a href=\"../../java/util/HashMap.html\" title=\"class in java.util\">HashMap</a></code> ， <code><a href=\"../../java/util/Hashtable.html\" title=\"class in java.util\">Hashtable</a></code> ， <code><a href=\"../../com/sun/net/httpserver/Headers.html\" title=\"class in com.sun.net.httpserver\">Headers</a></code> ， <code><a href=\"../../java/util/IdentityHashMap.html\" title=\"class in java.util\">IdentityHashMap</a></code> ， <code><a href=\"../../java/util/LinkedHashMap.html\" title=\"class in java.util\">LinkedHashMap</a></code> ， <code><a href=\"../../javafx/beans/binding/MapBinding.html\" title=\"class in javafx.beans.binding\">MapBinding</a></code> ， <code><a href=\"../../javafx/beans/binding/MapExpression.html\" title=\"class in javafx.beans.binding\">MapExpression</a></code> ， <code><a href=\"../../javafx/beans/property/MapProperty.html\" title=\"class in javafx.beans.property\">MapProperty</a></code> ， <code><a href=\"../../javafx/beans/property/MapPropertyBase.html\" title=\"class in javafx.beans.property\">MapPropertyBase</a></code> ， <code><a href=\"../../jdk/incubator/http/MultiMapResult.html\" title=\"class in jdk.incubator.http\">MultiMapResult</a></code> ， <code><a href=\"../../javax/print/attribute/standard/PrinterStateReasons.html\" title=\"class in javax.print.attribute.standard\">PrinterStateReasons</a></code> ， <code><a href=\"../../java/util/Properties.html\">Properties</a></code><a href=\"../../java/util/Properties.html\"> ， </a><code><a href=\"../../java/security/Provider.html\" title=\"class in java.security\">Provider</a></code> ， <code><a href=\"../../javafx/beans/property/ReadOnlyMapProperty.html\" title=\"class in javafx.beans.property\">ReadOnlyMapProperty</a></code> ， <code><a href=\"../../javafx/beans/property/ReadOnlyMapPropertyBase.html\" title=\"class in javafx.beans.property\">ReadOnlyMapPropertyBase</a></code> ， <code><a href=\"../../javafx/beans/property/ReadOnlyMapWrapper.html\" title=\"class in javafx.beans.property\">ReadOnlyMapWrapper</a></code> ， <code><a href=\"../../java/awt/RenderingHints.html\" title=\"class in java.awt\">RenderingHints</a></code> ， <code><a href=\"../../jdk/nashorn/api/scripting/ScriptObjectMirror.html\" title=\"class in jdk.nashorn.api.scripting\">ScriptObjectMirror</a></code> ， <code><a href=\"../../javax/script/SimpleBindings.html\" title=\"class in javax.script\">SimpleBindings</a></code> ， <code><a href=\"../../javafx/beans/property/SimpleMapProperty.html\" title=\"class in javafx.beans.property\">SimpleMapProperty</a></code> ， <code><a href=\"../../javax/management/openmbean/TabularDataSupport.html\" title=\"class in javax.management.openmbean\">TabularDataSupport</a></code> ， <code><a href=\"../../java/util/TreeMap.html\" title=\"class in java.util\">TreeMap</a></code> ， <code><a href=\"../../javax/swing/UIDefaults.html\" title=\"class in javax.swing\">UIDefaults</a></code> ， <code><a href=\"../../java/util/WeakHashMap.html\" title=\"class in java.util\">WeakHashMap</a></code></p>\r\n	</li>\r\n</ul>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Modifier and Type</th>\r\n			<th scope=\"col\">方法</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#clear--\">clear</a>​()</code></th>\r\n			<td>\r\n			<p>从该地图中删除所有的映射（可选操作）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#compute-K-java.util.function.BiFunction-\">compute</a>​(<a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>&nbsp;key, <a href=\"../../java/util/function/BiFunction.html\" title=\"interface in java.util.function\">BiFunction</a>&lt;? super <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>,? super <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>,? extends <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&gt;&nbsp;remappingFunction)</code></th>\r\n			<td>\r\n			<p>尝试计算指定键的映射及其当前映射值（如果没有当前映射，则 <code>null</code> ）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#computeIfAbsent-K-java.util.function.Function-\">computeIfAbsent</a>​(<a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>&nbsp;key, <a href=\"../../java/util/function/Function.html\" title=\"interface in java.util.function\">Function</a>&lt;? super <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>,? extends <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&gt;&nbsp;mappingFunction)</code></th>\r\n			<td>\r\n			<p>如果指定的键尚未与值相关联（或映射到 <code>null</code> ），则尝试使用给定的映射函数计算其值，并将其输入到此映射中，除非是 <code>null</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#computeIfPresent-K-java.util.function.BiFunction-\">computeIfPresent</a>​(<a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>&nbsp;key, <a href=\"../../java/util/function/BiFunction.html\" title=\"interface in java.util.function\">BiFunction</a>&lt;? super <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>,? super <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>,? extends <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&gt;&nbsp;remappingFunction)</code></th>\r\n			<td>\r\n			<p>如果指定的密钥的值存在且非空，则尝试计算给定密钥及其当前映射值的新映射。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#containsKey-java.lang.Object-\">containsKey</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key)</code></th>\r\n			<td>\r\n			<p>如果此映射包含指定键的映射，则返回 <code>true</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#containsValue-java.lang.Object-\">containsValue</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;value)</code></th>\r\n			<td>\r\n			<p>如果此映射将一个或多个键映射到指定的值，则返回 <code>true</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;K,V&gt;&nbsp;<a href=\"../../java/util/Map.Entry.html\" title=\"interface in java.util\">Map.Entry</a>&lt;K,V&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#entry-K-V-\">entry</a>​(K&nbsp;k, V&nbsp;v)</code></th>\r\n			<td>\r\n			<p>返回包含给定键和值的不可变<a href=\"../../java/util/Map.Entry.html\" title=\"java.util中的接口\"><code>Map.Entry</code></a> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Set.html\" title=\"interface in java.util\">Set</a>&lt;<a href=\"../../java/util/Map.Entry.html\" title=\"interface in java.util\">Map.Entry</a>&lt;<a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>,<a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&gt;&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#entrySet--\">entrySet</a>​()</code></th>\r\n			<td>\r\n			<p>返回此地图中包含的映射的<a href=\"../../java/util/Set.html\" title=\"java.util中的接口\"><code>Set</code></a>视图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#equals-java.lang.Object-\">equals</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;o)</code></th>\r\n			<td>\r\n			<p>将指定的对象与此映射进行比较以获得相等性。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#forEach-java.util.function.BiConsumer-\">forEach</a>​(<a href=\"../../java/util/function/BiConsumer.html\" title=\"interface in java.util.function\">BiConsumer</a>&lt;? super <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>,? super <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&gt;&nbsp;action)</code></th>\r\n			<td>\r\n			<p>对此映射中的每个条目执行给定的操作，直到所有条目都被处理或操作引发异常。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#get-java.lang.Object-\">get</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key)</code></th>\r\n			<td>\r\n			<p>返回指定键映射到的值，如果此映射不包含该键的映射，则返回 <code>null</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#getOrDefault-java.lang.Object-V-\">getOrDefault</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key, <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&nbsp;defaultValue)</code></th>\r\n			<td>\r\n			<p>返回指定键映射到的值，如果此映射不包含该键的映射，则返回 <code>defaultValue</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#hashCode--\">hashCode</a>​()</code></th>\r\n			<td>\r\n			<p>返回此地图的哈希码值。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#isEmpty--\">isEmpty</a>​()</code></th>\r\n			<td>\r\n			<p>如果此映射不包含键值映射，则返回 <code>true</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Set.html\" title=\"interface in java.util\">Set</a>&lt;<a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#keySet--\">keySet</a>​()</code></th>\r\n			<td>\r\n			<p>返回此地图中包含的键的<a href=\"../../java/util/Set.html\" title=\"java.util中的接口\"><code>Set</code></a>视图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#merge-K-V-java.util.function.BiFunction-\">merge</a>​(<a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>&nbsp;key, <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&nbsp;value, <a href=\"../../java/util/function/BiFunction.html\" title=\"interface in java.util.function\">BiFunction</a>&lt;? super <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>,? super <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>,? extends <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&gt;&nbsp;remappingFunction)</code></th>\r\n			<td>\r\n			<p>如果指定的键尚未与值相关联或与null相关联，则将其与给定的非空值相关联。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;K,V&gt;&nbsp;<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;K,V&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#of--\">of</a>​()</code></th>\r\n			<td>\r\n			<p>返回一个包含零映射的不可变地图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;K,V&gt;&nbsp;<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;K,V&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#of-K-V-\">of</a>​(K&nbsp;k1, V&nbsp;v1)</code></th>\r\n			<td>\r\n			<p>返回包含单个映射的不可变地图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;K,V&gt;&nbsp;<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;K,V&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#of-K-V-K-V-\">of</a>​(K&nbsp;k1, V&nbsp;v1, K&nbsp;k2, V&nbsp;v2)</code></th>\r\n			<td>\r\n			<p>返回包含两个映射的不可变地图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;K,V&gt;&nbsp;<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;K,V&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#of-K-V-K-V-K-V-\">of</a>​(K&nbsp;k1, V&nbsp;v1, K&nbsp;k2, V&nbsp;v2, K&nbsp;k3, V&nbsp;v3)</code></th>\r\n			<td>\r\n			<p>返回包含三个映射的不可变地图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;K,V&gt;&nbsp;<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;K,V&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#of-K-V-K-V-K-V-K-V-\">of</a>​(K&nbsp;k1, V&nbsp;v1, K&nbsp;k2, V&nbsp;v2, K&nbsp;k3, V&nbsp;v3, K&nbsp;k4, V&nbsp;v4)</code></th>\r\n			<td>\r\n			<p>返回包含四个映射的不可变地图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;K,V&gt;&nbsp;<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;K,V&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#of-K-V-K-V-K-V-K-V-K-V-\">of</a>​(K&nbsp;k1, V&nbsp;v1, K&nbsp;k2, V&nbsp;v2, K&nbsp;k3, V&nbsp;v3, K&nbsp;k4, V&nbsp;v4, K&nbsp;k5, V&nbsp;v5)</code></th>\r\n			<td>\r\n			<p>返回一个包含五个映射的不可变地图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;K,V&gt;&nbsp;<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;K,V&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#of-K-V-K-V-K-V-K-V-K-V-K-V-\">of</a>​(K&nbsp;k1, V&nbsp;v1, K&nbsp;k2, V&nbsp;v2, K&nbsp;k3, V&nbsp;v3, K&nbsp;k4, V&nbsp;v4, K&nbsp;k5, V&nbsp;v5, K&nbsp;k6, V&nbsp;v6)</code></th>\r\n			<td>\r\n			<p>返回包含六个映射的不可变地图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;K,V&gt;&nbsp;<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;K,V&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#of-K-V-K-V-K-V-K-V-K-V-K-V-K-V-\">of</a>​(K&nbsp;k1, V&nbsp;v1, K&nbsp;k2, V&nbsp;v2, K&nbsp;k3, V&nbsp;v3, K&nbsp;k4, V&nbsp;v4, K&nbsp;k5, V&nbsp;v5, K&nbsp;k6, V&nbsp;v6, K&nbsp;k7, V&nbsp;v7)</code></th>\r\n			<td>\r\n			<p>返回包含七个映射的不可变地图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;K,V&gt;&nbsp;<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;K,V&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#of-K-V-K-V-K-V-K-V-K-V-K-V-K-V-K-V-\">of</a>​(K&nbsp;k1, V&nbsp;v1, K&nbsp;k2, V&nbsp;v2, K&nbsp;k3, V&nbsp;v3, K&nbsp;k4, V&nbsp;v4, K&nbsp;k5, V&nbsp;v5, K&nbsp;k6, V&nbsp;v6, K&nbsp;k7, V&nbsp;v7, K&nbsp;k8, V&nbsp;v8)</code></th>\r\n			<td>\r\n			<p>返回包含八个映射的不可变地图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;K,V&gt;&nbsp;<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;K,V&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#of-K-V-K-V-K-V-K-V-K-V-K-V-K-V-K-V-K-V-\">of</a>​(K&nbsp;k1, V&nbsp;v1, K&nbsp;k2, V&nbsp;v2, K&nbsp;k3, V&nbsp;v3, K&nbsp;k4, V&nbsp;v4, K&nbsp;k5, V&nbsp;v5, K&nbsp;k6, V&nbsp;v6, K&nbsp;k7, V&nbsp;v7, K&nbsp;k8, V&nbsp;v8, K&nbsp;k9, V&nbsp;v9)</code></th>\r\n			<td>\r\n			<p>返回包含九个映射的不可变地图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;K,V&gt;&nbsp;<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;K,V&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#of-K-V-K-V-K-V-K-V-K-V-K-V-K-V-K-V-K-V-K-V-\">of</a>​(K&nbsp;k1, V&nbsp;v1, K&nbsp;k2, V&nbsp;v2, K&nbsp;k3, V&nbsp;v3, K&nbsp;k4, V&nbsp;v4, K&nbsp;k5, V&nbsp;v5, K&nbsp;k6, V&nbsp;v6, K&nbsp;k7, V&nbsp;v7, K&nbsp;k8, V&nbsp;v8, K&nbsp;k9, V&nbsp;v9, K&nbsp;k10, V&nbsp;v10)</code></th>\r\n			<td>\r\n			<p>返回包含十个映射的不可变地图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;K,V&gt;&nbsp;<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;K,V&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#ofEntries-java.util.Map.Entry...-\">ofEntries</a>​(<a href=\"../../java/util/Map.Entry.html\" title=\"interface in java.util\">Map.Entry</a>&lt;? extends K,? extends V&gt;...&nbsp;entries)</code></th>\r\n			<td>\r\n			<p>返回包含从给定条目提取的键和值的不可变地图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#put-K-V-\">put</a>​(<a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>&nbsp;key, <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&nbsp;value)</code></th>\r\n			<td>\r\n			<p>将指定的值与该映射中的指定键相关联（可选操作）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#putAll-java.util.Map-\">putAll</a>​(<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;? extends <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>,? extends <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&gt;&nbsp;m)</code></th>\r\n			<td>\r\n			<p>将指定地图的所有映射复制到此映射（可选操作）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#putIfAbsent-K-V-\">putIfAbsent</a>​(<a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>&nbsp;key, <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&nbsp;value)</code></th>\r\n			<td>\r\n			<p>如果指定的键尚未与值相关联（或映射到 <code>null</code> ）将其与给定值相关联并返回 <code>null</code> ，否则返回当前值。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#remove-java.lang.Object-\">remove</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key)</code></th>\r\n			<td>\r\n			<p>如果存在（从可选的操作），从该地图中删除一个键的映射。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#remove-java.lang.Object-java.lang.Object-\">remove</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key, <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;value)</code></th>\r\n			<td>\r\n			<p>仅当指定的密钥当前映射到指定的值时删除该条目。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#replace-K-V-\">replace</a>​(<a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>&nbsp;key, <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&nbsp;value)</code></th>\r\n			<td>\r\n			<p>只有当目标映射到某个值时，才能替换指定键的条目。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#replace-K-V-V-\">replace</a>​(<a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>&nbsp;key, <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&nbsp;oldValue, <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&nbsp;newValue)</code></th>\r\n			<td>\r\n			<p>仅当当前映射到指定的值时，才能替换指定键的条目。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#replaceAll-java.util.function.BiFunction-\">replaceAll</a>​(<a href=\"../../java/util/function/BiFunction.html\" title=\"interface in java.util.function\">BiFunction</a>&lt;? super <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">K</a>,? super <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>,? extends <a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&gt;&nbsp;function)</code></th>\r\n			<td>\r\n			<p>将每个条目的值替换为对该条目调用给定函数的结果，直到所有条目都被处理或该函数抛出异常。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#size--\">size</a>​()</code></th>\r\n			<td>\r\n			<p>返回此地图中键值映射的数量。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Collection.html\" title=\"interface in java.util\">Collection</a>&lt;<a href=\"../../java/util/Map.html\" title=\"type parameter in Map\">V</a>&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Map.html#values--\">values</a>​()</code></th>\r\n			<td>\r\n			<p>返回此地图中包含的值的<a href=\"../../java/util/Collection.html\" title=\"java.util中的接口\"><code>Collection</code></a>视图。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h4>Class Properties</h4>\r\n\r\n<ul>\r\n	<li><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">java.lang.Object</a></li>\r\n	<li>\r\n	<ul>\r\n		<li><a href=\"../../java/util/Dictionary.html\" title=\"class in java.util\">java.util.Dictionary</a>&lt;K,V&gt;</li>\r\n		<li>\r\n		<ul>\r\n			<li><a href=\"../../java/util/Hashtable.html\" title=\"class in java.util\">java.util.Hashtable</a>&lt;<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&gt;</li>\r\n			<li>\r\n			<ul>\r\n				<li>java.util.Properties</li>\r\n			</ul>\r\n			</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<p>All Implemented Interfaces:</p>\r\n\r\n	<p><code><a href=\"../../java/io/Serializable.html\" title=\"interface in java.io\">Serializable</a></code> ， <code><a href=\"../../java/lang/Cloneable.html\" title=\"interface in java.lang\">Cloneable</a></code> ， <code><a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&gt;</code></p>\r\n\r\n	<p>已知直接子类：</p>\r\n\r\n	<p><code><a href=\"../../java/security/Provider.html\" title=\"class in java.security\">Provider</a></code></p>\r\n\r\n	<hr />&nbsp;\r\n	<pre>\r\npublic class Properties\r\nextends <a href=\"../../java/util/Hashtable.html\" title=\"class in java.util\">Hashtable</a>&lt;<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&gt;</pre>\r\n	<code>Properties</code>类表示一组持久的属性。 <code>Properties</code>可以保存到流中或从流中加载。 属性列表中的每个键及其对应的值都是一个字符串。\r\n\r\n	<p>属性列表可以包含另一个属性列表作为其&ldquo;默认值&rdquo;; 如果在原始属性列表中找不到属性键，则会搜索此第二个属性列表。</p>\r\n\r\n	<p>因为<code>Properties</code>从继承<code>Hashtable</code> ，所述<code>put</code>种<code>putAll</code>方法可应用于<code>Properties</code>对象。 强烈不鼓励使用它们，因为它们允许调用者插入其键或值不是<code>Strings</code> 。 应该使用<code>setProperty</code>方法。 如果在包含非<code>String</code>键或值的&ldquo;受损害&rdquo; <code>Properties</code>对象上调用<code>store</code>或<code>save</code>方法，则调用将失败。 类似地，如果在包含非<code>String</code>密钥的&ldquo;受损害&rdquo;的<code>Properties</code>对象上调用<code>propertyNames</code>或<code>list</code>方法的调用将失败。</p>\r\n\r\n	<p>在返回的迭代器<code>iterator</code> （也就是此类的&ldquo;集合视图&rdquo;方法<code>entrySet()</code> ， <code>keySet()</code> ，并<code>values()</code> ）可能不是快速失败的（不像Hashtable的实现）。 这些迭代器被保证遍历元素，因为它们在施工时存在一次，并且可能（但不能保证）反映构造后的任何修改。</p>\r\n	</li>\r\n</ul>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Modifier and Type</th>\r\n			<th scope=\"col\">方法</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#clear--\">clear</a>​()</code></th>\r\n			<td>\r\n			<p>清除此散列表，使其不包含键。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#clone--\">clone</a>​()</code></th>\r\n			<td>\r\n			<p>创建这个散列表的浅拷贝。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#compute-java.lang.Object-java.util.function.BiFunction-\">compute</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key, <a href=\"../../java/util/function/BiFunction.html\" title=\"interface in java.util.function\">BiFunction</a>&lt;? super <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,? super <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,?&gt;&nbsp;remappingFunction)</code></th>\r\n			<td>\r\n			<p>尝试计算指定密钥及其当前映射值的映射（如果没有当前映射，则 <code>null</code> ）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#computeIfAbsent-java.lang.Object-java.util.function.Function-\">computeIfAbsent</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key, <a href=\"../../java/util/function/Function.html\" title=\"interface in java.util.function\">Function</a>&lt;? super <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,?&gt;&nbsp;mappingFunction)</code></th>\r\n			<td>\r\n			<p>如果指定的键尚未与值相关联（或映射到 <code>null</code> ），则尝试使用给定的映射函数计算其值，并将其输入到此映射中，除非是 <code>null</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#computeIfPresent-java.lang.Object-java.util.function.BiFunction-\">computeIfPresent</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key, <a href=\"../../java/util/function/BiFunction.html\" title=\"interface in java.util.function\">BiFunction</a>&lt;? super <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,? super <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,?&gt;&nbsp;remappingFunction)</code></th>\r\n			<td>\r\n			<p>如果指定的密钥的值存在且非空，则尝试计算给定密钥及其当前映射值的新映射。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#contains-java.lang.Object-\">contains</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;value)</code></th>\r\n			<td>\r\n			<p>测试一些键映射到这个哈希表中的指定值。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#containsKey-java.lang.Object-\">containsKey</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key)</code></th>\r\n			<td>\r\n			<p>测试指定的对象是否在此哈希表中的键。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#containsValue-java.lang.Object-\">containsValue</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;value)</code></th>\r\n			<td>\r\n			<p>如果此哈希表将一个或多个键映射到此值，则返回true。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Enumeration.html\" title=\"interface in java.util\">Enumeration</a>&lt;<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#elements--\">elements</a>​()</code></th>\r\n			<td>\r\n			<p>返回此散列表中值的枚举。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Set.html\" title=\"interface in java.util\">Set</a>&lt;<a href=\"../../java/util/Map.Entry.html\" title=\"interface in java.util\">Map.Entry</a>&lt;<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&gt;&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#entrySet--\">entrySet</a>​()</code></th>\r\n			<td>\r\n			<p>返回此地图中包含的映射的<a href=\"../../java/util/Set.html\" title=\"java.util中的接口\"><code>Set</code></a>视图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#equals-java.lang.Object-\">equals</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;o)</code></th>\r\n			<td>\r\n			<p>根据Map界面中的定义，将指定的对象与此Map进行比较以相等。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#forEach-java.util.function.BiConsumer-\">forEach</a>​(<a href=\"../../java/util/function/BiConsumer.html\" title=\"interface in java.util.function\">BiConsumer</a>&lt;? super <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,? super <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&gt;&nbsp;action)</code></th>\r\n			<td>\r\n			<p>对此映射中的每个条目执行给定的操作，直到所有条目都被处理或操作引发异常。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#get-java.lang.Object-\">get</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key)</code></th>\r\n			<td>\r\n			<p>返回指定键映射到的值，如果此映射不包含键的映射，则返回 <code>null</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#getOrDefault-java.lang.Object-java.lang.Object-\">getOrDefault</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key, <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;defaultValue)</code></th>\r\n			<td>\r\n			<p>返回指定键映射到的值，如果此映射不包含键的映射，则返回 <code>defaultValue</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#getProperty-java.lang.String-\">getProperty</a>​(<a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;key)</code></th>\r\n			<td>\r\n			<p>使用此属性列表中指定的键搜索属性。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#getProperty-java.lang.String-java.lang.String-\">getProperty</a>​(<a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;key, <a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;defaultValue)</code></th>\r\n			<td>\r\n			<p>使用此属性列表中指定的键搜索属性。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#hashCode--\">hashCode</a>​()</code></th>\r\n			<td>\r\n			<p>按照Map界面中的定义返回此Map的哈希码值。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#isEmpty--\">isEmpty</a>​()</code></th>\r\n			<td>\r\n			<p>测试这个哈希表是否将值映射到值。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Enumeration.html\" title=\"interface in java.util\">Enumeration</a>&lt;<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#keys--\">keys</a>​()</code></th>\r\n			<td>\r\n			<p>返回此散列表中键的枚举。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Set.html\" title=\"interface in java.util\">Set</a>&lt;<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#keySet--\">keySet</a>​()</code></th>\r\n			<td>\r\n			<p>返回此地图中包含的键的<a href=\"../../java/util/Set.html\" title=\"java.util中的接口\"><code>Set</code></a>视图。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#list-java.io.PrintStream-\">list</a>​(<a href=\"../../java/io/PrintStream.html\" title=\"class in java.io\">PrintStream</a>&nbsp;out)</code></th>\r\n			<td>\r\n			<p>将此属性列表打印到指定的输出流。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#list-java.io.PrintWriter-\">list</a>​(<a href=\"../../java/io/PrintWriter.html\" title=\"class in java.io\">PrintWriter</a>&nbsp;out)</code></th>\r\n			<td>\r\n			<p>将此属性列表打印到指定的输出流。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#load-java.io.InputStream-\">load</a>​(<a href=\"../../java/io/InputStream.html\" title=\"class in java.io\">InputStream</a>&nbsp;inStream)</code></th>\r\n			<td>\r\n			<p>从输入字节流读取属性列表（键和元素对）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#load-java.io.Reader-\">load</a>​(<a href=\"../../java/io/Reader.html\" title=\"class in java.io\">Reader</a>&nbsp;reader)</code></th>\r\n			<td>\r\n			<p>以简单的线性格式从输入字符流读取属性列表（关键字和元素对）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#loadFromXML-java.io.InputStream-\">loadFromXML</a>​(<a href=\"../../java/io/InputStream.html\" title=\"class in java.io\">InputStream</a>&nbsp;in)</code></th>\r\n			<td>\r\n			<p>将指定输入流中的XML文档表示的所有属性加载到此属性表中。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#merge-java.lang.Object-java.lang.Object-java.util.function.BiFunction-\">merge</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key, <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;value, <a href=\"../../java/util/function/BiFunction.html\" title=\"interface in java.util.function\">BiFunction</a>&lt;? super <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,? super <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,?&gt;&nbsp;remappingFunction)</code></th>\r\n			<td>\r\n			<p>如果指定的键尚未与值相关联或与null相关联，则将其与给定的非空值相关联。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Enumeration.html\" title=\"interface in java.util\">Enumeration</a>&lt;?&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#propertyNames--\">propertyNames</a>​()</code></th>\r\n			<td>\r\n			<p>返回此属性列表中所有键的枚举，包括默认属性列表中的不同键，如果尚未从主属性列表中找到相同名称的键。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#put-java.lang.Object-java.lang.Object-\">put</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key, <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;value)</code></th>\r\n			<td>\r\n			<p>将指定的 <code>key</code>映射到此散列表中指定的 <code>value</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#putAll-java.util.Map-\">putAll</a>​(<a href=\"../../java/util/Map.html\" title=\"interface in java.util\">Map</a>&lt;?,?&gt;&nbsp;t)</code></th>\r\n			<td>\r\n			<p>将所有从指定地图的映射复制到此散列表。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#putIfAbsent-java.lang.Object-java.lang.Object-\">putIfAbsent</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key, <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;value)</code></th>\r\n			<td>\r\n			<p>如果指定的键尚未与值相关联（或映射到 <code>null</code> ）将其与给定值关联并返回 <code>null</code> ，否则返回当前值。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>protected void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#rehash--\">rehash</a>​()</code></th>\r\n			<td>\r\n			<p>增加这个散列表的内部重组能力，从而更有效地适应和访问其条目。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#remove-java.lang.Object-\">remove</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key)</code></th>\r\n			<td>\r\n			<p>从此散列表中删除键（及其对应的值）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#remove-java.lang.Object-java.lang.Object-\">remove</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key, <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;value)</code></th>\r\n			<td>\r\n			<p>仅当指定的密钥当前映射到指定的值时删除该条目。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#replace-java.lang.Object-java.lang.Object-\">replace</a>​(<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;key, <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;value)</code></th>\r\n			<td>\r\n			<p>只有当目标映射到某个值时，才能替换指定键的条目。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#replaceAll-java.util.function.BiFunction-\">replaceAll</a>​(<a href=\"../../java/util/function/BiFunction.html\" title=\"interface in java.util.function\">BiFunction</a>&lt;? super <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,? super <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>,?&gt;&nbsp;function)</code></th>\r\n			<td>\r\n			<p>将每个条目的值替换为对该条目调用给定函数的结果，直到所有条目都被处理或该函数抛出异常。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#save-java.io.OutputStream-java.lang.String-\">save</a>​(<a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">OutputStream</a>&nbsp;out, <a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;comments)</code></th>\r\n			<td>已过时。\r\n			<p>如果在保存属性列表时发生I / O错误，此方法不会抛出IOException。 保存属性列表的首选方法是通过<code>store(OutputStream out, String comments)</code>方法或<code>storeToXML(OutputStream os, String comment)</code>方法。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#setProperty-java.lang.String-java.lang.String-\">setProperty</a>​(<a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;key, <a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;value)</code></th>\r\n			<td>\r\n			<p>调用 <code>Hashtable</code>方法 <code>put</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#size--\">size</a>​()</code></th>\r\n			<td>\r\n			<p>返回此哈希表中的键数。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#store-java.io.OutputStream-java.lang.String-\">store</a>​(<a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">OutputStream</a>&nbsp;out, <a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;comments)</code></th>\r\n			<td>\r\n			<p>将此 <code>Properties</code>表中的此属性列表（键和元素对）以适合于使用 <a href=\"../../java/util/Properties.html#load-java.io.InputStream-\"><code>load(InputStream)</code></a>方法加载到 <code>Properties</code>表格的格式写入输出流。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#store-java.io.Writer-java.lang.String-\">store</a>​(<a href=\"../../java/io/Writer.html\" title=\"class in java.io\">Writer</a>&nbsp;writer, <a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;comments)</code></th>\r\n			<td>\r\n			<p>将此属性列表（键和元素对）写入此 <code>Properties</code>表中，以适合使用 <a href=\"../../java/util/Properties.html#load-java.io.Reader-\"><code>load(Reader)</code></a>方法的格式输出到输出字符流。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#storeToXML-java.io.OutputStream-java.lang.String-\">storeToXML</a>​(<a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">OutputStream</a>&nbsp;os, <a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;comment)</code></th>\r\n			<td>\r\n			<p>发出表示此表中包含的所有属性的XML文档。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#storeToXML-java.io.OutputStream-java.lang.String-java.lang.String-\">storeToXML</a>​(<a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">OutputStream</a>&nbsp;os, <a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;comment, <a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;encoding)</code></th>\r\n			<td>\r\n			<p>使用指定的编码发出表示此表中包含的所有属性的XML文档。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Set.html\" title=\"interface in java.util\">Set</a>&lt;<a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#stringPropertyNames--\">stringPropertyNames</a>​()</code></th>\r\n			<td>\r\n			<p>从该属性列表中返回一个不可修改的键集，其中键及其对应的值是字符串，包括默认属性列表中的不同键，如果尚未从主属性列表中找到相同名称的键。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#toString--\">toString</a>​()</code></th>\r\n			<td>\r\n			<p>以一组条目的形式返回此 <code>Hashtable</code>对象的字符串表示形式，以大括号括起来，并以ASCII字符&ldquo; <code>,&nbsp;</code> &rdquo;（逗号和空格）分隔。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Collection.html\" title=\"interface in java.util\">Collection</a>&lt;<a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/util/Properties.html#values--\">values</a>​()</code></th>\r\n			<td>\r\n			<p>返回此地图中包含的值的<a href=\"../../java/util/Collection.html\" title=\"java.util中的接口\"><code>Collection</code></a>视图。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h4>基本使用</h4>\r\n\r\n<p>以下是使用setProperty，getProperty以及 stringPropertyNames 对 Property 操作。分别相当于 Map 中的 set , get 和 keySet 方法</p>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic05;\r\n\r\nimport java.util.Properties;\r\nimport java.util.Set;\r\n\r\npublic class Basic05Porperties {\r\n    public static void main(String[] args) {\r\n        /*Properties集合的基本使用*/\r\n        Properties properties = new Properties();\r\n        properties.setProperty(\"赵丽颖\", \"演员\");\r\n        properties.setProperty(\"曾一鸣\", \"歌手\");\r\n        properties.setProperty(\"苏乞儿\", \"乞丐\");\r\n        Set&lt;String&gt; set = properties.stringPropertyNames();\r\n        for (String s : set) {\r\n            String val = properties.getProperty(s);\r\n            System.out.println(s + \"--&gt;\" + val);\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<h4>使用 store&nbsp;</h4>\r\n\r\n<p>方法说明：</p>\r\n\r\n<pre>\r\npublic&nbsp;void&nbsp;store​(<a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">OutputStream</a>&nbsp;out,\r\n                  <a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;comments)\r\n           throws <a href=\"../../java/io/IOException.html\" title=\"class in java.io\">IOException</a></pre>\r\n\r\n<p>将此属性列表（键和元素对）写入此<code>Properties</code>表中，以适合使用<a href=\"../../java/util/Properties.html#load-java.io.InputStream-\"><code>load(InputStream)</code></a>方法加载到<code>Properties</code>表格的格式输出流。</p>\r\n\r\n<p>此<code>Properties</code>表（如果有）的默认表中的属性<em>未</em>通过此方法写出。</p>\r\n\r\n<p>此方法输出与<a href=\"../../java/util/Properties.html#store-java.io.Writer-java.lang.String-\"><code>store(Writer)</code>中</a>规定的相同格式的注释，属性键和值，具有以下区别：</p>\r\n\r\n<p>在写入条目之后，输出流被刷新。 此方法返回后，输出流保持打开状态。</p>\r\n\r\n<p>参数</p>\r\n\r\n<p><code>out</code> - 输出流。</p>\r\n\r\n<p><code>comments</code> - 属性列表的描述。</p>\r\n\r\n<p>异常</p>\r\n\r\n<p><code><a href=\"../../java/io/IOException.html\" title=\"class in java.io\">IOException</a></code> - 如果将此属性列表写入指定的输出流， <code>IOException</code>抛出一个 <code>IOException</code> 。</p>\r\n\r\n<p><code><a href=\"../../java/lang/ClassCastException.html\" title=\"class in java.lang\">ClassCastException</a></code> - 如果此 <code>Properties</code>对象包含任何不是 <code>Strings</code>键或值。</p>\r\n\r\n<p><code><a href=\"../../java/lang/NullPointerException.html\" title=\"class in java.lang\">NullPointerException</a></code> - 如果 <code>out</code>为空。</p>\r\n\r\n<ul>\r\n	<li>流使用ISO 8859-1字符编码编写。</li>\r\n	<li>注释中不在拉丁文1中的字符为<code>\\u</code> <em>xxxx，</em>用于其相应的unicode十六进制值<em>xxxx</em> 。</li>\r\n	<li>字符小于<code>\\u0020</code>和大于字符<code>\\u007E</code>在属性键或值被写为<code>\\u</code> <em>XXXX</em>为适当的十六进制值<em>XXXX。</em></li>\r\n</ul>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic05;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.util.Properties;\r\nimport java.util.Set;\r\n\r\npublic class Basic05Porperties {\r\n    public static void main(String[] args) throws IOException {\r\n        /*Properties集合的基本使用*/\r\n        Properties properties = new Properties();\r\n        properties.setProperty(\"赵丽颖\", \"演员\");\r\n        properties.setProperty(\"曾一鸣\", \"歌手\");\r\n        properties.setProperty(\"苏乞儿\", \"乞丐\");\r\n        Set&lt;String&gt; set = properties.stringPropertyNames();\r\n        for (String s : set) {\r\n            String val = properties.getProperty(s);\r\n            System.out.println(s + \"--&gt;\" + val);\r\n        }\r\n        FileWriter fot = new FileWriter(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic05\\\\TestStore.txt\");\r\n        properties.store(fot, \"property practice set\"); // comments不能写中文。\r\n        fot.close();\r\n        /*#property practice set\r\n        #Sun May 10 08:05:31 CST 2020\r\n        赵丽颖=演员\r\n        苏乞儿=乞丐\r\n        曾一鸣=歌手\r\n        */\r\n    }\r\n}\r\n\r\n</code></pre>\r\n\r\n<h4>使用 load&nbsp;</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic05;\r\n\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.Properties;\r\nimport java.util.Set;\r\n\r\npublic class Basic05PropertiesStore {\r\n    public static void main(String[] args) throws IOException {\r\n        /*使用步骤：\r\n         * 1.创建Properties集合对象\r\n         * 2.使用Properties集合对象中的方法load读取保存键值对的文件\r\n         * 3.遍历Properties集合\r\n         * 注意事项：\r\n         * 1.存储键值对的文件中键与值都默认是字符串\r\n         * 2.存储键值对的文件中，可以使用#进行注释，注释的键值对将不会在被读取\r\n         * 3.存储键键值对的文件中，键与值的链接符号可以是=，空格（其他符号）\r\n         * 读取文件内容：\r\n         *  #property practice set\r\n            #Sun May 10 08:05:31 CST 2020\r\n            赵丽颖=演员\r\n            苏乞儿=乞丐\r\n            #曾一鸣=歌手\r\n         */\r\n        Properties prop = new Properties();\r\n        prop.load(new FileReader(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic05\\\\TestStore.txt\"));\r\n        Set&lt;String&gt; set = prop.stringPropertyNames();\r\n        for (String s : set) {\r\n            String v = prop.getProperty(s);\r\n            System.out.println(s + \"=\" + v);\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>','2020-05-10 08:22:57.384078','2020-05-10 08:24:57.181144',1,7),(110,'缓冲流','<h4>Class BufferedOutputStream</h4>\r\n\r\n<ul>\r\n	<li><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">java.lang.Object</a></li>\r\n	<li>\r\n	<ul>\r\n		<li><a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">java.io.OutputStream</a></li>\r\n		<li>\r\n		<ul>\r\n			<li><a href=\"../../java/io/FilterOutputStream.html\" title=\"class in java.io\">java.io.FilterOutputStream</a></li>\r\n			<li>\r\n			<ul>\r\n				<li>java.io.BufferedOutputStream</li>\r\n			</ul>\r\n			</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<p>All Implemented Interfaces:</p>\r\n\r\n	<p><code><a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></code> ， <code><a href=\"../../java/io/Flushable.html\" title=\"interface in java.io\">Flushable</a></code> ， <code><a href=\"../../java/lang/AutoCloseable.html\" title=\"interface in java.lang\">AutoCloseable</a></code></p>\r\n	</li>\r\n</ul>\r\n\r\n<pre>\r\npublic class BufferedOutputStream\r\nextends <a href=\"../../java/io/FilterOutputStream.html\" title=\"class in java.io\">FilterOutputStream</a></pre>\r\n\r\n<p>该类实现缓冲输出流。 通过设置这样的输出流，应用程序可以向底层输出流写入字节，而不必为写入的每个字节导致底层系统的调用。</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Constructor</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedOutputStream.html#BufferedOutputStream-java.io.OutputStream-\">BufferedOutputStream</a>​(<a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">OutputStream</a>&nbsp;out)</code></th>\r\n			<td>\r\n			<p>创建一个新的缓冲输出流，以将数据写入指定的底层输出流。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedOutputStream.html#BufferedOutputStream-java.io.OutputStream-int-\">BufferedOutputStream</a>​(<a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">OutputStream</a>&nbsp;out, int&nbsp;size)</code></th>\r\n			<td>\r\n			<p>创建一个新的缓冲输出流，以便以指定的缓冲区大小将数据写入指定的底层输出流。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Modifier and Type</th>\r\n			<th scope=\"col\">方法</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedOutputStream.html#flush--\">flush</a>​()</code></th>\r\n			<td>\r\n			<p>刷新缓冲输出流。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedOutputStream.html#write-byte:A-int-int-\">write</a>​(byte[]&nbsp;b, int&nbsp;off, int&nbsp;len)</code></th>\r\n			<td>\r\n			<p>从偏移量 <code>off</code>开始的指定字节数组写入 <code>len</code>字节到缓冲输出流。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedOutputStream.html#write-int-\">write</a>​(int&nbsp;b)</code></th>\r\n			<td>\r\n			<p>将指定的字节写入缓冲的输出流。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h4>BufferedOutputStream 基本使用</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic05;\r\n\r\nimport java.io.BufferedOutputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.sql.Time;\r\n\r\npublic class Basic05BufferedFileOutputStream {\r\n    /*使用步骤：\r\n    * 1.创建FileOutputStream对象，构造方法绑定要输出的目的地\r\n    * 2.使用BufferedOutputSteam对象，构造方法中传递FileOutputStream对象，提高效率\r\n    * 3.使用BufferedOutputSteam对象中的方法write,把数据写入到内部缓冲区中\r\n    * 4.使用BufferedOutputStream对象中额方法flush,把内部缓冲区的数据，刷新到文件中\r\n    * 5.释放资源（会调用flush方法刷新数据，4可以省略）*/\r\n    public static void main(String[] args) throws IOException {\r\n        FileOutputStream fot = new FileOutputStream(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic05\\\\TestStore.txt\");\r\n        BufferedOutputStream bfot = new BufferedOutputStream(fot);\r\n        bfot.write(\"我先把数据写到内部缓冲区中~\".getBytes());\r\n        FileReader fr =new FileReader(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic05\\\\TestStore.txt\");\r\n        bfot.close();\r\n        char[] chr = new char[1024];\r\n        int len = 0;\r\n        while ((len = fr.read(chr))!=-1) {\r\n            System.out.println(new String(chr, 0, len));\r\n        }\r\n        fr.close();\r\n        /*我先把数据写到内部缓冲区中~*/\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<h4>Class BufferedInputStream</h4>\r\n\r\n<ul>\r\n	<li><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">java.lang.Object</a></li>\r\n	<li>\r\n	<ul>\r\n		<li><a href=\"../../java/io/InputStream.html\" title=\"class in java.io\">java.io.InputStream</a></li>\r\n		<li>\r\n		<ul>\r\n			<li><a href=\"../../java/io/FilterInputStream.html\" title=\"class in java.io\">java.io.FilterInputStream</a></li>\r\n			<li>\r\n			<ul>\r\n				<li>java.io.BufferedInputStream</li>\r\n			</ul>\r\n			</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<p>All Implemented Interfaces:</p>\r\n\r\n	<p><code><a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></code> ， <code><a href=\"../../java/lang/AutoCloseable.html\" title=\"interface in java.lang\">AutoCloseable</a></code></p>\r\n	</li>\r\n</ul>\r\n\r\n<pre>\r\npublic class BufferedInputStream\r\nextends <a href=\"../../java/io/FilterInputStream.html\" title=\"class in java.io\">FilterInputStream</a></pre>\r\n\r\n<p>A <code>BufferedInputStream</code>为另一个输入流添加了功能，即缓冲输入并支持<code>mark</code>和<code>reset</code>方法的功能。 创建<code>BufferedInputStream</code>将创建一个内部缓冲区数组。 当从流中读取或跳过字节时，内部缓冲区将根据需要从所包含的输入流中重新填充，一次很多字节。 <code>mark</code>操作会记住输入流中的一个点，并且<code>reset</code>操作会导致从最近的<code>mark</code>操作读取的所有字节在从包含的输入流中取出新字节之前重新读取。</p>\r\n\r\n<p><!-- ========== METHOD SUMMARY =========== --></p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Constructor</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedInputStream.html#BufferedInputStream-java.io.InputStream-\">BufferedInputStream</a>​(<a href=\"../../java/io/InputStream.html\" title=\"class in java.io\">InputStream</a>&nbsp;in)</code></th>\r\n			<td>\r\n			<p>创建一个 <code>BufferedInputStream</code>并保存其参数，输入流 <code>in</code>供以后使用。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedInputStream.html#BufferedInputStream-java.io.InputStream-int-\">BufferedInputStream</a>​(<a href=\"../../java/io/InputStream.html\" title=\"class in java.io\">InputStream</a>&nbsp;in, int&nbsp;size)</code></th>\r\n			<td>\r\n			<p>创建具有指定缓冲区大小的 <code>BufferedInputStream</code> ，并保存其参数，输入流 <code>in</code>供以后使用。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Modifier and Type</th>\r\n			<th scope=\"col\">方法</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedInputStream.html#available--\">available</a>​()</code></th>\r\n			<td>\r\n			<p>从下一次调用此输入流的方法返回可从该输入流读取（或跳过）的字节数，而不会阻塞。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedInputStream.html#close--\">close</a>​()</code></th>\r\n			<td>\r\n			<p>关闭此输入流并释放与流相关联的任何系统资源。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedInputStream.html#mark-int-\">mark</a>​(int&nbsp;readlimit)</code></th>\r\n			<td>\r\n			<p>见 <code>mark</code>法 <code>InputStream</code>的一般合同。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedInputStream.html#markSupported--\">markSupported</a>​()</code></th>\r\n			<td>\r\n			<p>测试此输入流是否支持 <code>mark</code>和 <code>reset</code>方法。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedInputStream.html#read--\">read</a>​()</code></th>\r\n			<td>\r\n			<p>见 <code>read</code>法 <code>InputStream</code>的一般合同。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedInputStream.html#read-byte:A-int-int-\">read</a>​(byte[]&nbsp;b, int&nbsp;off, int&nbsp;len)</code></th>\r\n			<td>\r\n			<p>从给定的偏移开始，将字节输入流中的字节读入指定的字节数组。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedInputStream.html#reset--\">reset</a>​()</code></th>\r\n			<td>\r\n			<p>见 <code>reset</code>法 <code>InputStream</code>的一般合同。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>long</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/BufferedInputStream.html#skip-long-\">skip</a>​(long&nbsp;n)</code></th>\r\n			<td>\r\n			<p>见 <code>skip</code>法 <code>InputStream</code>的一般合同。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h4>BufferedInputStream 基本使用&nbsp;</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic05;\r\n\r\nimport java.io.BufferedInputStream;\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\n\r\npublic class Basic05BufferedFileInputStream {\r\n    public static void main(String[] args) throws IOException {\r\n        FileInputStream fis = new FileInputStream(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic05\\\\TestStore.txt\");\r\n        BufferedInputStream bis = new BufferedInputStream(fis);\r\n        byte[] b = new byte[1024];\r\n        int len = 0;\r\n        while ((len = bis.read(b))!=-1){\r\n            System.out.println(new String(b, 0, len));\r\n        }\r\n        bis.close();\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>','2020-05-10 09:34:32.578201','2020-05-10 09:35:17.753086',1,7),(111,'转换流','<h4>Class OutputStreamWriter</h4>\r\n\r\n<ul>\r\n	<li><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">java.lang.Object</a></li>\r\n	<li>\r\n	<ul>\r\n		<li><a href=\"../../java/io/Writer.html\" title=\"class in java.io\">java.io.Writer</a></li>\r\n		<li>\r\n		<ul>\r\n			<li>java.io.OutputStreamWriter</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<p>All Implemented Interfaces:</p>\r\n\r\n	<p><code><a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></code> ， <code><a href=\"../../java/io/Flushable.html\" title=\"interface in java.io\">Flushable</a></code> ， <code><a href=\"../../java/lang/Appendable.html\" title=\"interface in java.lang\">Appendable</a></code> ， <code><a href=\"../../java/lang/AutoCloseable.html\" title=\"interface in java.lang\">AutoCloseable</a></code></p>\r\n\r\n	<p>已知直接子类：</p>\r\n\r\n	<p><code><a href=\"../../java/io/FileWriter.html\" title=\"class in java.io\">FileWriter</a></code></p>\r\n	</li>\r\n</ul>\r\n\r\n<pre>\r\npublic class OutputStreamWriter\r\nextends <a href=\"../../java/io/Writer.html\" title=\"class in java.io\">Writer</a></pre>\r\n\r\n<p>OutputStreamWriter是从字符流到字节流的桥梁：使用指定的<a href=\"../../java/nio/charset/Charset.html\" title=\"java.nio.charset中的类\"><code>charset</code>将</a>写入的字符编码为字节。 它使用的字符集可以由名称指定，也可以被明确指定，或者可以接受平台的默认字符集。</p>\r\n\r\n<p>每次调用write（）方法都会使编码转换器在给定的字符上被调用。 所得到的字节在写入底层输出流之前累积在缓冲区中。 请注意，传递给write（）方法的字符不会缓冲。</p>\r\n\r\n<p>为了最大的效率，请考虑在BufferedWriter中包装一个OutputStreamWriter，以避免频繁的转换器调用。 例如：</p>\r\n\r\n<pre>\r\n  Writer out\r\n   = new BufferedWriter(new OutputStreamWriter(System.out)); \r\n</pre>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Constructor</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/OutputStreamWriter.html#OutputStreamWriter-java.io.OutputStream-\">OutputStreamWriter</a>​(<a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">OutputStream</a>&nbsp;out)</code></th>\r\n			<td>\r\n			<p>创建一个使用默认字符编码的OutputStreamWriter。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/OutputStreamWriter.html#OutputStreamWriter-java.io.OutputStream-java.lang.String-\">OutputStreamWriter</a>​(<a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">OutputStream</a>&nbsp;out, <a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;charsetName)</code></th>\r\n			<td>\r\n			<p>创建一个使用命名字符集的OutputStreamWriter。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/OutputStreamWriter.html#OutputStreamWriter-java.io.OutputStream-java.nio.charset.Charset-\">OutputStreamWriter</a>​(<a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">OutputStream</a>&nbsp;out, <a href=\"../../java/nio/charset/Charset.html\" title=\"class in java.nio.charset\">Charset</a>&nbsp;cs)</code></th>\r\n			<td>\r\n			<p>创建一个使用给定字符集的OutputStreamWriter。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/OutputStreamWriter.html#OutputStreamWriter-java.io.OutputStream-java.nio.charset.CharsetEncoder-\">OutputStreamWriter</a>​(<a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">OutputStream</a>&nbsp;out, <a href=\"../../java/nio/charset/CharsetEncoder.html\" title=\"class in java.nio.charset\">CharsetEncoder</a>&nbsp;enc)</code></th>\r\n			<td>\r\n			<p>创建一个使用给定字符集编码器的OutputStreamWriter。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Modifier and Type</th>\r\n			<th scope=\"col\">方法</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/io/Writer.html\" title=\"class in java.io\">Writer</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/OutputStreamWriter.html#append-java.lang.CharSequence-\">append</a>​(<a href=\"../../java/lang/CharSequence.html\" title=\"interface in java.lang\">CharSequence</a>&nbsp;csq)</code></th>\r\n			<td>\r\n			<p>将指定的字符序列附加到此作者。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/io/Writer.html\" title=\"class in java.io\">Writer</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/OutputStreamWriter.html#append-java.lang.CharSequence-int-int-\">append</a>​(<a href=\"../../java/lang/CharSequence.html\" title=\"interface in java.lang\">CharSequence</a>&nbsp;csq, int&nbsp;start, int&nbsp;end)</code></th>\r\n			<td>\r\n			<p>将指定字符序列的子序列附加到此作者。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/OutputStreamWriter.html#close--\">close</a>​()</code></th>\r\n			<td>\r\n			<p>关闭流，先刷新。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/OutputStreamWriter.html#flush--\">flush</a>​()</code></th>\r\n			<td>\r\n			<p>刷新流。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/OutputStreamWriter.html#getEncoding--\">getEncoding</a>​()</code></th>\r\n			<td>\r\n			<p>返回此流使用的字符编码的名称。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/OutputStreamWriter.html#write-char:A-int-int-\">write</a>​(char[]&nbsp;cbuf, int&nbsp;off, int&nbsp;len)</code></th>\r\n			<td>\r\n			<p>写入字符数组的一部分。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/OutputStreamWriter.html#write-int-\">write</a>​(int&nbsp;c)</code></th>\r\n			<td>\r\n			<p>写一个字符</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/OutputStreamWriter.html#write-java.lang.String-int-int-\">write</a>​(<a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;str, int&nbsp;off, int&nbsp;len)</code></th>\r\n			<td>\r\n			<p>写一个字符串的一部分。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>OutStreamWriter 基本使用&nbsp;</p>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic05;\r\n\r\nimport java.io.*;\r\n\r\npublic class Basic05InputStreamReaderOutputStreamWriter {\r\n    public static void main(String[] args) throws IOException {\r\n        /*写一个GBK编码格式的文件*/\r\n        OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic05\\\\TestOutputStreamWriter.txt\"), \"GBK\");\r\n        osw.write(\"乞力马扎罗山\");\r\n        osw.flush();\r\n        osw.close(); /*����������ɽ*/\r\n    }\r\n}</code></pre>\r\n\r\n<h4>Class InputStreamReader</h4>\r\n\r\n<ul>\r\n	<li><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">java.lang.Object</a></li>\r\n	<li>\r\n	<ul>\r\n		<li><a href=\"../../java/io/Reader.html\" title=\"class in java.io\">java.io.Reader</a></li>\r\n		<li>\r\n		<ul>\r\n			<li>java.io.InputStreamReader</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<p>All Implemented Interfaces:</p>\r\n\r\n	<p><code><a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></code> ， <code><a href=\"../../java/lang/AutoCloseable.html\" title=\"interface in java.lang\">AutoCloseable</a></code> ， <code><a href=\"../../java/lang/Readable.html\" title=\"interface in java.lang\">Readable</a></code></p>\r\n\r\n	<p>已知直接子类：</p>\r\n\r\n	<p><code><a href=\"../../java/io/FileReader.html\" title=\"class in java.io\">FileReader</a></code></p>\r\n	</li>\r\n</ul>\r\n\r\n<pre>\r\npublic class InputStreamReader\r\nextends <a href=\"../../java/io/Reader.html\" title=\"class in java.io\">Reader</a></pre>\r\n\r\n<p>InputStreamReader是从字节流到字符流的桥梁：它读取字节，并使用指定的<a href=\"../../java/nio/charset/Charset.html\" title=\"java.nio.charset中的类\"><code>charset</code></a>将其解码为字符。 它使用的字符集可以由名称指定，也可以被明确指定，或者可以接受平台的默认字符集。</p>\r\n\r\n<p>每个调用InputStreamReader的read（）方法之一可能会导致从底层字节输入流读取一个或多个字节。 为了使字节有效地转换为字符，可以从底层流读取比满足当前读取操作所需的更多字节。</p>\r\n\r\n<p>为了最大的效率，请考虑在BufferedReader中包装一个InputStreamReader。 例如：</p>\r\n\r\n<pre>\r\n  BufferedReader in\r\n   = new BufferedReader(new InputStreamReader(System.in)); \r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Constructor</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/InputStreamReader.html#InputStreamReader-java.io.InputStream-\">InputStreamReader</a>​(<a href=\"../../java/io/InputStream.html\" title=\"class in java.io\">InputStream</a>&nbsp;in)</code></th>\r\n			<td>\r\n			<p>创建一个使用默认字符集的InputStreamReader。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/InputStreamReader.html#InputStreamReader-java.io.InputStream-java.lang.String-\">InputStreamReader</a>​(<a href=\"../../java/io/InputStream.html\" title=\"class in java.io\">InputStream</a>&nbsp;in, <a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;charsetName)</code></th>\r\n			<td>\r\n			<p>创建一个使用命名字符集的InputStreamReader。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/InputStreamReader.html#InputStreamReader-java.io.InputStream-java.nio.charset.Charset-\">InputStreamReader</a>​(<a href=\"../../java/io/InputStream.html\" title=\"class in java.io\">InputStream</a>&nbsp;in, <a href=\"../../java/nio/charset/Charset.html\" title=\"class in java.nio.charset\">Charset</a>&nbsp;cs)</code></th>\r\n			<td>\r\n			<p>创建一个使用给定字符集的InputStreamReader。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/InputStreamReader.html#InputStreamReader-java.io.InputStream-java.nio.charset.CharsetDecoder-\">InputStreamReader</a>​(<a href=\"../../java/io/InputStream.html\" title=\"class in java.io\">InputStream</a>&nbsp;in, <a href=\"../../java/nio/charset/CharsetDecoder.html\" title=\"class in java.nio.charset\">CharsetDecoder</a>&nbsp;dec)</code></th>\r\n			<td>\r\n			<p>创建一个使用给定字符集解码器的InputStreamReader。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Modifier and Type</th>\r\n			<th scope=\"col\">方法</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/InputStreamReader.html#close--\">close</a>​()</code></th>\r\n			<td>\r\n			<p>关闭流并释放与之相关联的任何系统资源。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/InputStreamReader.html#getEncoding--\">getEncoding</a>​()</code></th>\r\n			<td>\r\n			<p>返回此流使用的字符编码的名称。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/InputStreamReader.html#read--\">read</a>​()</code></th>\r\n			<td>\r\n			<p>读一个字符</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/InputStreamReader.html#read-char:A-int-int-\">read</a>​(char[]&nbsp;cbuf, int&nbsp;offset, int&nbsp;length)</code></th>\r\n			<td>\r\n			<p>将字符读入数组的一部分。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/io/InputStreamReader.html#ready--\">ready</a>​()</code></th>\r\n			<td>\r\n			<p>告诉这个流是否准备好被读取。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>InputStreamReader 基本使用</p>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic05;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\n\r\npublic class Basic05InputStreamReader {\r\n    public static void main(String[] args) throws IOException {\r\n        InputStreamReader isr = new InputStreamReader(new FileInputStream(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic05\\\\TestOutputStreamWriter.txt\"), \"gbk\");\r\n        int len = 0;\r\n        while ((len = isr.read()) != 1) {\r\n            System.out.println((char) len);\r\n        }\r\n        isr.close();\r\n    }\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>','2020-05-10 12:46:36.326108','2020-05-10 16:45:54.240820',1,7),(112,'序列化流','<p>其他序列化文章已丢失，自行查找。</p>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic05;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.io.ObjectInputStream;\r\n\r\npublic class Basic05ObjectInputStream {\r\n    public static void main(String[] args) throws IOException, ClassNotFoundException {\r\n        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic05\\\\TestObjectOutputStream.txt\"));\r\n        Object o = ois.readObject();\r\n        ois.close();\r\n        System.out.println(o);\r\n        Basic05Person p = (Basic05Person) o;\r\n        System.out.println(o.getClass() + \"--&gt;\" + p.getName() + \"--&gt;\" + p.getAge());\r\n        /*Basic05Person{name=\'小龙女\', age=18}\r\n        class com.LearnJava.Basic05.Basic05Person--&gt;小龙女--&gt;18\r\n        */\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<p>说明：假设我们给定的类已经被序列化和反序列化，当这个类别修改后再去反序列化，则会出现序列号冲突异常（InvalidClassException），因为每次反序列化，会对比序列化的内容和.class文件的序列号，解决办法是：在这个类中指定一个不变的序列号</p>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic05;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.Objects;\r\n\r\npublic class Basic05Person implements Serializable {\r\n    /*提供一个实现serializable接口的对象，以供ObjectOutputStream序列化*/\r\n    /*指定序列号*/\r\n    private static final long serialVersion = 43L;\r\n    private String name;\r\n    private int age;\r\n\r\n    public Basic05Person(String name, int age) {\r\n        this.name = name;\r\n        this.age = age;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Basic05Person{\" +\r\n                \"name=\'\" + name + \'\\\'\' +\r\n                \", age=\" + age +\r\n                \'}\';\r\n    }\r\n\r\n    public Basic05Person() {\r\n    }\r\n\r\n    public int getAge() {\r\n        return age;\r\n    }\r\n\r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object o) {\r\n        if (this == o) return true;\r\n        if (o == null || getClass() != o.getClass()) return false;\r\n        Basic05Person that = (Basic05Person) o;\r\n        return age == that.age &amp;&amp;\r\n                Objects.equals(name, that.name);\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return Objects.hash(name, age);\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>','2020-05-10 17:30:52.602885','2020-05-10 17:38:13.671747',1,7),(113,'简单实现TCP客户端与服务端','<h4>Class Socket</h4>\r\n\r\n<ul>\r\n	<li><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">java.lang.Object</a></li>\r\n	<li>\r\n	<ul>\r\n		<li>java.net.Socket</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<p>All Implemented Interfaces:</p>\r\n\r\n	<p><code><a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></code> ， <code><a href=\"../../java/lang/AutoCloseable.html\" title=\"interface in java.lang\">AutoCloseable</a></code></p>\r\n\r\n	<p>已知直接子类：</p>\r\n\r\n	<p><code><a href=\"../../javax/net/ssl/SSLSocket.html\" title=\"class in javax.net.ssl\">SSLSocket</a></code></p>\r\n	</li>\r\n</ul>\r\n\r\n<pre>\r\npublic class Socket\r\nextends <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>\r\nimplements <a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></pre>\r\n\r\n<p>该类实现客户端套接字（也称为&ldquo;套接字&rdquo;）。 套接字是两台机器之间通讯的端点。</p>\r\n\r\n<p>套接字的实际工作由<code>SocketImpl</code>类的实例执行。 应用程序通过更改创建套接字实现的套接字工厂，可以配置自己创建适合本地防火墙的套接字。</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Modifier</th>\r\n			<th scope=\"col\">Constructor</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<td><code>&nbsp;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#Socket--\">Socket</a>​()</code></th>\r\n			<td>\r\n			<p>创建一个未连接的套接字，并使用系统默认类型的SocketImpl。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>&nbsp;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#Socket-java.lang.String-int-\">Socket</a>​(<a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;host, int&nbsp;port)</code></th>\r\n			<td>\r\n			<p>创建流套接字并将其连接到指定主机上的指定端口号。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>&nbsp;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#Socket-java.lang.String-int-boolean-\">Socket</a>​(<a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;host, int&nbsp;port, boolean&nbsp;stream)</code></th>\r\n			<td>已过时。\r\n			<p>使用DatagramSocket代替UDP传输。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>&nbsp;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#Socket-java.lang.String-int-java.net.InetAddress-int-\">Socket</a>​(<a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a>&nbsp;host, int&nbsp;port, <a href=\"../../java/net/InetAddress.html\" title=\"class in java.net\">InetAddress</a>&nbsp;localAddr, int&nbsp;localPort)</code></th>\r\n			<td>\r\n			<p>创建套接字并将其连接到指定远程端口上的指定远程主机。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>&nbsp;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#Socket-java.net.InetAddress-int-\">Socket</a>​(<a href=\"../../java/net/InetAddress.html\" title=\"class in java.net\">InetAddress</a>&nbsp;address, int&nbsp;port)</code></th>\r\n			<td>\r\n			<p>创建流套接字并将其连接到指定IP地址的指定端口号。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>&nbsp;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#Socket-java.net.InetAddress-int-boolean-\">Socket</a>​(<a href=\"../../java/net/InetAddress.html\" title=\"class in java.net\">InetAddress</a>&nbsp;host, int&nbsp;port, boolean&nbsp;stream)</code></th>\r\n			<td>已过时。\r\n			<p>使用DatagramSocket代替UDP传输。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>&nbsp;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#Socket-java.net.InetAddress-int-java.net.InetAddress-int-\">Socket</a>​(<a href=\"../../java/net/InetAddress.html\" title=\"class in java.net\">InetAddress</a>&nbsp;address, int&nbsp;port, <a href=\"../../java/net/InetAddress.html\" title=\"class in java.net\">InetAddress</a>&nbsp;localAddr, int&nbsp;localPort)</code></th>\r\n			<td>\r\n			<p>创建套接字并将其连接到指定的远程端口上指定的远程地址。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>&nbsp;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#Socket-java.net.Proxy-\">Socket</a>​(<a href=\"../../java/net/Proxy.html\" title=\"class in java.net\">Proxy</a>&nbsp;proxy)</code></th>\r\n			<td>\r\n			<p>创建一个未连接的套接字，指定应该使用的代理类型（如果有的话），无论其他任何设置如何。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>protected </code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#Socket-java.net.SocketImpl-\">Socket</a>​(<a href=\"../../java/net/SocketImpl.html\" title=\"class in java.net\">SocketImpl</a>&nbsp;impl)</code></th>\r\n			<td>\r\n			<p>使用用户指定的SocketImpl创建一个未连接的Socket。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Modifier and Type</th>\r\n			<th scope=\"col\">方法</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#bind-java.net.SocketAddress-\">bind</a>​(<a href=\"../../java/net/SocketAddress.html\" title=\"class in java.net\">SocketAddress</a>&nbsp;bindpoint)</code></th>\r\n			<td>\r\n			<p>将套接字绑定到本地地址。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#close--\">close</a>​()</code></th>\r\n			<td>\r\n			<p>关闭此套接字。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#connect-java.net.SocketAddress-\">connect</a>​(<a href=\"../../java/net/SocketAddress.html\" title=\"class in java.net\">SocketAddress</a>&nbsp;endpoint)</code></th>\r\n			<td>\r\n			<p>将此套接字连接到服务器。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#connect-java.net.SocketAddress-int-\">connect</a>​(<a href=\"../../java/net/SocketAddress.html\" title=\"class in java.net\">SocketAddress</a>&nbsp;endpoint, int&nbsp;timeout)</code></th>\r\n			<td>\r\n			<p>将此套接字连接到具有指定超时值的服务器。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/nio/channels/SocketChannel.html\" title=\"class in java.nio.channels\">SocketChannel</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getChannel--\">getChannel</a>​()</code></th>\r\n			<td>\r\n			<p>返回与此套接字相关联的唯一的<a href=\"../../java/nio/channels/SocketChannel.html\" title=\"java.nio.channels中的类\"><code>SocketChannel</code></a>对象（如果有）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/net/InetAddress.html\" title=\"class in java.net\">InetAddress</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getInetAddress--\">getInetAddress</a>​()</code></th>\r\n			<td>\r\n			<p>返回套接字所连接的地址。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/io/InputStream.html\" title=\"class in java.io\">InputStream</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getInputStream--\">getInputStream</a>​()</code></th>\r\n			<td>\r\n			<p>返回此套接字的输入流。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getKeepAlive--\">getKeepAlive</a>​()</code></th>\r\n			<td>\r\n			<p>测试是否启用了 <a href=\"../../java/net/SocketOptions.html#SO_KEEPALIVE\"><code>SO_KEEPALIVE</code></a> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/net/InetAddress.html\" title=\"class in java.net\">InetAddress</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getLocalAddress--\">getLocalAddress</a>​()</code></th>\r\n			<td>\r\n			<p>获取套接字所绑定的本地地址。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getLocalPort--\">getLocalPort</a>​()</code></th>\r\n			<td>\r\n			<p>返回此套接字绑定到的本地端口号。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/net/SocketAddress.html\" title=\"class in java.net\">SocketAddress</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getLocalSocketAddress--\">getLocalSocketAddress</a>​()</code></th>\r\n			<td>\r\n			<p>返回此套接字绑定到的端点的地址。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getOOBInline--\">getOOBInline</a>​()</code></th>\r\n			<td>\r\n			<p>测试是否启用了 <a href=\"../../java/net/SocketOptions.html#SO_OOBINLINE\"><code>SO_OOBINLINE</code></a> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>&lt;T&gt;&nbsp;T</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getOption-java.net.SocketOption-\">getOption</a>​(<a href=\"../../java/net/SocketOption.html\" title=\"interface in java.net\">SocketOption</a>&lt;T&gt;&nbsp;name)</code></th>\r\n			<td>\r\n			<p>返回套接字选项的值。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/io/OutputStream.html\" title=\"class in java.io\">OutputStream</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getOutputStream--\">getOutputStream</a>​()</code></th>\r\n			<td>\r\n			<p>返回此套接字的输出流。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getPort--\">getPort</a>​()</code></th>\r\n			<td>\r\n			<p>返回此套接字连接到的远程端口号。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getReceiveBufferSize--\">getReceiveBufferSize</a>​()</code></th>\r\n			<td>\r\n			<p>获取此 <code>Socket</code>的 <a href=\"../../java/net/SocketOptions.html#SO_RCVBUF\"><code>SO_RCVBUF</code></a>选项的值，即该平台在此 <code>Socket</code>上输入的缓冲区大小。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/net/SocketAddress.html\" title=\"class in java.net\">SocketAddress</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getRemoteSocketAddress--\">getRemoteSocketAddress</a>​()</code></th>\r\n			<td>\r\n			<p>返回此套接字连接到的端点的地址，如果未连接，则 <code>null</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getReuseAddress--\">getReuseAddress</a>​()</code></th>\r\n			<td>\r\n			<p>测试是否启用了 <a href=\"../../java/net/SocketOptions.html#SO_REUSEADDR\"><code>SO_REUSEADDR</code></a> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getSendBufferSize--\">getSendBufferSize</a>​()</code></th>\r\n			<td>\r\n			<p>获取此 <code>Socket</code>的 <a href=\"../../java/net/SocketOptions.html#SO_SNDBUF\"><code>SO_SNDBUF</code></a>选项的值，即平台在此 <code>Socket</code>上输出使用的缓冲区大小。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getSoLinger--\">getSoLinger</a>​()</code></th>\r\n			<td>\r\n			<p>退货设置为 <a href=\"../../java/net/SocketOptions.html#SO_LINGER\"><code>SO_LINGER</code></a> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getSoTimeout--\">getSoTimeout</a>​()</code></th>\r\n			<td>\r\n			<p>退货设置为<a href=\"../../java/net/SocketOptions.html#SO_TIMEOUT\"><code>SO_TIMEOUT</code></a> 。 0返回意味着该选项被禁用（即无限超时）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getTcpNoDelay--\">getTcpNoDelay</a>​()</code></th>\r\n			<td>\r\n			<p>测试是否启用了 <a href=\"../../java/net/SocketOptions.html#TCP_NODELAY\"><code>TCP_NODELAY</code></a> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#getTrafficClass--\">getTrafficClass</a>​()</code></th>\r\n			<td>\r\n			<p>在从此Socket发送的数据包的IP头中获取流量类或服务类型</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#isBound--\">isBound</a>​()</code></th>\r\n			<td>\r\n			<p>返回套接字的绑定状态。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#isClosed--\">isClosed</a>​()</code></th>\r\n			<td>\r\n			<p>返回套接字的关闭状态。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#isConnected--\">isConnected</a>​()</code></th>\r\n			<td>\r\n			<p>返回套接字的连接状态。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#isInputShutdown--\">isInputShutdown</a>​()</code></th>\r\n			<td>\r\n			<p>返回套接字连接的一半是否关闭。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#isOutputShutdown--\">isOutputShutdown</a>​()</code></th>\r\n			<td>\r\n			<p>返回套接字连接的写半是否关闭。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#sendUrgentData-int-\">sendUrgentData</a>​(int&nbsp;data)</code></th>\r\n			<td>\r\n			<p>在套接字上发送一个字节的紧急数据。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#setKeepAlive-boolean-\">setKeepAlive</a>​(boolean&nbsp;on)</code></th>\r\n			<td>\r\n			<p>启用/禁用 <a href=\"../../java/net/SocketOptions.html#SO_KEEPALIVE\"><code>SO_KEEPALIVE</code></a> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#setOOBInline-boolean-\">setOOBInline</a>​(boolean&nbsp;on)</code></th>\r\n			<td>\r\n			<p>启用/禁用 <a href=\"../../java/net/SocketOptions.html#SO_OOBINLINE\"><code>SO_OOBINLINE</code></a> （接收TCP紧急数据）默认情况下，此选项被禁用，并且在套接字上接收的TCP紧急数据被静默地丢弃。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>&lt;T&gt;&nbsp;<a href=\"../../java/net/Socket.html\" title=\"class in java.net\">Socket</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#setOption-java.net.SocketOption-T-\">setOption</a>​(<a href=\"../../java/net/SocketOption.html\" title=\"interface in java.net\">SocketOption</a>&lt;T&gt;&nbsp;name, T&nbsp;value)</code></th>\r\n			<td>\r\n			<p>设置套接字选项的值。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#setPerformancePreferences-int-int-int-\">setPerformancePreferences</a>​(int&nbsp;connectionTime, int&nbsp;latency, int&nbsp;bandwidth)</code></th>\r\n			<td>\r\n			<p>设置此套接字的性能首选项。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#setReceiveBufferSize-int-\">setReceiveBufferSize</a>​(int&nbsp;size)</code></th>\r\n			<td>\r\n			<p>设置 <a href=\"../../java/net/SocketOptions.html#SO_RCVBUF\"><code>SO_RCVBUF</code></a>选项，此规定值 <code>Socket</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#setReuseAddress-boolean-\">setReuseAddress</a>​(boolean&nbsp;on)</code></th>\r\n			<td>\r\n			<p>启用/禁用 <a href=\"../../java/net/SocketOptions.html#SO_REUSEADDR\"><code>SO_REUSEADDR</code></a>套接字选项。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#setSendBufferSize-int-\">setSendBufferSize</a>​(int&nbsp;size)</code></th>\r\n			<td>\r\n			<p>设置 <a href=\"../../java/net/SocketOptions.html#SO_SNDBUF\"><code>SO_SNDBUF</code></a>选项，此规定值 <code>Socket</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#setSocketImplFactory-java.net.SocketImplFactory-\">setSocketImplFactory</a>​(<a href=\"../../java/net/SocketImplFactory.html\" title=\"interface in java.net\">SocketImplFactory</a>&nbsp;fac)</code></th>\r\n			<td>\r\n			<p>设置应用程序的客户端套接字实现工厂。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#setSoLinger-boolean-int-\">setSoLinger</a>​(boolean&nbsp;on, int&nbsp;linger)</code></th>\r\n			<td>\r\n			<p>启用/禁用 <a href=\"../../java/net/SocketOptions.html#SO_LINGER\"><code>SO_LINGER</code></a>具有指定的逗留时间（以秒为单位）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#setSoTimeout-int-\">setSoTimeout</a>​(int&nbsp;timeout)</code></th>\r\n			<td>\r\n			<p>启用/禁用 <a href=\"../../java/net/SocketOptions.html#SO_TIMEOUT\"><code>SO_TIMEOUT</code></a>与指定的超时，以毫秒为单位。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#setTcpNoDelay-boolean-\">setTcpNoDelay</a>​(boolean&nbsp;on)</code></th>\r\n			<td>\r\n			<p>启用/禁用 <a href=\"../../java/net/SocketOptions.html#TCP_NODELAY\"><code>TCP_NODELAY</code></a> （禁用/启用Nagle的算法）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#setTrafficClass-int-\">setTrafficClass</a>​(int&nbsp;tc)</code></th>\r\n			<td>\r\n			<p>在从此Socket发送的数据包的IP头中设置流量类或服务类型字节。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#shutdownInput--\">shutdownInput</a>​()</code></th>\r\n			<td>\r\n			<p>将此套接字的输入流放置在&ldquo;流的末尾&rdquo;。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#shutdownOutput--\">shutdownOutput</a>​()</code></th>\r\n			<td>\r\n			<p>禁用此套接字的输出流。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Set.html\" title=\"interface in java.util\">Set</a>&lt;<a href=\"../../java/net/SocketOption.html\" title=\"interface in java.net\">SocketOption</a>&lt;?&gt;&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#supportedOptions--\">supportedOptions</a>​()</code></th>\r\n			<td>\r\n			<p>返回此套接字支持的一组套接字选项。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/Socket.html#toString--\">toString</a>​()</code></th>\r\n			<td>\r\n			<p>将此套接字转换为 <code>String</code> 。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h4>&nbsp;实现一个客户端</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic06;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.OutputStream;\r\nimport java.net.Socket;\r\n\r\npublic class Basic06Tcpclient {\r\n    /*将Basic03中的TestStore.txt上传到服务器上*/\r\n    public static void main(String[] args) throws IOException {\r\n        // 创建一个socket对象\r\n        Socket s = new Socket(\"127.0.0.1\", 8888);\r\n        FileInputStream fis = new FileInputStream(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic05\\\\TestStore.txt\");\r\n        OutputStream outputStream = s.getOutputStream();\r\n        byte[] b = new byte[1024];\r\n        int len = 0;\r\n        while ((len = fis.read(b)) != -1) {\r\n            // 把文件用网络字节输出流上传到服务器\r\n            outputStream.write(b, 0, len);\r\n        }\r\n        s.shutdownOutput(); //结束标识\r\n        // 读取服务器回写的数据\r\n        InputStream is = s.getInputStream();\r\n        while((len=is.read(b))!=-1){\r\n            System.out.println(new String(b, 0, len));\r\n        }\r\n        fis.close();\r\n        s.close();\r\n    }\r\n}</code></pre>\r\n\r\n<h4>Class ServerSocket</h4>\r\n\r\n<ul>\r\n	<li><a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">java.lang.Object</a></li>\r\n	<li>\r\n	<ul>\r\n		<li>java.net.ServerSocket</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<p>All Implemented Interfaces:</p>\r\n\r\n	<p><code><a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></code> ， <code><a href=\"../../java/lang/AutoCloseable.html\" title=\"interface in java.lang\">AutoCloseable</a></code></p>\r\n\r\n	<p>已知直接子类：</p>\r\n\r\n	<p><code><a href=\"../../javax/net/ssl/SSLServerSocket.html\" title=\"class in javax.net.ssl\">SSLServerSocket</a></code></p>\r\n	</li>\r\n</ul>\r\n\r\n<pre>\r\npublic class ServerSocket\r\nextends <a href=\"../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>\r\nimplements <a href=\"../../java/io/Closeable.html\" title=\"interface in java.io\">Closeable</a></pre>\r\n\r\n<p>这个类实现了服务器套接字。 服务器套接字等待通过网络进入的请求。 它根据该请求执行一些操作，然后可能将结果返回给请求者。</p>\r\n\r\n<p>服务器套接字的实际工作由<code>SocketImpl</code>类的实例执行。 应用程序可以更改创建套接字实现的套接字工厂，以配置自己创建适合本地防火墙的套接字。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Constructor</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#ServerSocket--\">ServerSocket</a>​()</code></th>\r\n			<td>\r\n			<p>创建未绑定的服务器套接字。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#ServerSocket-int-\">ServerSocket</a>​(int&nbsp;port)</code></th>\r\n			<td>\r\n			<p>创建绑定到指定端口的服务器套接字。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#ServerSocket-int-int-\">ServerSocket</a>​(int&nbsp;port, int&nbsp;backlog)</code></th>\r\n			<td>\r\n			<p>创建服务器套接字并将其绑定到指定的本地端口号，并指定了积压。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#ServerSocket-int-int-java.net.InetAddress-\">ServerSocket</a>​(int&nbsp;port, int&nbsp;backlog, <a href=\"../../java/net/InetAddress.html\" title=\"class in java.net\">InetAddress</a>&nbsp;bindAddr)</code></th>\r\n			<td>\r\n			<p>创建一个具有指定端口的服务器，侦听backlog和本地IP地址绑定。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Modifier and Type</th>\r\n			<th scope=\"col\">方法</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/net/Socket.html\" title=\"class in java.net\">Socket</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#accept--\">accept</a>​()</code></th>\r\n			<td>\r\n			<p>侦听要连接到此套接字并接受它。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#bind-java.net.SocketAddress-\">bind</a>​(<a href=\"../../java/net/SocketAddress.html\" title=\"class in java.net\">SocketAddress</a>&nbsp;endpoint)</code></th>\r\n			<td>\r\n			<p>将 <code>ServerSocket</code>绑定到特定地址（IP地址和端口号）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#bind-java.net.SocketAddress-int-\">bind</a>​(<a href=\"../../java/net/SocketAddress.html\" title=\"class in java.net\">SocketAddress</a>&nbsp;endpoint, int&nbsp;backlog)</code></th>\r\n			<td>\r\n			<p>将 <code>ServerSocket</code>绑定到特定地址（IP地址和端口号）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#close--\">close</a>​()</code></th>\r\n			<td>\r\n			<p>关闭此套接字。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/nio/channels/ServerSocketChannel.html\" title=\"class in java.nio.channels\">ServerSocketChannel</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#getChannel--\">getChannel</a>​()</code></th>\r\n			<td>\r\n			<p>返回与此套接字相关联的唯一的<a href=\"../../java/nio/channels/ServerSocketChannel.html\" title=\"java.nio.channels中的类\"><code>ServerSocketChannel</code></a>对象（如果有）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/net/InetAddress.html\" title=\"class in java.net\">InetAddress</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#getInetAddress--\">getInetAddress</a>​()</code></th>\r\n			<td>\r\n			<p>返回此服务器套接字的本地地址。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#getLocalPort--\">getLocalPort</a>​()</code></th>\r\n			<td>\r\n			<p>返回此套接字正在侦听的端口号。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/net/SocketAddress.html\" title=\"class in java.net\">SocketAddress</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#getLocalSocketAddress--\">getLocalSocketAddress</a>​()</code></th>\r\n			<td>\r\n			<p>返回此套接字绑定到的端点的地址。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>&lt;T&gt;&nbsp;T</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#getOption-java.net.SocketOption-\">getOption</a>​(<a href=\"../../java/net/SocketOption.html\" title=\"interface in java.net\">SocketOption</a>&lt;T&gt;&nbsp;name)</code></th>\r\n			<td>\r\n			<p>返回套接字选项的值。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#getReceiveBufferSize--\">getReceiveBufferSize</a>​()</code></th>\r\n			<td>\r\n			<p>获取此 <code>ServerSocket</code>的 <a href=\"../../java/net/SocketOptions.html#SO_RCVBUF\"><code>SO_RCVBUF</code></a>选项的值，即将用于从该 <code>ServerSocket</code>接受的套接字的缓冲区大小。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#getReuseAddress--\">getReuseAddress</a>​()</code></th>\r\n			<td>\r\n			<p>测试是否启用了 <a href=\"../../java/net/SocketOptions.html#SO_REUSEADDR\"><code>SO_REUSEADDR</code></a> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>int</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#getSoTimeout--\">getSoTimeout</a>​()</code></th>\r\n			<td>\r\n			<p>检索<a href=\"../../java/net/SocketOptions.html#SO_TIMEOUT\"><code>SO_TIMEOUT</code>的</a>设置。 0返回意味着该选项被禁用（即无限超时）。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>protected void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#implAccept-java.net.Socket-\">implAccept</a>​(<a href=\"../../java/net/Socket.html\" title=\"class in java.net\">Socket</a>&nbsp;s)</code></th>\r\n			<td>\r\n			<p>ServerSocket的子类使用这个方法来覆盖accept（）来返回自己的套接字子类。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#isBound--\">isBound</a>​()</code></th>\r\n			<td>\r\n			<p>返回ServerSocket的绑定状态。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#isClosed--\">isClosed</a>​()</code></th>\r\n			<td>\r\n			<p>返回ServerSocket的关闭状态。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>&lt;T&gt;&nbsp;<a href=\"../../java/net/ServerSocket.html\" title=\"class in java.net\">ServerSocket</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#setOption-java.net.SocketOption-T-\">setOption</a>​(<a href=\"../../java/net/SocketOption.html\" title=\"interface in java.net\">SocketOption</a>&lt;T&gt;&nbsp;name, T&nbsp;value)</code></th>\r\n			<td>\r\n			<p>设置套接字选项的值。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#setPerformancePreferences-int-int-int-\">setPerformancePreferences</a>​(int&nbsp;connectionTime, int&nbsp;latency, int&nbsp;bandwidth)</code></th>\r\n			<td>\r\n			<p>设置此ServerSocket的性能首选项。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#setReceiveBufferSize-int-\">setReceiveBufferSize</a>​(int&nbsp;size)</code></th>\r\n			<td>\r\n			<p>设置为默认建议值 <a href=\"../../java/net/SocketOptions.html#SO_RCVBUF\"><code>SO_RCVBUF</code></a>选择从该接受的套接字 <code>ServerSocket</code> 。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#setReuseAddress-boolean-\">setReuseAddress</a>​(boolean&nbsp;on)</code></th>\r\n			<td>\r\n			<p>启用/禁用 <a href=\"../../java/net/SocketOptions.html#SO_REUSEADDR\"><code>SO_REUSEADDR</code></a>套接字选项。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#setSocketFactory-java.net.SocketImplFactory-\">setSocketFactory</a>​(<a href=\"../../java/net/SocketImplFactory.html\" title=\"interface in java.net\">SocketImplFactory</a>&nbsp;fac)</code></th>\r\n			<td>\r\n			<p>设置应用程序的服务器套接字实现工厂。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#setSoTimeout-int-\">setSoTimeout</a>​(int&nbsp;timeout)</code></th>\r\n			<td>\r\n			<p>启用/禁用 <a href=\"../../java/net/SocketOptions.html#SO_TIMEOUT\"><code>SO_TIMEOUT</code></a>与指定的超时，以毫秒为单位。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/util/Set.html\" title=\"interface in java.util\">Set</a>&lt;<a href=\"../../java/net/SocketOption.html\" title=\"interface in java.net\">SocketOption</a>&lt;?&gt;&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#supportedOptions--\">supportedOptions</a>​()</code></th>\r\n			<td>\r\n			<p>返回此服务器套接字支持的一组套接字选项。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code><a href=\"../../java/lang/String.html\" title=\"class in java.lang\">String</a></code></td>\r\n			<th scope=\"row\"><code><a href=\"../../java/net/ServerSocket.html#toString--\">toString</a>​()</code></th>\r\n			<td>\r\n			<p>将此套接字的实现地址和实现端口作为 <code>String</code> 。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h4>服务端简单实现</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package com.LearnJava.Basic06;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.net.ServerSocket;\r\nimport java.net.Socket;\r\nimport java.util.Random;\r\n\r\npublic class Basic06TcpServer {\r\n    public static void main(String[] args) throws IOException {\r\n        ServerSocket serverSocket = null;\r\n        final FileOutputStream[] fous = {null};\r\n        serverSocket = new ServerSocket(8888);\r\n\r\n        while (true) {\r\n            Socket socket = serverSocket.accept();\r\n            new Thread(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    try {\r\n                        InputStream inputStream = socket.getInputStream();\r\n                        File file = new File(\"E:\\\\javaProject\\\\src\\\\com\\\\LearnJava\\\\Basic06\\\\Upload\");\r\n                        if (!file.exists()) {\r\n                            file.mkdirs();\r\n                        }\r\n                        fous[0] = new FileOutputStream(file + \"\\\\\" + System.currentTimeMillis() + new Random().nextInt(99999) + \".txt\");\r\n                        byte[] n = new byte[1024];\r\n                        int len = 0;\r\n                        while ((len = inputStream.read(n)) != -1) {\r\n                            fous[0].write(n, 0, len);\r\n                        }\r\n                        socket.getOutputStream().write(\"上传成功\".getBytes());\r\n\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    } finally {\r\n                        try {\r\n                            fous[0].close();\r\n                            socket.close();\r\n                        } catch (IOException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                }\r\n            }).start();\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>','2020-05-11 22:06:00.111054','2020-05-11 22:33:00.866514',1,7),(114,'函数式接口','<h4>&nbsp;</h4>\r\n\r\n<h4>注解</h4>\r\n\r\n<p>@FunctionalInterface</p>\r\n\r\n<h4>Interface Supplier&lt;T&gt;</h4>\r\n\r\n<ul>\r\n	<li>\r\n	<p>参数类型</p>\r\n\r\n	<p><code>T</code> - 该供应商提供的结果类型</p>\r\n\r\n	<p>All Known Subinterfaces:</p>\r\n\r\n	<p><code><a href=\"../../../java/util/ServiceLoader.Provider.html\" title=\"interface in java.util\">ServiceLoader.Provider</a>&lt;S&gt;</code></p>\r\n\r\n	<p>所有已知实现类：</p>\r\n\r\n	<p><code><a href=\"../../../jdk/dynalink/linker/GuardingDynamicLinkerExporter.html\" title=\"class in jdk.dynalink.linker\">GuardingDynamicLinkerExporter</a></code></p>\r\n\r\n	<p>Functional Interface:</p>\r\n\r\n	<p>这是一个功能界面，因此可以用作lambda表达式或方法引用的赋值对象。</p>\r\n	</li>\r\n</ul>\r\n\r\n<pre>\r\n<a href=\"../../../java/lang/FunctionalInterface.html\" title=\"annotation in java.lang\">@FunctionalInterface</a>\r\npublic interface Supplier&lt;T&gt;</pre>\r\n\r\n<p>代表结果供应商。</p>\r\n\r\n<p>没有要求每次调用供应商时都会返回新的或不同的结果。</p>\r\n\r\n<p>这是一个<a href=\"package-summary.html\">functional interface</a>的功能方法是<a href=\"../../../java/util/function/Supplier.html#get--\"><code>get()</code></a> 。</p>\r\n\r\n<h4>用Supplier求出数组中最大的值</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package Basic07;\r\n\r\nimport java.util.function.Supplier;\r\n\r\npublic class Basic07Supplier {\r\n    public static int getMax(Supplier&lt;Integer&gt; sup){\r\n        return sup.get();\r\n    }\r\n    public static void main(String[] args) {\r\n        int[] array= {1,200,-1293,900,37,8889,2000};\r\n        int maxValue = getMax(()-&gt;{\r\n            int max = array[0];\r\n            for (int i : array) {\r\n                if(i&gt;max){\r\n                    max =i;\r\n                }\r\n            }\r\n            return max;\r\n        });\r\n        System.out.println(\"数组中的最大元素是：\" + maxValue);\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<h4>Interface Consumer&lt;T&gt;</h4>\r\n\r\n<ul>\r\n	<li>\r\n	<p>参数类型</p>\r\n\r\n	<p><code>T</code> - 操作输入的类型</p>\r\n\r\n	<p>All Known Subinterfaces:</p>\r\n\r\n	<p><code><a href=\"../../../java/util/stream/Stream.Builder.html\" title=\"interface in java.util.stream\">Stream.Builder</a>&lt;T&gt;</code></p>\r\n\r\n	<p>Functional Interface:</p>\r\n\r\n	<p>这是一个功能界面，因此可以用作lambda表达式或方法引用的赋值对象。</p>\r\n	</li>\r\n</ul>\r\n\r\n<pre>\r\n<a href=\"../../../java/lang/FunctionalInterface.html\" title=\"annotation in java.lang\">@FunctionalInterface</a>\r\npublic interface Consumer&lt;T&gt;</pre>\r\n\r\n<p>表示接受单个输入参数并且不返回结果的操作。 与大多数其他功能接口不同， <code>Consumer</code>预期通过副作用进行操作。</p>\r\n\r\n<p>这是一个<a href=\"package-summary.html\">functional interface</a>的功能方法是<a href=\"../../../java/util/function/Consumer.html#accept-T-\"><code>accept(Object)</code></a> 。</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">Modifier and Type</th>\r\n			<th scope=\"col\">方法</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<td><code>void</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../../java/util/function/Consumer.html#accept-T-\">accept</a>​(<a href=\"../../../java/util/function/Consumer.html\" title=\"type parameter in Consumer\">T</a>&nbsp;t)</code></th>\r\n			<td>\r\n			<p>对给定的参数执行此操作。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default <a href=\"../../../java/util/function/Consumer.html\" title=\"interface in java.util.function\">Consumer</a>&lt;<a href=\"../../../java/util/function/Consumer.html\" title=\"type parameter in Consumer\">T</a>&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../../java/util/function/Consumer.html#andThen-java.util.function.Consumer-\">andThen</a>​(<a href=\"../../../java/util/function/Consumer.html\" title=\"interface in java.util.function\">Consumer</a>&lt;? super <a href=\"../../../java/util/function/Consumer.html\" title=\"type parameter in Consumer\">T</a>&gt;&nbsp;after)</code></th>\r\n			<td>\r\n			<p>返回一个组成的 <code>Consumer</code> ，依次执行此操作，然后执行 <code>after</code>操作。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h4>Consumer 的基本使用</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package Basic07;\r\n\r\nimport java.util.function.Consumer;\r\n\r\npublic class Basic07Consumer {\r\n    public static void method(String name, Consumer&lt;String&gt; con) {\r\n        con.accept(name); //使用Consumer接口的accept方法消费\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        /*参数是一个函数式接口，可以使用Lambda表达式*/\r\n        method(\"小龙女\", (name) -&gt; {\r\n            /*消费方式一：直接输出\r\n             * 小龙女*/\r\n            //System.out.println(name);\r\n\r\n            /*消费方式二：反转输出\r\n             * 女龙小*/\r\n            String reName = new StringBuffer(name).reverse().toString();\r\n            System.out.println(reName);\r\n        });\r\n\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<p>Consumer andThen使用</p>\r\n\r\n<pre>\r\n<code class=\"language-java\">package Basic07;\r\n\r\nimport java.util.function.Consumer;\r\n\r\npublic class Basic07ConsumerAndThen {\r\n    public static void consum(String s, Consumer&lt;String&gt; con1, Consumer&lt;String&gt; con2) {\r\n        /*con1.accept(s);\r\n        con2.accept(s);*/\r\n        con1.andThen(con2).accept(s);  /*con1连接con2，先进行con1消费，再进行con2消费*/\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        consum(\"Herschel\", (t) -&gt;\r\n        {\r\n            System.out.println(t.toUpperCase());\r\n        }, (t) -&gt; System.out.println(t.toLowerCase()));\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<h4>使用Consumer格式化输出</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package Basic07;\r\n\r\nimport java.util.function.Consumer;\r\n\r\npublic class Basic07ConsumerAndThen {\r\n    public static void consum2(String[] string, Consumer&lt;String&gt; con1, Consumer&lt;String&gt; con2) {\r\n        for (String s : string) {\r\n            con1.andThen(con2).accept(s);\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        String[] str = {\"后羿,射手\", \"女娲,法师\", \"源哥,刺客\"};\r\n        /*按照格式。姓名：xxx，职业：xxx。输出*/\r\n        consum2(str, (p) -&gt; {\r\n            System.out.print(\"姓名：\" + p.split(\",\")[0]);\r\n        }, (p) -&gt; {\r\n            System.out.println(\"，职业：\" + p.split(\",\")[1] + \"。\");\r\n        });\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<h4>Interface Predicate&lt;T&gt;</h4>\r\n\r\n<ul>\r\n	<li>\r\n	<p>参数类型</p>\r\n\r\n	<p><code>T</code> - 谓词输入的类型</p>\r\n\r\n	<p>Functional Interface:</p>\r\n\r\n	<p>这是一个功能界面，因此可以用作lambda表达式或方法引用的赋值对象。</p>\r\n	</li>\r\n</ul>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"col\">\r\n			<p>Modifier and Type</p>\r\n			</th>\r\n			<th scope=\"col\">方法</th>\r\n			<th scope=\"col\">描述</th>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default <a href=\"../../../java/util/function/Predicate.html\" title=\"interface in java.util.function\">Predicate</a>&lt;<a href=\"../../../java/util/function/Predicate.html\" title=\"type parameter in Predicate\">T</a>&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../../java/util/function/Predicate.html#and-java.util.function.Predicate-\">and</a>​(<a href=\"../../../java/util/function/Predicate.html\" title=\"interface in java.util.function\">Predicate</a>&lt;? super <a href=\"../../../java/util/function/Predicate.html\" title=\"type parameter in Predicate\">T</a>&gt;&nbsp;other)</code></th>\r\n			<td>\r\n			<p>返回一个组合的谓词，表示该谓词与另一个谓词的短路逻辑AND。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>static &lt;T&gt;&nbsp;<a href=\"../../../java/util/function/Predicate.html\" title=\"interface in java.util.function\">Predicate</a>&lt;T&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../../java/util/function/Predicate.html#isEqual-java.lang.Object-\">isEqual</a>​(<a href=\"../../../java/lang/Object.html\" title=\"class in java.lang\">Object</a>&nbsp;targetRef)</code></th>\r\n			<td>\r\n			<p>返回一个谓词，根据 <a href=\"../../../java/util/Objects.html#equals-java.lang.Object-java.lang.Object-\"><code>Objects.equals(Object, Object)</code></a>测试两个参数是否相等。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default <a href=\"../../../java/util/function/Predicate.html\" title=\"interface in java.util.function\">Predicate</a>&lt;<a href=\"../../../java/util/function/Predicate.html\" title=\"type parameter in Predicate\">T</a>&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../../java/util/function/Predicate.html#negate--\">negate</a>​()</code></th>\r\n			<td>\r\n			<p>返回表示此谓词的逻辑否定的谓词。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>default <a href=\"../../../java/util/function/Predicate.html\" title=\"interface in java.util.function\">Predicate</a>&lt;<a href=\"../../../java/util/function/Predicate.html\" title=\"type parameter in Predicate\">T</a>&gt;</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../../java/util/function/Predicate.html#or-java.util.function.Predicate-\">or</a>​(<a href=\"../../../java/util/function/Predicate.html\" title=\"interface in java.util.function\">Predicate</a>&lt;? super <a href=\"../../../java/util/function/Predicate.html\" title=\"type parameter in Predicate\">T</a>&gt;&nbsp;other)</code></th>\r\n			<td>\r\n			<p>返回一个组合的谓词，表示该谓词与另一个谓词的短路逻辑或。</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td><code>boolean</code></td>\r\n			<th scope=\"row\"><code><a href=\"../../../java/util/function/Predicate.html#test-T-\">test</a>​(<a href=\"../../../java/util/function/Predicate.html\" title=\"type parameter in Predicate\">T</a>&nbsp;t)</code></th>\r\n			<td>\r\n			<p>在给定的参数上评估这个谓词。</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h4>Predicate 基本使用&nbsp;</h4>\r\n\r\n<pre>\r\n<code class=\"language-java\">package Basic07;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.function.Predicate;\r\n\r\npublic class Basic07Predicate {\r\n    public static ArrayList&lt;String&gt; filter(String[] arr, Predicate&lt;String&gt; pre1, Predicate&lt;String&gt; pre2) {\r\n        // new一个ArrayList存储过滤之后的信息\r\n        ArrayList&lt;String&gt; arrayList = new ArrayList&lt;&gt;();\r\n        for (String s : arr) {\r\n            boolean b = pre1.and(pre2).test(s);\r\n            if (b) {\r\n                arrayList.add(s);\r\n            }\r\n        }\r\n        return arrayList;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        /*练习，使用Predicate接口来进行集合信息筛选\r\n         * 数组当中有多条”姓名+性别“信息如下：\r\n         * String[] array = {\"迪丽热巴，女\",\"古力娜扎，女\",\"马尔扎哈，男\",\"赵丽颖，女\"}\r\n         * 将符合条件的信息筛选到ArrayList中，\r\n         * 需要同时满足两个条件\r\n         * 1.女生，\r\n         * 2.四个字的名字*/\r\n        String[] array = {\"迪丽热巴，女\", \"古力娜扎，女\", \"马尔扎哈，男\", \"赵丽颖，女\"};\r\n        ArrayList&lt;String&gt; list = filter(array, (s) -&gt; {\r\n            return s.split(\"，\")[1].equals(\"女\");\r\n        }, (s) -&gt; s.split(\"，\")[0].length() == 4);\r\n        // 遍历集合\r\n        for (String o : list) {\r\n            System.out.println(o);\r\n            /*迪丽热巴，女\r\n              古力娜扎，女*/\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><!-- ============ METHOD DETAIL ========== --></p>\r\n\r\n<p><!--   --></p>\r\n\r\n<p><!--   --><!--   --></p>','2020-05-12 22:09:59.638022','2020-05-13 20:44:38.737852',1,7),(115,'方法引用的简单使用','<p>百度上全是，不多介绍了。&nbsp;</p>\r\n\r\n<pre>\r\n<code class=\"language-java\">package Basic07;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.stream.Stream;\r\n\r\npublic class Basic07MethodRefernce {\r\n    public static void main(String[] args) {\r\n        /*使用Lambda表达式来生成一个数组*/\r\n        /*int[] array = creatArray(10, n -&gt; new int[n]);\r\n        System.out.println(Arrays.stream(array).count());*/\r\n\r\n        /*使用方法引用实现生成一个数组\r\n        * 已知创建的数组类型\r\n        * 已知数组长度\r\n        * 已知创建方法*/\r\n\r\n        int[] array = creatArray(10, int[]::new);\r\n        System.out.println(Arrays.stream(array).count());\r\n    }\r\n\r\n    public static int[] creatArray(int i, ArrayBuilder ab) {\r\n        return ab.buildArray(i);\r\n    }\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>','2020-05-13 22:02:35.094568','2020-05-13 22:02:35.094597',1,7),(116,'FastAPI series-1','<h4>Pydantic</h4>\r\n\r\n<p>在这里我还是要按照惯例吐槽说叨两句，学习Java学累了，servlet那一套东西，真的有视觉疲劳了，故后面再说吧。Java 已算入门吧？后面就要自己探索了。这个打住，我发现敲起字来，会调动自己的思想，真的是非常爽的一件事哈。自我了解 Python 开始，这门语言就一直飞速发展，当时也是最爱，现在也还好，我最早接触他是3.6.4，现在已经最新版本到3.8.3了，真的是日新月异啊，这门母语真的很有感情哈，下面是它的版本迭代及最后支持时间。</p>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2020/05/16/snipaste_2020-05-16_23-14-59.png\" style=\"height:145px; width:800px\" /></p>\r\n\r\n<p>新版本也有许多新特性，这次偶然看到 Fastapi，那就来学一波吧，鉴于国内文档良莠不齐，本次打算自己看官方文档，顺便记几个单词。</p>\r\n\r\n<p>按照&nbsp;&nbsp;<a href=\"https://fastapi.tiangolo.com/\">FastAPI官网</a>&nbsp;指示，我打算先了解一番 Pydanic</p>\r\n\r\n<p>The primary means of defining objects in&nbsp;<em>pydantic</em>&nbsp;is via models (models are simply classes which inherit from&nbsp;<code>BaseModel</code>).</p>\r\n\r\n<p>You can think of models as similar to types in strictly typed languages, or as the requirements of a single endpoint in an API.</p>\r\n\r\n<p>Untrusted data can be passed to a model, and after parsing and validation&nbsp;<em>pydantic</em>&nbsp;guarantees that the fields of the resultant model instance will conform to the field types defined on the model.</p>\r\n\r\n<p>简单理解为， Pydanic 是把数据对象传给（继承）类 <code>BaseModel</code>, 进行校验。</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">from pydantic import BaseModel\r\n\r\nclass User(BaseModel):\r\n    id: int\r\n    name = \'Jane Doe\'</code></pre>\r\n\r\n<h4>自参照模型</h4>\r\n\r\n<p>More complex hierarchical data structures can be defined using models themselves as types in annotations.</p>\r\n\r\n<p>可以使用模型本身作为注释中的类型来定义更复杂的分层数据结构。</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">from typing import List\r\nfrom pydantic import BaseModel\r\n\r\nclass Foo(BaseModel):\r\n    count: int\r\n    size: float = None\r\n\r\nclass Bar(BaseModel):\r\n    apple = \'x\'\r\n    banana = \'y\'\r\n\r\nclass Spam(BaseModel):\r\n    foo: Foo\r\n    bars: List[Bar]\r\n\r\nm = Spam(foo={\'count\': 4}, bars=[{\'apple\': \'x1\'}, {\'apple\': \'x2\'}])\r\nprint(m)\r\n#&gt; foo=Foo(count=4, size=None) bars=[Bar(apple=\'x1\', banana=\'y\'),\r\n#&gt; Bar(apple=\'x2\', banana=\'y\')]\r\nprint(m.dict())\r\n\"\"\"\r\n{\r\n    \'foo\': {\'count\': 4, \'size\': None},\r\n    \'bars\': [\r\n        {\'apple\': \'x1\', \'banana\': \'y\'},\r\n        {\'apple\': \'x2\', \'banana\': \'y\'},\r\n    ],\r\n}\r\n\"\"\"</code></pre>\r\n\r\n<h4>ORM Mode (aka Arbitrary Class Instances)</h4>\r\n\r\n<p>Pydantic models can be created from arbitrary class instances to support models that map to ORM objects.</p>\r\n\r\n<p>To do this:</p>\r\n\r\n<ol>\r\n	<li>The&nbsp;<a href=\"https://pydantic-docs.helpmanual.io/usage/model_config/\">Config</a>&nbsp;property&nbsp;<code>orm_mode</code>&nbsp;must be set to&nbsp;<code>True</code>.</li>\r\n	<li>The special constructor&nbsp;<code>from_orm</code>&nbsp;must be used to create the model instance.</li>\r\n</ol>\r\n\r\n<p>The example here uses SQLAlchemy, but the same approach should work for any ORM.</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">from typing import List\r\nfrom sqlalchemy import Column, Integer, String\r\nfrom sqlalchemy.dialects.postgresql import ARRAY\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\nfrom pydantic import BaseModel, constr\r\n\r\nBase = declarative_base()\r\n\r\nclass CompanyOrm(Base):\r\n    __tablename__ = \'companies\'\r\n    id = Column(Integer, primary_key=True, nullable=False)\r\n    public_key = Column(String(20), index=True, nullable=False, unique=True)\r\n    name = Column(String(63), unique=True)\r\n    domains = Column(ARRAY(String(255)))\r\n\r\nclass CompanyModel(BaseModel):\r\n    id: int\r\n    public_key: constr(max_length=20)\r\n    name: constr(max_length=63)\r\n    domains: List[constr(max_length=255)]\r\n\r\n    class Config:\r\n        orm_mode = True\r\n\r\nco_orm = CompanyOrm(\r\n    id=123,\r\n    public_key=\'foobar\',\r\n    name=\'Testing\',\r\n    domains=[\'example.com\', \'foobar.com\']\r\n)\r\nprint(co_orm)\r\n#&gt; &lt;models_orm_mode.CompanyOrm object at 0x7fb205812d00&gt;\r\nco_model = CompanyModel.from_orm(co_orm)\r\nprint(co_model)\r\n#&gt; id=123 public_key=\'foobar\' name=\'Testing\' domains=[\'example.com\',\r\n#&gt; \'foobar.com\']</code></pre>\r\n\r\n<p>后用自查，<a href=\"https://pydantic-docs.helpmanual.io/\">插眼</a>。</p>','2020-05-16 23:33:31.623677','2020-05-17 07:21:56.474979',1,5),(117,'FastAPI series-2','<h4>安装使用</h4>\r\n\r\n<p>入门比较简单，安装需要 FastAPI, 以及ASGI server uvicorn。我用的傻瓜式安装：</p>\r\n\r\n<blockquote>\r\n<p>pip install fastapi[all]</p>\r\n</blockquote>\r\n\r\n<p>装完会有一大堆的东西，我是先创建了一个虚拟环境 fastapi，废话不多说，开始使用~</p>\r\n\r\n<h4>&nbsp;Tutorial-User Guide<sup>1</sup></h4>\r\n\r\n<p>虽然我是第一次尝试使用，但是前面几个章节大致了解了，就不浪费时间总结了哈，我是打算走一遍文档，目前到了Request Body。</p>\r\n\r\n<p>写一个文件，名字：series_tur1.py</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">from pydantic import BaseModel\r\nfrom fastapi import FastAPI\r\n\r\nclass Item(BaseModel):\r\n    name: str\r\n    description: str = None\r\n    price: float\r\n    tab: float = None\r\n\r\napp = FastAPI()\r\n\r\n@app.post(\"/items/\")\r\nasync def create_item(item: Item):\r\n    return item</code></pre>\r\n\r\n<p>再启动ASGI server:</p>\r\n\r\n<blockquote>\r\n<p>uvicorn series_tur1:app --reload</p>\r\n</blockquote>\r\n\r\n<p>这玩意貌似会热更哈。假如你启动ASGI app错误的时候，或许<a href=\"https://stackoverflow.com/questions/60819376/fastapi-throws-an-error-error-loading-asgi-app-could-not-import-module-api\">这个</a>&nbsp;answer 可以帮到你。</p>\r\n\r\n<h4>访问浏览器</h4>\r\n\r\n<blockquote>\r\n<p><a href=\"http://127.0.0.1:8000/docs\">http://127.0.0.1:8000/docs</a></p>\r\n</blockquote>\r\n\r\n<p>&nbsp;<img alt=\"\" src=\"/media/upload/2020/05/17/snipaste_2020-05-17_07-48-25.png\" style=\"height:726px; width:900px\" /></p>\r\n\r\n<p>乍一看，好像挺漂亮哈，其中字段name, price默认值不为None,所以必须传这两个参数</p>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2020/05/17/snipaste_2020-05-17_07-52-57.png\" style=\"height:391px; width:900px\" /></p>\r\n\r\n<h4>Use the model</h4>\r\n\r\n<p>Inside of the function, you can access all the attributes of the model object directly:</p>\r\n\r\n<p>emm, 很骚气，可以直接给item增加和改变属性，就是说你可以操作它。</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">from pydantic import BaseModel\r\nfrom fastapi import FastAPI\r\n\r\nclass Item(BaseModel):\r\n    name: str\r\n    description: str = None\r\n    price: float\r\n    tab: float = None\r\n\r\napp = FastAPI()\r\n\r\n@app.post(\"/items/\")\r\nasync def create_item(item: Item):\r\n    item_dict = item.dict()\r\n    if item.tab:\r\n        price_with_tab = item.price + item.tab\r\n        item_dict.update({\"price_with_tab\": price_with_tab})\r\n    return item_dict    </code></pre>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2020/05/17/snipaste_2020-05-17_08-09-20.png\" style=\"height:813px; width:900px\" /></p>\r\n\r\n<p>path + query parameters，这种就先不试了，也ok.</p>\r\n\r\n<p>So, when you need to declare a value as <code>required</code> while using Query, you can use ... as the first argument:</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">from fastapi import FastAPI, Query\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/items/\")\r\nasync def read_items(q: str = Query(..., min_length=3)):\r\n    results = {\"items\": [{\"item_id\": \"Foo\"}, {\"item_id\": \"Bar\"}]}\r\n    if q:\r\n        results.update({\"q\": q})\r\n    return results</code></pre>\r\n\r\n<p>Query 也可以增加title, alias，description, deprecated&nbsp;= True(代表不再推荐，类似于过时)等等。</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">from fastapi import FastAPI, Query\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/items/\")\r\nasync def read_items(\r\n    q: str = Query(\r\n        None,\r\n        alias=\"item-query\",\r\n        title=\"Query string\",\r\n        description=\"Query string for the items to search in the database that have a good match\",\r\n        min_length=3,\r\n        max_length=50,\r\n        regex=\"^fixedquery$\",\r\n        deprecated=True,\r\n    )\r\n):\r\n    results = {\"items\": [{\"item_id\": \"Foo\"}, {\"item_id\": \"Bar\"}]}\r\n    if q:\r\n        results.update({\"q\": q})\r\n    return results</code></pre>\r\n\r\n<p>接下来是深层嵌套数据，很好理解。</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">from typing import Set, List\r\nfrom pydantic import BaseModel, Field, HttpUrl\r\nfrom fastapi import FastAPI, Body\r\n\r\nclass Item(BaseModel):\r\n    name: str\r\n    description: str = None\r\n    price: float\r\n    tab: float = None\r\n\r\nclass Image(BaseModel):\r\n    url: HttpUrl\r\n    name: str\r\n\r\n\r\nclass Item2(BaseModel):\r\n    name: str\r\n    description: str = Field(None, title=\"The description of the item\", max_length=300)\r\n    price: float = Field(..., ge=0, description=\"The price must be greater than zero\")\r\n    tax: float = None\r\n    tag: Set[str] = []\r\n    images: List[Image] = None\r\n\r\n\r\napp = FastAPI()\r\n\r\n@app.post(\"/items/\")\r\nasync def create_item(item: Item):\r\n    item_dict = item.dict()\r\n    if item.tab:\r\n        price_with_tab = item.price + item.tab\r\n        item_dict.update({\"price_with_tab\": price_with_tab})\r\n    return item_dict    \r\n\r\n\r\n@app.put(\"/items/{item_id}\")\r\nasync def update_item(*, item_id: int, item: Item2 = Body(..., embed=True)):\r\n    results = {\"item_id\": item_id, \"item\": item}\r\n    return results\r\n\r\n</code></pre>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2020/05/17/snipaste_2020-05-17_09-52-25.png\" style=\"height:872px; width:900px\" /></p>\r\n\r\n<h4>Response model</h4>\r\n\r\n<pre>\r\n<code class=\"language-python\">class UserIn(BaseModel):\r\n    username: str\r\n    password: str\r\n    email: str\r\n    full_name: str = None\r\n\r\n\r\nclass UserOut(BaseModel):\r\n    username: str\r\n    email: str\r\n    full_name: str = None\r\n\r\n\r\n@app.post(\"/user/\", response_model=UserOut)\r\nasync def create_user(*, user: UserIn):\r\n    return user\r\n\r\nitems = {\r\n    \"foo\": {\"name\": \"Foo\", \"price\": 50.2},\r\n    \"bar\": {\"name\": \"Bar\", \"description\": \"The Bar fighters\", \"price\": 62, \"tax\": 20.2},\r\n    \"baz\": {\r\n        \"name\": \"Baz\",\r\n        \"description\": \"There goes my baz\",\r\n        \"price\": 50.2,\r\n        \"tab\": 10.5,\r\n    },\r\n}\r\n\r\n\r\n@app.get(\r\n    \"/items/{item_id}/name\",\r\n    response_model=Item,\r\n    response_model_include={\"name\", \"description\"},\r\n)\r\nasync def read_item_name(item_id: str, response_model_exclude_unset=True):\r\n    return items[item_id]\r\n\r\n\r\n@app.get(\"/items/{item_id}/public\", response_model=Item, response_model_exclude={\"tax\"})\r\nasync def read_item_public_data(item_id: str):\r\n    return items[item_id]</code></pre>\r\n\r\n<p>同样很好理解。下面是Union，不介绍了。这个还支持tag。一般是tag=[&quot;string&quot;]。还有 Markdown 格式的注释，可以给函数加多行注释实现。</p>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2020/05/17/snipaste_2020-05-17_12-00-23.png\" style=\"height:429px; width:900px\" /></p>\r\n\r\n<p>还能够增加响应的描述。</p>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2020/05/17/snipaste_2020-05-17_12-03-19.png\" style=\"height:164px; width:900px\" /></p>\r\n\r\n<h4>部分更新数据</h4>\r\n\r\n<pre>\r\n<code class=\"language-python\">from typing import List\r\n\r\nfrom fastapi import FastAPI\r\nfrom fastapi.encoders import jsonable_encoder\r\nfrom pydantic import BaseModel\r\n\r\napp = FastAPI()\r\n\r\n\r\nclass Item(BaseModel):\r\n    name: str = None\r\n    description: str = None\r\n    price: float = None\r\n    tax: float = 10.5\r\n    tags: List[str] = []\r\n\r\n\r\nitems = {\r\n    \"foo\": {\"name\": \"Foo\", \"price\": 50.2},\r\n    \"bar\": {\"name\": \"Bar\", \"description\": \"The bartenders\", \"price\": 62, \"tax\": 20.2},\r\n    \"baz\": {\"name\": \"Baz\", \"description\": None, \"price\": 50.2, \"tax\": 10.5, \"tags\": []},\r\n}\r\n\r\n\r\n@app.get(\"/items/{item_id}\", response_model=Item)\r\nasync def read_item(item_id: str):\r\n    return items[item_id]\r\n\r\n\r\n@app.patch(\"/items/{item_id}\", response_model=Item)\r\nasync def update_item(item_id: str, item: Item):\r\n    stored_item_data = items[item_id]\r\n    stored_item_model = Item(**stored_item_data)\r\n    update_data = item.dict(exclude_unset=True)\r\n    updated_item = stored_item_model.copy(update=update_data)\r\n    items[item_id] = jsonable_encoder(updated_item)\r\n    return updated_item</code></pre>\r\n\r\n<p>注意最后数据的更换，先取出对应 item_id 的数据，暂时理解为一条，然后拆包，将数据按Item格式存储，再接着去掉没显示赋值的字段，这就是要更新的数据。</p>\r\n\r\n<p>将更新的数据使用 copy 合到 Item 格式的数据中，再将这一条数据以python的数据类型存储，可以直接被json.dumps()。</p>\r\n\r\n<h4>依赖 depends</h4>\r\n\r\n<p>可以理解为抽取封装公共部分。</p>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2020/05/17/snipaste_2020-05-17_12-20-37.png\" style=\"height:583px; width:900px\" /></p>\r\n\r\n<p>后面官方还讲了 Python 中 &#39;Callable&#39; 的概念，然后其实 Depends 其实也是一个 Callable，就是说也是可以被 FastAPI 自己调用执行的，所以后面定义了一个共同参数的类来使用，并给出了最终简化写法。</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">from fastapi import Depends, FastAPI\r\n\r\napp = FastAPI()\r\n\r\n\r\nfake_items_db = [{\"item_name\": \"Foo\"}, {\"item_name\": \"Bar\"}, {\"item_name\": \"Baz\"}]\r\n\r\n\r\nclass CommonQueryParams:\r\n    def __init__(self, q: str = None, skip: int = 0, limit: int = 100):\r\n        self.q = q\r\n        self.skip = skip\r\n        self.limit = limit\r\n\r\n\r\n@app.get(\"/items/\")\r\nasync def read_items(commons: CommonQueryParams = Depends()):\r\n    response = {}\r\n    if commons.q:\r\n        response.update({\"q\": commons.q})\r\n    items = fake_items_db[commons.skip : commons.skip + commons.limit]\r\n    response.update({\"items\": items})\r\n    return response</code></pre>\r\n\r\n<p>后面介绍了OAuth2PasswordBearer, 生成token验证的一种方式，可以当做Depends使用，不赘述。</p>\r\n\r\n<pre>\r\n<code class=\"language-python\">from typing import Optional\r\n\r\nfrom fastapi import Depends, FastAPI\r\nfrom fastapi.security import OAuth2PasswordBearer\r\nfrom pydantic import BaseModel\r\n\r\n\r\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/token\")\r\napp = FastAPI()\r\n\r\nclass Users(BaseModel):\r\n    username: str\r\n    email: Optional[str] = None\r\n    full_name: Optional[str] = None\r\n    disabled: Optional[bool] = None\r\n\r\n\r\ndef fake_decode_token(token):\r\n    return Users(\r\n        username=token + \"fakedecoded\", email=\"john@example.com\", full_name=\"John Doe\"\r\n    )\r\n\r\n\r\nasync def get_current_user(token: str = Depends(oauth2_scheme)):\r\n    user = fake_decode_token(token)\r\n    return user\r\n\r\n\r\n@app.get(\"/users/me\")\r\nasync def read_users_me(current_user: Users = Depends(get_current_user), tags = [\"user\"]):\r\n    return current_user</code></pre>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2020/05/17/snipaste_2020-05-17_15-46-48.png\" style=\"height:853px; width:910px\" /></p>\r\n\r\n<p>有关登录验证的操作可以看看<a href=\"https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/\">文档</a>，太6了。</p>','2020-05-17 08:01:17.138711','2020-05-17 16:59:23.308600',1,5),(118,'Series of English','<p>人生 就是会被很多其他的事情所打断，打断你目前正在做的事，每时每刻都会这样。前几天有了兴趣，去练习了一下打字，可是当打字的时候还是很难受，会不由自主的按照原来的方式来，甚至比原来还要来的慢，这一点我慢慢改正吧。最近在看Spring，体会到了看FastAPI的乐趣之后，我决定这么做了。在这个过程中，我发现我的英语词汇量比较少，看起文档来非常吃力，所以我决定将我查看的生词记录下来，希望不是挪了个地方吧：)， come on!</p>\r\n\r\n<p>小破站的后台我感觉啥时候得优化下了，这个simple-django（印象中是）有时候渲染器来真的很费劲，就像我打字一样。是不是我不常来，她生气了，哈哈，目前好像就佳宇知道我的小破站，不过她好像没来过，就像对我一样，哈哈。</p>\r\n\r\n<h4>正题</h4>\r\n\r\n<p>实在受不了这个加载速度了，我把后台设置成原来的模样了，纪念下 simpleui 美美哒页面。Emma，好像没了。</p>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2020/06/04/snipaste_2020-06-04_23-04-38.png\" style=\"height:409px; width:719px\" /></p>\r\n\r\n<h4>开胃菜</h4>\r\n\r\n<p>Only one shared instance of a singleton bean is managed, and all requests for beans with an ID or IDs that match that bean definition result in that one specific bean instance being returned by the Spring container.</p>\r\n\r\n<p>仅管理一个singleton bean的一个共享实例，并且所有对具有ID或与该bean定义相匹配的ID的bean的请求都将导致该特定的bean实例由Spring容器返回。</p>\r\n\r\n<h4>真正的正题</h4>\r\n\r\n<table align=\"left\" border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:100%\" summary=\"且行且珍惜，愿我早日遇到意中人\">\r\n	<caption>Spring中生词记录</caption>\r\n	<thead>\r\n		<tr>\r\n			<th scope=\"col\" style=\"background-color:#ffffcc; text-align:center; vertical-align:middle\">documents&nbsp;单词</th>\r\n			<th scope=\"col\" style=\"background-color:#ffffcc; text-align:center; vertical-align:middle\">释义</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>evolve</td>\r\n			<td>动词：发展，演变，演，衍变，推移，发达，衍，滩开</td>\r\n		</tr>\r\n		<tr>\r\n			<td>negating&nbsp;</td>\r\n			<td>动词：否定，否</td>\r\n		</tr>\r\n		<tr>\r\n			<td>functionality</td>\r\n			<td>功能性</td>\r\n		</tr>\r\n		<tr>\r\n			<td>specify&nbsp;</td>\r\n			<td>指明，指定</td>\r\n		</tr>\r\n		<tr>\r\n			<td>collaborators&nbsp;</td>\r\n			<td>名词：合作者，合干者</td>\r\n		</tr>\r\n		<tr>\r\n			<td>explicitly&nbsp;</td>\r\n			<td>副词：明确地，明白地，显式的</td>\r\n		</tr>\r\n		<tr>\r\n			<td>to some extent</td>\r\n			<td>在某种程度上</td>\r\n		</tr>\r\n		<tr>\r\n			<td>document</td>\r\n			<td>动词：记录</td>\r\n		</tr>\r\n		<tr>\r\n			<td>clarity</td>\r\n			<td>名词：明晰</td>\r\n		</tr>\r\n		<tr>\r\n			<td>deployments</td>\r\n			<td>部署</td>\r\n		</tr>\r\n		<tr>\r\n			<td>fatal&nbsp;</td>\r\n			<td>形容词：致命，有害，必然的，命中注定的</td>\r\n		</tr>\r\n		<tr>\r\n			<td>indicates</td>\r\n			<td>动词：表明，表示，指出，标明，指，预示，意味着，标志，主，隐射，选拔</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Analogous</td>\r\n			<td>形容词：类似的，相似的</td>\r\n		</tr>\r\n		<tr>\r\n			<td>applies to</td>\r\n			<td>适用于</td>\r\n		</tr>\r\n		<tr>\r\n			<td>candidates</td>\r\n			<td>候选人</td>\r\n		</tr>\r\n		<tr>\r\n			<td>corresponding&nbsp;</td>\r\n			<td>形容词：相应，通信的，对应的</td>\r\n		</tr>\r\n		<tr>\r\n			<td>consistently&nbsp;</td>\r\n			<td>一贯地，一致</td>\r\n		</tr>\r\n		<tr>\r\n			<td>primitives</td>\r\n			<td>名词：原始人，图元，原函数</td>\r\n		</tr>\r\n		<tr>\r\n			<td>ambiguity&nbsp;</td>\r\n			<td>模棱两可，歧义</td>\r\n		</tr>\r\n		<tr>\r\n			<td>arbitrarily&nbsp;</td>\r\n			<td>副词：任意地，武断地</td>\r\n		</tr>\r\n		<tr>\r\n			<td>in favor of</td>\r\n			<td>转而使用</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Designate&nbsp;</td>\r\n			<td>指定</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Implement&nbsp;</td>\r\n			<td>动词：实现，实施，执行，落实，实行，贯彻名词：器具，器，设备，鋐，傢器</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;fine-grained&nbsp;</td>\r\n			<td>细粒度</td>\r\n		</tr>\r\n		<tr>\r\n			<td>infrastructure&nbsp;</td>\r\n			<td>名词：基础设施</td>\r\n		</tr>\r\n		<tr>\r\n			<td>As a consequence</td>\r\n			<td>因此</td>\r\n		</tr>\r\n		<tr>\r\n			<td>nevertheless&nbsp;</td>\r\n			<td>副词：还是，虽然，虽，虽说，犹，顶连词：然，顶</td>\r\n		</tr>\r\n		<tr>\r\n			<td>takes precedence</td>\r\n			<td>优先</td>\r\n		</tr>\r\n		<tr>\r\n			<td>typically&nbsp;</td>\r\n			<td>通常</td>\r\n		</tr>\r\n		<tr>\r\n			<td>arises&nbsp;</td>\r\n			<td>动词：出现，发生，出，发动</td>\r\n		</tr>\r\n		<tr>\r\n			<td>forego&nbsp;</td>\r\n			<td>动词：放弃，在 ... 前</td>\r\n		</tr>\r\n		<tr>\r\n			<td>desirable</td>\r\n			<td>可取的</td>\r\n		</tr>\r\n		<tr>\r\n			<td>dynamically&nbsp;</td>\r\n			<td>动态地</td>\r\n		</tr>\r\n		<tr>\r\n			<td>redundant</td>\r\n			<td>形容词：冗，赘，忒，过多的，赘瘤，过剩的，赘疣</td>\r\n		</tr>\r\n		<tr>\r\n			<td>conversational&nbsp;</td>\r\n			<td>形容词：对话的</td>\r\n		</tr>\r\n		<tr>\r\n			<td>diagram</td>\r\n			<td>名词：图表，图解动词：图解</td>\r\n		</tr>\r\n		<tr>\r\n			<td>In contrast to</td>\r\n			<td>与之相反</td>\r\n		</tr>\r\n		<tr>\r\n			<td>In some respects</td>\r\n			<td>在某些方面</td>\r\n		</tr>\r\n		<tr>\r\n			<td>in regard to</td>\r\n			<td>介词：关于，对于，于</td>\r\n		</tr>\r\n		<tr>\r\n			<td>sole&nbsp;</td>\r\n			<td>唯一</td>\r\n		</tr>\r\n		<tr>\r\n			<td>complains</td>\r\n			<td>抱怨</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Alternatively</td>\r\n			<td>或者</td>\r\n		</tr>\r\n		<tr>\r\n			<td>visible&nbsp;</td>\r\n			<td>形容词：可见，看得见，有形，在望，明显的名词：可见物</td>\r\n		</tr>\r\n		<tr>\r\n			<td>delegate</td>\r\n			<td>名词：代表，襄理动词：发，委派 ... 为代表</td>\r\n		</tr>\r\n		<tr>\r\n			<td>forwarded</td>\r\n			<td>动词：发送，促进，发</td>\r\n		</tr>\r\n		<tr>\r\n			<td>on demand</td>\r\n			<td>一经请求</td>\r\n		</tr>\r\n		<tr>\r\n			<td>delivers&nbsp;</td>\r\n			<td>动词：交付，递送，传递，传送，送，发表，交，拯救，送交，发放，解救，发给，投，发行，表达，拯</td>\r\n		</tr>\r\n		<tr>\r\n			<td>salient&nbsp;</td>\r\n			<td>名词：突出部形容词：突出的</td>\r\n		</tr>\r\n		<tr>\r\n			<td>integrate&nbsp;</td>\r\n			<td>动词：整合，结合，综合，统一，合成，联系，合流</td>\r\n		</tr>\r\n		<tr>\r\n			<td>concrete&nbsp;</td>\r\n			<td>形容词：具体，实际</td>\r\n		</tr>\r\n		<tr>\r\n			<td>adhere&nbsp;</td>\r\n			<td>动词：固守，拘，采取，附著</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;in accordance with</td>\r\n			<td>根据</td>\r\n		</tr>\r\n		<tr>\r\n			<td>contract</td>\r\n			<td>协定</td>\r\n		</tr>\r\n		<tr>\r\n			<td>resembles&nbsp;</td>\r\n			<td>类似于</td>\r\n		</tr>\r\n		<tr>\r\n			<td>presence&nbsp;</td>\r\n			<td>名词：存在，光临</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2020-06-04 22:45:35.347586','2020-06-06 10:36:59.239817',1,8),(119,'Spring 生词记录（2）','<table align=\"left\" border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:100%\">\r\n	<caption>\r\n	<p>Spring生词记录</p>\r\n	</caption>\r\n	<thead>\r\n		<tr>\r\n			<th scope=\"col\">&nbsp;单词/短语</th>\r\n			<th scope=\"col\">释义</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>&nbsp;callback methods that are named at variance with the convention</td>\r\n			<td>以惯例命名的回调方法</td>\r\n		</tr>\r\n		<tr>\r\n			<td>interceptors&nbsp;</td>\r\n			<td>拦截器</td>\r\n		</tr>\r\n		<tr>\r\n			<td>strange&nbsp;</td>\r\n			<td>形容词：奇怪，怪，陌生，奇特，奇，新奇，希奇，生，异乎寻常，傀，可怪</td>\r\n		</tr>\r\n		<tr>\r\n			<td>semantics&nbsp;</td>\r\n			<td>语义</td>\r\n		</tr>\r\n		<tr>\r\n			<td>cascades&nbsp;</td>\r\n			<td>级联</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;a plain contract&nbsp;</td>\r\n			<td>普通协议</td>\r\n		</tr>\r\n		<tr>\r\n			<td>imply</td>\r\n			<td>动词：意味着，暗示，意味，意，隐射，暗含着</td>\r\n		</tr>\r\n		<tr>\r\n			<td>phases</td>\r\n			<td>名词：相，阶段，期，时期，局面，段落，学时，层次动词：定相，逐步执行</td>\r\n		</tr>\r\n		<tr>\r\n			<td>propagated</td>\r\n			<td>动词：传播，宣传，宣扬，传布，孳，繁，生息，传道，广传，传种</td>\r\n		</tr>\r\n		<tr>\r\n			<td>suffice</td>\r\n			<td>动词：满足，合格</td>\r\n		</tr>\r\n		<tr>\r\n			<td>as if&nbsp;</td>\r\n			<td>连词：仿佛，似乎，犹</td>\r\n		</tr>\r\n		<tr>\r\n			<td>gracefully</td>\r\n			<td>优雅地</td>\r\n		</tr>\r\n		<tr>\r\n			<td>manipulate&nbsp;</td>\r\n			<td>动词：操纵，操作，摆布，摆弄</td>\r\n		</tr>\r\n		<tr>\r\n			<td>critical</td>\r\n			<td>形容词：临界，严重，批评，危急，紧要，要紧，紧张，沉重，当紧</td>\r\n		</tr>\r\n		<tr>\r\n			<td>hierarchy</td>\r\n			<td>名词：阶层，等级制度</td>\r\n		</tr>\r\n		<tr>\r\n			<td>dictates&nbsp;</td>\r\n			<td>动词：听写，主宰，霸名词：命令，指挥</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>','2020-06-06 13:52:01.792140','2020-06-06 17:58:27.435723',9,8),(120,'vim设置当前行效果','<p>需：终端支持256颜色表&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>具体查看是否支持 &nbsp;:set term?&nbsp;</p>\r\n</blockquote>\r\n\r\n<p>1.开启支持</p>\r\n\r\n<blockquote>\r\n<p>set cursorline</p>\r\n</blockquote>\r\n\r\n<p>2.当前行</p>\r\n\r\n<blockquote>\r\n<p>autocmd ColorScheme * highlight! &nbsp;Cursorline cterm=bold ctermbg=236 guibg=Grey90</p>\r\n</blockquote>\r\n\r\n<p>3.行号</p>\r\n\r\n<blockquote>\r\n<p>autocmd ColorScheme * highlight! &nbsp;CursorlineNr cterm=bold ctermbg=159 guibg=Grey90</p>\r\n</blockquote>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>','2020-07-09 00:19:19.860012','2020-07-09 00:23:02.886793',1,9),(121,'vimrc备份','<p>目前玩的gvim的配置，备份下&nbsp;。</p>\r\n\r\n<pre>\r\n<code class=\"language-vim\">\"-----------\r\n\" basic settings\r\n\"-----------\r\nset nocompatible\r\nset noswapfile\r\nset clipboard=unnamed\r\nset noimdisable  \" 设置切换到insert输入法变为英文\r\nif has(\"gui_running\")\r\nset imactivatekey=C-space\r\ninoremap &lt;ESC&gt; &lt;ESC&gt;:set iminsert=0&lt;CR&gt;\r\nendif\r\nset fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936\r\nset termencoding=utf-8\r\nset encoding=utf-8\r\nset cindent\r\nset history=500\r\nlet mapleader=\",\"\r\nset foldmethod=indent\r\nset pythonthreedll=python36.dll\r\n\r\n\"------------\r\n\" appearance\r\n\"------------\r\ncolorscheme gruvbox\r\nset t_Co=256\r\nset nu\r\nset relativenumber\r\nset showmode\r\nset showcmd\r\nset nolist \" 末尾不显示制表符\r\nset wrap\r\nset linebreak \" 在比较适当的地方换行\r\nset ruler\r\nset cursorline\r\nset showtabline=2\r\nsyntax on\r\nsyntax enable\r\n\r\n\"-----------\r\n\"  scroll \r\n\"-----------\r\nset scrolloff=3\r\n\r\n\"-----------\r\n\"  search\r\n\"-----------\r\nset hlsearch\r\nset incsearch\r\nset ignorecase\r\nset smartcase  \" when seaech match insert case\r\n\r\n\"-----------\r\n\" filetype\r\n\"-----------\r\nfiletype on\r\nfiletype indent on\r\nfiletype plugin on\r\n\r\n\"-----------\r\n\" tab space\r\n\"-----------\r\nset softtabstop=2\r\nset shiftwidth=2\r\nset expandtab\r\n\r\n\"-----------\r\n\" tab \r\n\"-----------\r\nset showtabline=2\r\nset splitbelow\r\nset splitright\r\n\r\n\"-----------\r\n\" gui\r\n\"-----------\r\nset gfn=Courier_New:h11\r\nset guioptions-=m\r\nset guioptions-=T\r\nset guioptions-=r\r\nset guioptions-=R\r\nset guioptions-=l\r\nset guioptions-=L\r\nset guioptions-=h\r\nset guioptions-=H\r\nset guioptions-=b\r\nset guioptions-=e\r\nset backspace=indent,eol,start  \" 设置退格键可用\r\nautocmd GUIEnter * simalt ~x  \" 设置全屏\r\n\r\n\"-----------\r\n\" plugin\r\n\"-----------\r\nset rtp+=~/.vim/autoload\r\ncall plug#begin(\'~/.vim/plugged\')\r\nPlug \'vim-airline/vim-airline\'\r\nPlug \'mhinz/vim-startify\'  \" 打开界面时显示最近打开的文件\r\nPlug \'tpope/vim-surround\'\r\nPlug \'easymotion/vim-easymotion\'\r\nPlug \'ianva/vim-youdao-translater\'\r\n\" markdown\r\nPlug \'iamcco/mathjax-support-for-mkdp\'\r\nPlug \'iamcco/markdown-preview.vim\'\r\nPlug \'mattn/transparency-windows-vim\'\r\n\" File navigation\r\nPlug \'scrooloose/nerdtree\'\r\nPlug \'posva/vim-vue\'\r\ncall plug#end()\r\n\r\n\r\n\" ===\r\n\" === NERDTree\r\n\" ===\r\nmap tt :NERDTreeToggle&lt;CR&gt;\r\nmap nc :NERDTreeCWD&lt;CR&gt;\r\nmap cdd :NERDTree D:&lt;CR&gt;\r\nmap cde :NERDTree E:&lt;CR&gt;\r\n\r\n\" ===\r\n\" === vim-vue\r\n\" ===\r\nlet g:vue_pre_processors = \'detect_on_enter\'\r\n\r\n\" ===\r\n\" === translator\r\n\" ===\r\nvnoremap &lt;silent&gt; &lt;C-T&gt; :&lt;C-u&gt;Ydv&lt;CR&gt;\r\nnnoremap &lt;silent&gt; &lt;C-T&gt; :&lt;C-u&gt;Ydc&lt;CR&gt;\r\nnoremap &lt;leader&gt;yd :&lt;C-u&gt;Yde&lt;CR&gt;\r\n\r\n\" ===\r\n\" === markdown \r\n\" ===\r\nlet g:mkdp_auto_close=0\r\nnmap &lt;silent&gt; &lt;F8&gt; &lt;Plug&gt;MarkdownPreview        \" for normal mode\r\nimap &lt;silent&gt; &lt;F8&gt; &lt;Plug&gt;MarkdownPreview        \" for insert mode\r\nnmap &lt;silent&gt; &lt;F9&gt; &lt;Plug&gt;StopMarkdownPreview    \" for normal mode\r\nimap &lt;silent&gt; &lt;F9&gt; &lt;Plug&gt;StopMarkdownPreview    \" for insert mode\r\n\r\n\" ===\r\n\" === 设置透明度\r\n\" ===\r\nif executable(\"vimtweak.dll\") \r\nautocmd guienter * call libcallnr(\"vimtweak\",\"SetAlpha\",200) \r\n\r\nendif \r\n\r\n\"-----------\r\n\" map\r\n\"-----------\r\nmap J 3j\r\nmap K 3k\r\n\r\nmap &lt;UP&gt; &lt;nop&gt;\r\nmap &lt;DOWN&gt; &lt;nop&gt;\r\nmap &lt;LEFT&gt; &lt;nop&gt;\r\nmap &lt;RIGHT&gt; &lt;nop&gt;\r\n\r\ninoremap &lt;leader&gt;w &lt;ESC&gt;:w&lt;CR&gt;\r\nnoremap &lt;leader&gt;w &lt;ESC&gt;:w&lt;CR&gt;\r\nnoremap &lt;leader&gt;s &lt;ESC&gt;:source $VIM/_vimrc&lt;CR&gt;\r\nnoremap &lt;leader&gt;e &lt;ESC&gt;:e $VIM/_vimrc&lt;CR&gt;\r\n\r\nmap &lt;leader&gt;tn :tabnew&lt;CR&gt;\r\nmap &lt;leader&gt;th :tabp&lt;CR&gt;\r\nmap &lt;leader&gt;tl :tabn&lt;CR&gt;\r\nmap &lt;leader&gt;tc :tabclose&lt;CR&gt;\r\n\r\nmap &lt;C-j&gt; &lt;C-w&gt;&lt;C-j&gt; \r\nmap &lt;C-h&gt; &lt;C-w&gt;&lt;C-h&gt; \r\nmap &lt;C-l&gt; &lt;C-w&gt;&lt;C-l&gt; \r\nmap &lt;C-k&gt; &lt;C-w&gt;&lt;C-k&gt; \r\n\r\ninoremap &lt;M-j&gt; &lt;DOWN&gt;\r\ninoremap &lt;M-k&gt; &lt;UP&gt;\r\ninoremap &lt;M-h&gt; &lt;LEFT&gt;\r\ninoremap &lt;M-l&gt; &lt;RIGHT&gt;\r\n\r\nnnoremap &lt;M-j&gt; :resize+5&lt;CR&gt;\r\nnnoremap &lt;M-k&gt; :resize-5&lt;CR&gt;\r\nnnoremap &lt;M-h&gt; :vertical resize+5&lt;CR&gt;\r\nnnoremap &lt;M-l&gt; :vertical resize-5&lt;CR&gt;\r\n</code></pre>\r\n\r\n<p>vim-plug 使用</p>\r\n\r\n<p>插件从github下载之后将plug.vim放到安装gvim目录的autoload文件夹下即可。</p>\r\n\r\n<p>透明设置</p>\r\n\r\n<p>透明需要用到vimtweak和transparency-windows-vim这两个插件，vimtweak需要从github下载，然后将64位的xxx.dll放到gvim.exe同级目录。</p>','2020-07-26 12:36:04.852365','2020-07-26 12:36:04.852475',1,9),(122,'后台启用markdown','### 原谅我\r\n可能我天生就是一个喜欢折腾的家伙吧，我最近由于在折腾vim编辑器，所以不知咋的就把博客的后台也改成markdown格式了。当然我也喜欢用这个格式来记笔记等等。\r\n### 弃用ckeditor,使用mdeditor\r\n正如聪明的你所料，之前博客的后台写文章是用ckeditor富文本编辑器来实现的，老实说用起来很蛋疼，所以导致我都不怎么写文章了，强行解释一波哈，所以现在我改用**markdown**来编辑了，应该感觉会很不错，之前已经在开发环境中试过图片的上传，以及一般的代码高亮，都能够兼容之前的版本，最最重要的是，以前有一些笔记使用markdown格式来写的，这些东西都可以上传到这个网站来展示了，之后记得一些东西也可以用先用vim编辑，保存成md格式，再到后台来发布，这样也不用担心云服务器啥时候到期把数据也给带没了，当然之前的东西还是要用mysqld来导出的，这样可以无缝对接别的云服务武器了，其实也是蛮简单的东西，只是我自己蠢得一笔，所以导致耽误了一点时间。下面大致说下遇到的问题吧，蠢得一笔。\r\n### 警告\r\n在部署的时候遇到了一个问题，难倒了我1个多小时，我真的服了。在部署之前一定要进入虚拟环境下，收集下静态资源\r\n `python manage.py collectstatic`\r\n------------\r\n好了，老大不小了，记录这么弱智的问题实在有损我的颜面，暂时不想写更多东西了，gays，后会有期！','2020-08-05 00:05:14.467923','2020-08-05 00:10:11.598837',1,4),(123,'在chrome浏览器使用vim编写文字','[![vim](https://img.shields.io/badge/vim-input%20in%20chrome-green)]()\r\n\r\n## 软件分享\r\n网上推荐的好用的软件其实有许多，但是别的一些软件我没有使用到或者使用的比较少，就不介绍了，这里我就推荐下两款吧，一款是搜索软件，**Everything**。这个软件极大程度的解决了windows用户搜索文件慢的要死的蛋疼的问题，可以去官网或者腾讯软件中心下载，体积小，开箱即用，绝对会惊艳到你，秒搜，啊，那酸爽，妙不可言！  \r\n另外一款软件，是一个PDF阅读器，**万兴PDF专家**。首次安装需要扫码关注他们的公众号才能够使用，虽然比较麻烦，但是确实比其他pdf阅读器好的多，用起来也很舒服。\r\n\r\n## 使用vim编写自己的博客\r\n先上一张效果图哈~\r\n![Chrome使用vim效果](/media/editor/Chrome使用vim效果_20200808151404606205.gif \"Chrome使用vim效果\")\r\n其实很久之前，多久呢，emmm，大概在一周前，一月前？我就已经开始在折腾vim了，因为这真的是一个很强的很随心所欲的编辑器，使用它得心应手，对我来说有百利而无一害，又能感受到快乐，何乐而不为呢？我唯一担心的是随着时间的流逝，让我忘记了如何使用它。算了，让我好好总结下吧。\r\n\r\n### 安装gvim 64位\r\n为什么要强调安装64位呢？因为其实在安装gvim之前，其实我已经安装过一些开发环境了，这些都不难，如果你要按照我的方式在windows机器上安装使用gvim，那么建议你安装一遍这些开发环境，由于我这次记录的重点不是这些，所以不多做介绍。已经安装过的开发环境:  \r\n\r\n1. 安装`python3.6.4 64位`，对，聪明的你应该已经看到了，都是64位，自己体会  \r\n> 假如你已安装，可以直接cmd里面输入`python`查看自己的python位数  \r\n\r\n2. `go 1.13`,自己设置好自己的GOROOT（安装目录bin）,GOPATH(项目bin)等等。  \r\n> 假如你已安装，可以直接cmd里面输入`go version`查看自己的go版本  \r\n> 当然，这只是我的机子上的版本，汝等自行决断要使用的python和go版本  \r\n\r\n3. `node v10.15.0`,这是我的版本，现在的版本应该比这新的多   \r\n> 假如你已安装，可以直接cmd里面输入`node -v`来查看版本  \r\n**统一说明：安装python 64位是因为后面要安装gvim，并且也是64位，8.2之后的版本下载之后就可以支持python**，后面gvim统一用vim代替，假如你安装vim，请在vim中输入`:version`确认是否当前vim版本是否支持python3，如果支持，则会出现`+python3/dyn`字样，或者在vim中输入，`py3 import vim;print(\"hello vim\")`,输出hello vim,则证明当前vim支持python3环境。  \r\n\r\n### 在chrome浏览器上安装插件\r\n1. 如果你能使用网络代理，那么去[chrome网上应用店](https://chrome.google.com/webstore/category/extensions?utm_source=chrome-ntp-icon)搜索GhostText,添加至浏览器即可\r\n2. 如果你不能使用上面步骤完成，那么百度下极简插件，然后搜索GhostText下载，然后在chrome中，地址栏输入chrome://extensions,回车加载已下载的插件即可（极简里用没有我不是很清楚哈）\r\n\r\n### vim中安装插件管理器vim-plug\r\n`vim-plug`中比较核心的东西感觉就是一个vim-script,即`plug.vim`，所以去github.com/search搜索vim-plug，按照官网描述下载下来即可。我的做法：在$HOME里面新建.vim文件夹，建立插件目录plugged，在$HOME里面新建vimfiles,`git clone https://vim-plug/xxx.github.com`,将vim-plug代码拉到自己的仓库中，然后将`plug.vim`复制到vim安装路径的autoload目录下\r\n\r\n### 编辑_vimrc\r\n因为windows系统不支持将文件名以`.`开头，所以是_vimrc,它在你的vim安装路径下，也就是`$VIM`，没有的话加到你的PATH目录中，在插件管理部分中安装插件`Plug \'pandysong/ghost-text.vim\'`，[官网](https://github.com/pandysong/ghost-text.vim)，然后就按官网完成即可。\r\n\r\n### 如何使用\r\n1. 打开vim,输入`:GhostTextStart`来开启server  \r\n2. 打开浏览器，点击GhostText插件，选择激活状态`on`  \r\n3. 在页面中选择一个`textArea`文本域  \r\n4. 打开vim编辑  \r\n\r\n### 写在最后\r\n其实在chrome中使用vim编写文件并不只有这么一个解决方案，我之前尝试使用`Surfingkeys`,他就能使用内置的vim来编写文字区域，与vimium类似，不过好像更加高级，我也已入坑，安装使用和别的chrome插件的方法一样。好了，我的记录以及安利暂时就到这里，感谢观看。','2020-08-08 16:39:26.196342','2020-08-22 22:25:20.197038',1,9),(124,'使用vim-go','### 使用coc.nvim\r\n网上有很多`Gopher`都是使用`coc.nvim`+`vim-go`来进行golang开发的，应该还不错吧？所以我就先试用下，安装coc.nvim好像按照官网走就可以了，但前提是安装好`yarn`，配好淘宝的源，不然coc在下载依赖的时候会很慢。\r\n\r\n### 安装coc-go\r\n安装完coc.nvim之后，使用`CocInfo`查看状态，确认装好之后，使用`CocInstall coc-go`来安装coc-go，它使用的是gopls languange server proto\r\n\r\n### 安装vim-go\r\n在_vimrc中插件位置键入`Plug \'fatih/vim-go\',{\'tag\':\'*\'}`来安装vim-go\r\n\r\n### vim-go-tutorial\r\n\r\n\r\n### 常见错误\r\n使用coc时报错：`can not load main module`\r\n解决：使用`go mod`管理module，在项目根目录中初始化该项目`go mod init`','2020-08-09 11:14:36.654037','2020-08-09 11:14:36.654071',1,9),(125,'基本概念','## 什么是程序\r\n\r\n程序就是计算过程的序列，包括c程序，java程序等等\r\n\r\n## 什么是计算过程？\r\n\r\n计算过程包括输入，计算，和输出\r\n\r\n## 计算机是如何计算的\r\n\r\n计算机通过CPU计算数据\r\n\r\n## 数据从哪里来？\r\n\r\n数据的输入：用汇编指令修改地址寄存器决定cpu从哪里输入数据\r\ncpu计算：用汇编指令控制数据寄存器进行计算\r\n数据的输出：用汇编指令修改地址寄存器决定cpu向哪里输出数据\r\n\r\n## 地址寄存器有哪些\r\nDS ES SS CS\r\n\r\n## 什么是编程\r\n\r\n编程就是通过计算机语言表示出 计算过程的行为。\r\n\r\n##根据内存地址数内存\r\n\r\n《汇编语言第三版》王爽老师，工具docbox，未使用\r\n073F:0100 74 03 E9 97 00 B8 05 00 50 FF 36 3C 21 FF AE FE  \r\n          0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F  \r\n		  \r\n|073F:0100 |74 |03 |E9 |97 |00 |B8 |05 |00 |50 |FF |36 |3C |21 |FF |AE |FE |\r\n| - | - | - | - | - | - | - | - | - | - | - | - | - | - | - | - | - |\r\n|寄存器：内存地址 |0 |1 |2 |3 |4 |5 |6 |7 |8 |9 |A |B |C |D |E |F |','2020-08-19 21:43:04.854354','2020-08-22 08:51:34.779650',1,10),(127,'两数之和','## Two Sum\r\n\r\n让生锈的脑壳重新亮起来吧！\r\n> 声明： 只做学习参考,借鉴于  [leetcode book](https://books.halfrost.com/leetcode/)\r\n\r\n------------\r\n\r\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.  \r\nYou may assum that each input would have exactly one solution, and you may not use the same element twice.\r\n\r\nExample:\r\nGiven nums = [2, 7, 11, 15], target = 9,  \r\n      nums[0]+nums[1]=2+7=9,  \r\n      return [0, 1]\r\n\r\n解题思路：\r\n这道题的最优做法时间复杂度是O(n)。  \r\n顺序扫描数组，对每一个元素，在map中找到能组合给定值得另一个数字，如果能找到，直接返回2个数字的下标即可。  \r\n如果找不到，就把这个数字存入map中，等待扫描到“另一半”数字的时候，再取出来返回结果。  \r\n\r\n```go\r\npackage leetcode\r\n\r\nfunc TwoSum(nums []int int) []int {\r\n    // map --> {\"value\":\"index\"}\r\n    m := make(map[int]int)\r\n    for i := 0; i < len(nums); i++ {\r\n		another := target - nums[i]\r\n        if _, ok := m[another]; ok{\r\n            return []int{m[another], i}\r\n        }\r\n        m[nums[i]] = i\r\n    }\r\n    return nil\r\n}\r\n\r\n\r\n```','2020-08-22 09:14:47.240217','2020-08-22 11:47:28.732320',1,6),(128,'Container With Most Water','### Container With Most Water\r\n\r\nGiven n non-negative integers \\\\(a_1, a_2, ..., a_n\\\\), where each represents a point at coordinate (i, \\\\(a_i\\\\)).  \r\nn vertical lines are drawn such that the two endpoints of line i is at (i,\\\\(a_i\\\\)) and (i,0).  \r\nFind two lines, which together with x-axis forms a container, such that the container contains the most water.  \r\n**Note**: You may not slant the container and n is at least 2.\r\n![container with most water](https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/17/question_11.jpg)\r\n> The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.\r\n\r\n### 个人唠叨\r\n\r\n刚接触这种东西，肯定是想不到的，我不奢望我一次性能够把他做出来，但是见多了估计很简单，这是medium难度的问题。\r\n\r\n### 解题思路\r\n\r\n首先，这题目已知相对宽度，相对高度，相当于求最大面积吧。  \r\n所以就得一次次计算面积，并且比较。  \r\n为什么说是相对呢？因为计算的面积都是需要底和高的，底就是当前位置和最高位置横坐标的差值。最高位置（木桶效应）  \r\n在哪呢？很简单，当前y坐标是最小的，它就是最高位置。\r\n对撞指针的。首尾分别 2 个指针，每次移动以后都分别判断长宽的乘积是否最大。\r\n\r\n```go\r\n// two pointers\r\npackage leetcode\r\n\r\nfunc maxArea(height []int) int {\r\n    start, end, res := 0, len(height)-1, 0\r\n    for start < end {\r\n        res = max(res, (end - start) * min(height[start], height[end]))\r\n        if height[start] < height[end]{\r\n            start ++\r\n        }else{\r\n            end --\r\n        }\r\n    }\r\n    return res\r\n}\r\n\r\nfunc max(a, b int) int {\r\n    if a > b {\r\n        return a\r\n    }\r\n    return b\r\n}\r\nfunc min(a, b int) int {\r\n    if a < b {\r\n        return a\r\n    }\r\n    return b\r\n}\r\n```','2020-08-22 11:53:16.644817','2020-08-22 17:20:50.800025',1,6),(130,'3sum or triplets','### 3Sum\r\n\r\n#### 题目\r\n\r\nGiven an array nums of intergers, are there elements a, b, c in nums such that `a + b + c = 0`? Find all unique triplets in the array which gives the   sum of zero.\r\n\r\n**Note**: \r\nThe solution set must not contain duplicate triplets.\r\n\r\n**Example**:\r\n\r\n```\r\nGiven an array nums = [-1, 0, 1, 2, -1, -4],  \r\n\r\nA solution set is:  \r\n\r\n[\r\n    [-1, 0, 1],\r\n    [-1, -1, 2]\r\n]\r\n```\r\n\r\n#### 题目大意\r\n\r\n给出一个数组，要求在这个数组中找出3个数值和为0的所有组合\r\n\r\n#### 解题思路\r\n\r\n用map提前计算好任意2个数字之和，保存起来，可以将时间复杂度降到\\\\(O(n^2)\\\\)。这一题比较麻烦的一点在于，最后输出解的时候，要求输出不重复的解。数组中同一个数字可能出现多次，同一个数字也可能使用多次，但是最后输出解的时候，不能重复。例如[-1，-1，2]和[2，-1，-1]、[-1，2，-1]这几个解是重复的，即使-1可能出现100次，每次使用的-1的数组下标都是不同的。  \r\n\r\n这里就需要去重和排序了。map记录每个数字出现的次数，然后对map的key数组进行排序，最后在这个排序以后的数组里面横扫，找到另外2个数字能和自己组成0的组合。  \r\n\r\n#### 代码\r\n\r\n```go\r\npackage leetcode \r\nimport \"sort\"\r\n\r\nfunc threeSum(nums []int)[][]int {\r\n    // 计数\r\n    counter := make(map[int]int)\r\n    for _, v := range nums{\r\n        counter[v]++\r\n    }\r\n    // 去重\r\n    uniqueNums := []int{}\r\n    for key := range counter{\r\n        uniqueNums = append(uniqueNums, key)\r\n    }\r\n    //排序\r\n    sort.Ints(uniqueNums)\r\n    //逻辑\r\n    res := [][]int{}\r\n    for i:=0;i<len(uniqueNums);i++{\r\n        if (uniqueNums[i]*3==0)&&counter[uniqueNums[i]]>=3{\r\n            res = append(res,[]int{uniqueNums[i],uniqueNums[i],uniqueNums[i]})\r\n        }\r\n        for j:=i+1;j<len(uniqueNums);j++{\r\n            if (uniqueNums[i]*2+uniqueNums[j]==0)&&counter[uniqueNums[i]]>1{\r\n                res = append(res,[]int{uniqueNums[i],uniqueNums[i],uniqueNums[j]})\r\n            }\r\n            if (uniqueNums[j]*2+uniqueNums[i]==0)&&counter[uniqueNums[j]]>1{\r\n                res = append(res,[]int{uniqueNums[i],uniqueNums[j],uniqueNums[j]})\r\n            }\r\n            c:=0-uniqueNums[i]-uniqueNums[j]\r\n            if (c>uniqueNums[j])&&counter[c]>1{\r\n                res = append(res, []int{uniqueNums[i],uniqueNums[j],c})\r\n            }\r\n        }\r\n    }\r\n    return res\r\n}\r\n\r\n```','2020-08-23 18:47:10.470907','2020-09-02 22:15:56.771186',1,6),(131,'3Sum Closest','### 题目\r\n\r\nGiven an array nums of n intergers and an integer, find three integers such that each input would have exactly one solution.\r\n\r\n**Example**:\r\n\r\n```\r\nGiven array nums = [-1,2,1,-4], and target = 1.\r\n\r\nThe sum that is closest to the target is 2.(-1+2+1=2)\r\n\r\n\r\n```\r\n\r\n#### 题目大意\r\n\r\n给定一个数组，要求在这个数组中找出3个数之和离target最近。\r\n\r\n#### 解题思路\r\n\r\n这一题的解法是用两个指针夹逼的方法。先对数组进行排序，i从头开始往后面扫。这里同样需要注意数组中存在多个重复数字的问题。具体处理方法很多，可以用map记数去重。这里笔者简单的处理。i在循环的时候和前一个数进行比较，如果相等，i继续往后移动，直到移到下一个和前一个数字不同的位置。j,k两个指针开始一前一后夹逼。j为i的下一个数字，由于经过排序，所以k 的数字最大。j往后移动，k往前移动，逐渐夹逼出最接近target的值。\r\n\r\n#### 代码\r\n\r\n```go \r\n\r\npackage leetcode\r\n\r\nimport (\r\n	\"math\"\r\n	\"sort\"\r\n)\r\n\r\nfunc threeSumClosest(nums []int, target int) int {\r\n	res, n, diff := 0, len(nums), math.MaxInt32\r\n	if n > 2 {\r\n		sort.Ints(nums)\r\n		for i := 0; i < n-2; i++ {\r\n			for j, k := i+1, n-1; j < k; {\r\n				sum := nums[i] + nums[j] + nums[k]\r\n				if abs(target-sum) < diff {\r\n					res, diff = sum, abs(target-sum)\r\n				}\r\n				if sum == target {\r\n					return res\r\n				}\r\n				if sum < target {\r\n					j++\r\n				} else {\r\n					k--\r\n				}\r\n			}\r\n		}\r\n	}\r\n	return res\r\n}\r\n\r\nfunc abs(a int) int {\r\n	if a > 0 {\r\n		return a\r\n	}\r\n	return -a\r\n}\r\n\r\n```','2020-08-24 23:21:27.351580','2020-08-24 23:21:27.351637',1,6),(132,'4Sum','### 4Sum\r\n\r\n#### 题目\r\n\r\nGiven an array nums of n integers and an integer target, are there elements a, b, c, and d in nums such that `a + b + c +d =target`?Find all unique quardruplets in the array which gives the sum of target.  \r\n\r\n**Note**:\r\nThe solution set must not contain duplicate quardruplets.\r\n\r\n**Example**:\r\n\r\n```shell\r\nGiven array nums = [1, 0, -1, 0, -2, 2], and target = 0.\r\n\r\nA solution set is:\r\n[\r\n  [-1,  0, 0, 1],\r\n  [-2, -1, 1, 2],\r\n  [-2,  0, 0, 2]\r\n]\r\n\r\n```\r\n\r\n#### 题目大意\r\n\r\n给定一个数组，要求在这个数组中找出4个数之和为0的所有组合。\r\n\r\n\r\n#### 代码\r\n\r\n```go \r\n\r\npackage leetcode\r\n\r\nimport \"sort\"\r\n\r\n// FourSum => return a set with sum of target\r\nfunc FourSum(nums []int, target int) [][]int {\r\n	counter := make(map[int]int)\r\n\r\n	for _, values := range nums {\r\n		counter[values]++\r\n	}\r\n\r\n	uniqnums := []int{}\r\n	for key := range counter {\r\n		uniqnums = append(uniqnums, key)\r\n	}\r\n\r\n	res := [][]int{}\r\n	sort.Ints(uniqnums)\r\n	for i := 0; i < len(uniqnums); i++ {\r\n		if (uniqnums[i]*4 == target) && counter[uniqnums[i]] >= 4 {\r\n			res = append(res, []int{uniqnums[i], uniqnums[i], uniqnums[i], uniqnums[i]})\r\n		}\r\n		for j := i + 1; j < len(uniqnums); j++ {\r\n			if (uniqnums[i]*3+uniqnums[j] == target) && counter[uniqnums[i]] > 2 {\r\n				res = append(res, []int{uniqnums[i], uniqnums[i], uniqnums[i], uniqnums[j]})\r\n			}\r\n			if (uniqnums[i]*2+uniqnums[j]*2 == target) && counter[uniqnums[i]] > 1 && counter[uniqnums[j]] > 1 {\r\n				res = append(res, []int{uniqnums[i], uniqnums[i], uniqnums[j], uniqnums[j]})\r\n			}\r\n			if (uniqnums[j]*3+uniqnums[i] == target) && counter[uniqnums[j]] > 2 {\r\n				res = append(res, []int{uniqnums[i], uniqnums[j], uniqnums[j], uniqnums[j]})\r\n			}\r\n			for k := j + 1; k < len(uniqnums); k++ {\r\n				if (uniqnums[i]*2+uniqnums[j]+uniqnums[k] == target) && counter[uniqnums[i]] > 1 {\r\n					res = append(res, []int{uniqnums[i], uniqnums[i], uniqnums[j], uniqnums[k]})\r\n				}\r\n				if (uniqnums[j]*2+uniqnums[i]+uniqnums[k] == target) && counter[uniqnums[j]] > 1 {\r\n					res = append(res, []int{uniqnums[i], uniqnums[j], uniqnums[j], uniqnums[k]})\r\n				}\r\n				if (uniqnums[k]*2+uniqnums[i]+uniqnums[j] == target) && counter[uniqnums[k]] > 1 {\r\n					res = append(res, []int{uniqnums[i], uniqnums[j], uniqnums[k], uniqnums[k]})\r\n				}\r\n				c := target - uniqnums[i] - uniqnums[j] - uniqnums[k]\r\n				if c > uniqnums[k] && counter[c] > 0 {\r\n					res = append(res, []int{uniqnums[i], uniqnums[j], uniqnums[k], c})\r\n				}\r\n			}\r\n		}\r\n	}\r\n	return res\r\n}\r\n\r\n```','2020-08-25 23:23:18.534572','2020-08-25 23:23:18.534612',1,6),(133,'Remove Duplicates From Sorted Array','### Remove Duplicates From Sorted Array\r\n\r\n#### 题目\r\nGiven a sorted array nums, remove the duplicates in-place such that element appear only once and return the new length.\r\n\r\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\r\n\r\n**Example**:\r\n\r\n```shell\r\nGiven nums = [1,1,2]\r\n\r\nYour funcrion should return length = 2, with the first two elements of nums being 1 and 2 respectively.It doesn\'t matter what you leave beyond returned length.\r\n\r\n```\r\n\r\n**Example2**:\r\n\r\n```shell\r\nGiven nums = [0,0,1,1,1,2,2,3,3,4]\r\n\r\nYour funcrion should return length = 5, with the first five elements of nums being modified to 0, 1, 2, 3, and 4 respectively.\r\n\r\nIt doesn\'t matter what values are set beyond the returned length.\r\n\r\n```\r\n\r\n**Clarification:**\r\nConfused why the returned value is an integer but your answer is an array?  \r\n\r\nNote that the input array is passed in by reference, which means modification to the input array will be known to the caller as well.  \r\nInternally you can think of this:\r\n\r\n```shell\r\n// nums is passed in by refrence.(i.e.,without making a copy)\r\nint len = removeElement(nums, val;\r\n\r\n// any modification to nums in your function would be known by the caller.\r\n// using the length returned by your function, it prints the first len elements.\r\n\r\nfor (int i=0;i<len;i++){\r\n    print(nums[i])\r\n}\r\n```\r\n\r\n#### 题目大意\r\n给定一个有序数组nums，对数组中的元素进行去重，使得原数组中的每一个元素只有一个。最后返回去重后数组的长度值。\r\n\r\n#### 解题思路\r\n这里的数组的删除并不是真的删除，只是将删除的元素移动到后面的空间内，然后返回数组实际剩余的元素个数。\r\n\r\n#### 代码\r\n\r\ngo 版本\r\n\r\n```go\r\npackage leetcode\r\n\r\nfunc removeDuplicates(nums []int) int {\r\n	if len(nums) == 0{\r\n		return 0\r\n	}\r\n	last, finder := 0, 0\r\n	for last < len(nums)-1 {\r\n		for nums[finder] == nums[last] {\r\n			finder++\r\n			if finder == len(nums) {\r\n				return last+1\r\n			}\r\n		}\r\n		nums[last+1] = nums[finder]\r\n		last++\r\n	}\r\n	return last+1\r\n}\r\n\r\n```\r\n\r\n> 这个破程序暂且将它理解为摘个首位，然后遍历找到第一个与首位不相同的数，并把它放到首位后面一位，整个过程中，不会申请额外的空间，只是会改变原来的数组。细细品味吧。真的难懂！什么破玩意儿。\r\n\r\npython版\r\n\r\n```python\r\nclass Solution:\r\n    def removeDuplicates(self, nums):\r\n        if not nums:\r\n            return \r\n        slow = fast = 0\r\n        while fast <= len(nums) - 1:\r\n            if nums[fast] != nums[slow]:\r\n                nums[slow+1] = nums[fast]\r\n                slow += 1\r\n            fast += 1\r\n        return slow + 1\r\n```\r\n\r\n#### 总结\r\n下次碰到还是不会。','2020-08-31 22:26:42.155201','2020-08-31 22:34:18.965830',1,6),(134,'Remove Element','### Remove Element\r\n\r\n#### 题目\r\n\r\nGiven an array nums and a value val, remove all instances of that value in-place and return the new length.  \r\n\r\nDon\'t allocate extra space for an anther array, you must do this **modifying the input array** in-place with \\\\(O(1)\\\\) extra momery.  \r\n\r\nThe order of elements can be changed.It doesn\'t matter what you leave beyond the new length.\r\n\r\n**Example1**:\r\n``` shell\r\nGiven nums = [3,2,2,3], val = 3.\r\n\r\nYour function should return length = 2, with the first two elements of nums being 2.\r\n\r\nIt does not matter what you leave beyond the returned length.\r\n```\r\n\r\n**Example2**:\r\n``` shell\r\nGiven nums = [0,1,2,2,3,0,4,2], val = 2,  \r\n\r\nYour function should return length = 5, with the first five elements of nums containg 0, 1, 3, 0 and 4.  \r\n\r\nNote that the order of those five elements can be arbitrary.\r\n```\r\n\r\n#### 题目大意\r\n\r\n给定一个数组nums和一个数值val，将数组中所有等于val的元素删除，并返回剩余元素的个数\r\n\r\n#### solution\r\n\r\n其实官网对这个的描述比较通俗易懂\r\nApproach： Two Pointers\r\n##### Intuition\r\n\r\nSince this question is asking us to remove all elements of the given value in-place, we have to handle it with \\\\(O(1)\\\\) extra space.  \r\nHow to solve it? We can keep two pointers \\\\(i\\\\) and \\\\(j\\\\), where \\\\(i\\\\) is the slow-runner while \\\\(j\\\\) is the faster-runner.  \r\n##### Algorithm\r\n\r\nWhen \\\\(nums[j]\\\\) equals to the given value, skip this element by increming \\\\(j\\\\).As long as \\\\(nums[j] != val\\\\), wo copy \\\\(nums[j]\\\\)  \r\nto \\\\(nums[i]\\\\) and increment both indexes at the same time.Repeat the process until \\\\(j\\\\) reaches the end of the array and the new length is \\\\(i\\\\).\r\n\r\n#### 代码\r\n\r\n```go\r\npackage leetcode\r\n\r\nfunc removeElement(nums []int, val int) int {\r\n	i := 0\r\n	for j := 0; j < len(nums); j++ {\r\n		if nums[j] != val {\r\n			nums[i] = nums[j]\r\n			i++\r\n		}\r\n	}\r\n	return i\r\n}\r\n```','2020-09-03 08:27:41.440779','2020-09-03 08:30:42.415151',1,6),(135,'Chain Rule and Markov Assumption','#### Chain Rule\r\n\\\\(P ( A , B ) = P ( A ∣ B ) ⋅ P ( B ) = P ( B ∣ A ) ⋅ P ( A )\\\\)  \r\n\r\n同理：\r\n\\\\(P ( A , B , C , D ) = P ( A ) ⋅ P ( B ∣ A ) ⋅ P ( C ∣ A , B ) ⋅ P ( D ∣ A , B , C )\\\\)  \r\n\r\n#### 推广：\r\n\\\\(P ( W 1 , W 2 , W 3 , . . . , W n ) = P ( W 1 ) ⋅ P ( W 2 ∣ W 1 ) ⋅ P ( W 3 ∣ W 1 , W 2 ) ⋅ . . . ⋅ P ( W n ∣ W 1 , W 2 , W 3 , . . . , W n − 1 ) \\\\)  \r\n举例：\r\n\\\\(P (今天,是,春节,我们,都,休息) = P (今天) P (是∣今天) P (春节∣今天,是 ) P (我们∣今天,是,春节) P (都∣今天,是,春节,我们) P (休息∣今天,是,春节,我们,都) \\\\)  \r\n适当说明：P(是|今天)是表示“今天”的前提下，是“是”的概率；P(春节|今天，是)表示“今天是”的前提下，出现“春节”的概率\r\n\r\n假设给定一个语料：\r\n【今天是春节我们都休息…今天是春节我们都放假…】\r\n则\r\n$$ P ( 休 息 ∣ 今 天 ， 是 ， 春 节 ， 我 们 ， 都 ) = 1 / 2 $$\r\n$$ P ( 今 天 ， 是 ， 春 节 ， 我 们 ， 都 ， 休 息 ) = 非 0 值 $$\r\n但是\r\n$$ P ( 运 动 ∣ 今 天 ， 是 ， 春 节 ， 我 们 ， 都 ) = 0 $$\r\n$$ P ( 今 天 ， 是 ， 春 节 ， 我 们 ， 都 ， 休 息 ) = 0 $$\r\n这显然是有问题的，这也是Chain Rule的特点（缺点）：后面的概率过于依赖前面的概率\r\n\r\n#### Markov Assumption\r\n\r\n##### 1st order Markov Assumption\r\n\r\n$$ P(W_1,W_2,W_3,W_4,W_5,...,W_n)$$\r\n$$≈ P(W_1)·P(W_2|W_1)·P(W_3|W_2)·...·P(W_n|W_{n-1}) $$\r\n$$=P(W_1)·\\prod_{i=2}^{n}P(W_i|W_{i-1})$$\r\n\r\n##### 2nd order Markov Assumption\r\n\r\n$$ P(W_1,W_2,W_3,W_4,W_5,...,W_n)$$\r\n$$≈P(W_1)·P(W_2|W_1)·P(W_3|W_1,W_2)·P(W_4|W_2,W_3)·...·P(W_n|W_{n-2},W_{n-1})$$\r\n$$=P(W_1)·P(W_2|W_1)·\\prod_{i=3}^{n}P(W_i|W_{i-2},W_{i-1})$$\r\n##### 3rd order Markov Assumption\r\n\r\n$$P(W_1,W_2,W_3,W_4,W_5,...,W_n)$$\r\n$$≈P(W_1)·P(W_2|W_1)·P(W_3|W_1,W_2)·P(W_4|W_1,W_2,W_3)·P(W_5|W_2,W_3,W_4)·...·P(W_n|W_{n-3},,W_{n-2},W_{n-1})$$\r\n$$=P(W_1)·P(W_2|W_1)·P(W_3|W_1,W_2)·\\prod_{i=4}^{n}P(W_i|W_{i-3},W_{i-2},W_{i-1})$$\r\n举例说明：  \r\nP(休息|今天，是，春节，我们，都)  \r\nP(休息|都) ===>1st order Markov Assumption  \r\nP(休息|我们，都) ===>2nd order Markov Assumption  \r\nP(休息|春节，我们，都) ===>3rd order Markov Assumption  \r\n\r\n如果给定一个训练好的Language Model，列出了以下概率：\r\n\\\\(P(是|今天)=0.01\\\\),\r\n\\\\(P(今天)=0.002\\\\),\r\n\\\\(P(周日|是)=0.001\\\\),\r\n\\\\(P(周日|今天)=0.0001\\\\),\r\n\\\\(P(周日)=0.02\\\\),\r\n\\\\(P(是|周日)=0.0002\\\\)\r\n\r\n使用 1st order Markov Assumption：   今天是周日 VS 今天周日是\r\n\r\n\\\\(P(今天是周日) = P(今天)·P(是|今天)·P(周日|是) = 0.002×0.01×0.001=2×10^{-8}\\\\)  \r\n\\\\(P(今天周日是) = P(今天)·P(周日|今天)·P(是|周日) = 0.002×0.0001×0.0002=4×10^{-10}\\\\)  \r\n\\\\(P(今天是周日) > P(今天周日是)\\\\)  \r\n说明\\\\(P(今天 是 周日)\\\\) 的语义更好，事实上也是如此。','2020-09-13 17:27:13.599354','2020-09-13 18:14:13.800654',1,12),(136,'First Missing Positive','#### 题目\r\n\r\nGiven an unsorted integer array, find the smallest missing postive integer.\r\n\r\n**Example1**\r\n```shell\r\ninput:[1,2,0]\r\noutput:3\r\n```\r\n**Example2**\r\n```shell\r\nInput:[3,4,-1,1]\r\nOutput:2\r\n```\r\n**Example3**\r\n```shell\r\nInput:[7,8,9,11,12]\r\nOutput:1\r\n```\r\n\r\n**Note**  \r\n\r\nYour algorithm should run in \\\\(O(n)\\\\) time and uses constant extra space.\r\n\r\n#### 题目大意\r\n\r\n找到缺失的第一个正整数。\r\n\r\n#### 解题思路\r\n\r\n为了减少时间的复杂度，可以将 input 数组都装到一个map中，然后 i 循环从1开始，依次比对map中是否存在i,只要不存在 i 就返回，即所求。  \r\n\r\n#### 代码\r\n\r\n```go\r\npackage leetcode\r\n\r\n// FirstMissingPositive ->找出第一个缺失的正整数\r\nfunc FirstMissingPositive(nums []int) int {\r\n	numsMap := make(map[int]int, len(nums))\r\n	for _, v := range nums {\r\n		numsMap[v] = v\r\n	}\r\n	for i := 1; i < len(nums)+1; i++ {\r\n		if _, ok := numsMap[i]; !ok {\r\n			return i\r\n		}\r\n	}\r\n	return len(nums) + 1\r\n}\r\n\r\n```\r\n####','2020-09-26 10:36:50.177284','2020-09-26 10:38:51.057454',1,6),(137,'Trapping Rain Water','#### 题目\r\n\r\nGiven n non-negative integers representing an evelation map where the width of each bar is 1, compute how much water it is able to trip after raining.  \r\n![Trip Rain Water](/media/editor/Snipaste_2020-09-30_17-34-55_20200930173553103808.png \"Trip Rain Water\")  \r\nThe above evelation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1].In this case, 6 units of rain water(blue section) are being trapped.  \r\n**Example**\r\n```shell\r\nInput:[0,1,0,2,1,0,1,3,2,1,2,1]\r\nOutput:6\r\n```\r\n\r\n#### 题目大意\r\n\r\n从 x 轴开始，给出一个数组，数组里面的数字，代表从（0, 0）点开始，宽度为1个单位，高度为数组元素的值。如果下雨了，这样一个容器能装多少单位的水？  \r\n\r\n#### 解题思路\r\n\r\n[![解题思路](https://image.ibb.co/d6A2ZU/IMG-0139.jpg \"解题思路\")](https://image.ibb.co/d6A2ZU/IMG-0139.jpg \"解题思路\")  \r\n每一个数组里面的元素都可以想象成一个左右有壁的圆柱筒。例如上图中左边的第二个元素1，当前左边最大的元素是2，所以2高度的水会装到1的上面。这道题的思路就是左指针从0开始往右扫，右边指针从最右边开始往左边扫。  \r\n额外还需要来两个变量记录左边最大的高度和右边最大的高度。遍历扫数组的过程中，如果左指针的高度比右指针的小，就不断的移动左指针，否则移动右指针。循环的终止条件就是左指针碰到右指针。只要数组中元素的高度比  \r\n保存的局部最高值小，就计算res的值累加，否则就更新局部最高值。  \r\n\r\n#### 代码\r\n```go\r\npackage leetcode\r\n\r\nfunc trap(height []int) int {\r\n    left, right, leftMax, rightMax, res := 0, len(height)-1, 0, 0, 0\r\n    for left < right {\r\n        if height[left] < height[right]{\r\n            if height[left] > leftMax {\r\n            leftMax = height[left]\r\n            }else{\r\n                res += leftMax - height[left]\r\n            }\r\n            left++\r\n        }else{\r\n            if height[right] >= rightMax {\r\n                rightMax = height[right]\r\n            }else{\r\n                res += rightMax - height[right]\r\n            }\r\n            right--\r\n        }\r\n    }\r\n    return res\r\n}\r\n```','2020-09-30 17:55:45.746247','2020-09-30 17:55:45.746314',1,6),(138,'Rotate Image','#### 题目\r\nYour are given an \\\\(2*2\\\\) matrix representing an image.Rotate the image by 90 degrees(clockswise).  \r\n\r\n**Note**  \r\n\r\nYou have to rotate the image in-place,which means you have to modify the input 2D matrix directly.**Do not** allocate another 2D matrix and do the rotation.  \r\n\r\n**Example1**\r\n```shell\r\nGiven input matrix = \r\n[\r\n  [1,2,3],\r\n  [4,5,6],\r\n  [7,8,9]\r\n],\r\n\r\nrotate the input matrix in-place such that it becomes:\r\n[\r\n  [7,4,1],\r\n  [8,5,2],\r\n  [9,6,3]\r\n]\r\n```\r\n\r\n**Example2**\r\n```shell\r\nGiven input matrix =\r\n[\r\n  [ 5, 1, 9,11],\r\n  [ 2, 4, 8,10],\r\n  [13, 3, 6, 7],\r\n  [15,14,12,16]\r\n], \r\n\r\nrotate the input matrix in-place such that it becomes:\r\n[\r\n  [15,13, 2, 5],\r\n  [14, 3, 4, 1],\r\n  [12, 6, 8, 9],\r\n  [16, 7,10,11]\r\n]\r\n```\r\n\r\n#### 题目大意\r\n\r\n给定一个nxn的二维矩阵表示图像。将图像顺时针旋转90度，说明：你必须在原地旋转，这意味着你需要直接修改输入的二维矩阵。请不要使用另一个矩阵来旋转矩阵。  \r\n\r\n#### 代码\r\n```go\r\npackage leetcode\r\n\r\nfunc rotate(matrix [][]int) {\r\n	row := len(matrix)\r\n	if row <= 0 {\r\n		return\r\n	}\r\n	column := len(matrix[0])\r\n	// rotate by diagonal 对角线变换\r\n	for i := 0; i < row; i++ {\r\n		for j := i + 1; j < column; j++ {\r\n			tmp := matrix[i][j]\r\n			matrix[i][j] = matrix[j][i]\r\n			matrix[j][i] = tmp\r\n		}\r\n	}\r\n	// rotate by vertical centerline 竖直轴对称翻转\r\n	halfColumn := column / 2\r\n	for i := 0; i < row; i++ {\r\n		for j := 0; j < halfColumn; j++ {\r\n			tmp := matrix[i][j]\r\n			matrix[i][j] = matrix[i][column-j-1]\r\n			matrix[i][column-j-1] = tmp\r\n		}\r\n	}\r\n}\r\n```','2020-10-07 21:56:45.861027','2020-10-07 22:05:01.503304',1,6),(139,'十月杂谈','#### 秋天的第一篇博客\r\nhi，好像这是秋天以来，也是10月以来的第一篇博客。在这里，我首先得讲出我心中的疑惑，自从我的小破站的地址被“外人”所知道了之后，就开始有了访问量，刚开始日访问量竟然上百，周访问量现在平均几十，本来是不必要太过于惊讶的，但是我的阿里云管理平台已经发了好几次短信给我了，提醒我有近30条漏洞，还有1条高危，难道唯一能够证明我存在的地方也可能会使虚假的么？比如虫子什么的？笑着哭  \r\n\r\n#### 这段时间去哪了\r\n这段时间都没有怎么光顾过小破站，说忙估计我自己都不会相信，其实啊，我是去追综艺节目和电视剧以及电影去了，追的我连换工作的信心都没有了，好吧，本来就没有。其实吧，不知从哪里看到了脱口秀的视频，然后就开始看了这玩意一段时间，就像着魔了似的，然后呢，又不知道从哪里看到《心动的信号》，emm,第一到第三季都追完了。我比较喜欢憨憨琴心哈，加油呀。\r\n\r\n#### 接下里该干什么\r\n其实这么多天下来，我开始有点迷茫了，整个人就很懵，我是谁，我为什么会在这里，我要干什么？我昨天干了啥，我看了个啥。真的担心再这么下去我会废掉，是不是已经废了...后续暂时不讲了，回归正常就好，其实答案就在心中，只是需要执行下去的勇气罢了。  \r\n\r\n#### 关于迟到\r\n说起迟到，上个月上似乎迟到了3次，其中有两次是不可抗力，哈哈，其实经历了也蛮好，蛮有意思的。\r\n\r\n#### 动动手\r\n有机会的话，我会多动动手的，感觉真的蛮重要的，拜拜，秋天里的第一篇杂谈。','2020-10-21 18:27:45.603309','2020-10-21 22:33:52.619932',1,13),(140,'Maximum Subarray','#### 题目\r\nGiven an integer array numbers, find the contiguous subarray(containing at least one number) which has the largest sum and return sum.  \r\n\r\n**Example**\r\n```shell\r\nInput: [-2,1,-3,4,-1,2,1,-5,4],\r\nOutput: 6\r\nExplanation: [4,-1,2,1] has the largest sum = 6.\r\n```\r\n**Follow Up**  \r\nIf you have figured the O(n) solution, try coding the other divide and conquer approach, which is more suitable.  \r\n\r\n#### 题目大意\r\n给定一个整数数组nums, 找到具有最大和的连续子数组（至少包含一个元素），返回其最大值。\r\n\r\n#### 解题思路\r\n这一题可以用 DP 求解也可以不用 DP。\r\n题目要求输出数组中某个区间内数字之和最大的那个值。dp[i] 表示 [0,i] 区间内各个子区间和的最大值，状态转移方程是 dp[i] = nums[i] + dp[i-1] (dp[i-1] > 0)，dp[i] = nums[i] (dp[i-1] ≤ 0)。\r\n\r\n#### 代码\r\n```go\r\n// dp暂时未能理解，不写代码\r\npackage leetcode\r\n\r\nfun MaxSubarray([]int nums){\r\n	if len(nums)==1{\r\n		return nums[0]\r\n	}\r\n	for i:=0; i<len(nums); i++ {\r\n		currentSum, maxSum := nums[0], 0\r\n		currentSum += nums[i]\r\n		if currentSum > maxSum{\r\n			maxSum = currentSum\r\n		}\r\n		if currentSum < 0{\r\n			currentSum = 0\r\n		}\r\n	}\r\n	return maxSum\r\n}\r\n\r\n```','2020-11-05 22:16:16.030270','2020-11-05 22:17:28.564048',1,6),(141,'Spiral Matrix','#### 题目\r\nGiven a matrix of m x n elements(m rows, n columns), return all of elements in spiral order.  \r\n\r\n**Example1**  \r\n```bash\r\nInput:\r\n[\r\n [ 1, 2, 3 ],\r\n [ 4, 5, 6 ],\r\n [ 7, 8, 9 ]\r\n]\r\nOutput: [1,2,3,6,9,8,7,4,5]\r\n```\r\n**Example2**  \r\n```bash\r\nInput:\r\n[\r\n  [1, 2, 3, 4],\r\n  [5, 6, 7, 8],\r\n  [9,10,11,12]\r\n]\r\nOutput: [1,2,3,4,8,12,11,10,9,5,6,7]\r\n```\r\n#### 题目大意\r\n给定一个包含mxn个元素的矩阵（m行n列），请按照顺时针螺旋顺序，返回矩阵中所有的元素。\r\n\r\n#### 解题思路\r\n给出一个二维数组，按照螺旋的方式输出  \r\n解法一：需要注意的是特殊情况，比如二维数组退化成一维或者一列或者一个元素。注意了这些情况，基本就可以一次通过了。  \r\n解法二：提前算出一共多少个元素，一圈一圈地遍历矩阵，停止条件就是遍历了所有元素（count == sum）\r\n\r\n#### 代码\r\n暂时只给出python版本，go版本理解了之后补上\r\n```python\r\nclass Solution:\r\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\r\n        row = len(matrix)\r\n        if row == 0 or len(matrix[0])==0:\r\n            return []\r\n        col = len(matrix[0])\r\n        res = matrix[0]\r\n        if row > 1:\r\n            for j in range(1, row):\r\n                res.append(matrix[j][col-1])\r\n            for m in range(col-2, -1, -1):\r\n                res.append(matrix[row-1][m])\r\n            if col > 1:\r\n                for n in range(row-2, 0, -1):\r\n                    res.append(matrix[n][0])\r\n        M = []\r\n        for k in range(1, row-1):\r\n            M.append(matrix[k][1:-1])\r\n        return res + self.spiralOrder(M)\r\n```','2020-11-08 22:54:30.856702','2020-11-08 22:57:29.861206',1,6),(142,'Word of the day-- grudge','#### grudge\r\nA feeling of dislike for someone because you cannot forget they harmed you in the past.\r\n\r\n#### example\r\n1. Is there anyone who might have had a grudge against her?\r\n2. Mr Gillis was not normally a man to bear grudges.\r\n3. I\'m not harbouring some secret grudge against you.\r\n4. It could be the work of someone with grudge against the company.\r\n5. You let nasty personal grudges creep in.','2020-11-26 21:50:21.568671','2020-11-26 21:50:21.568721',1,8),(143,'good bye','## Good Bye\r\n- 鉴于不能将博客本地化的原因（博客数据都存在数据库中），现决定重新使用 hugo 将所有博客做统一管理，也就是说，这个博客网站也许将会被弃用，另，阿里云服到期后（还有近两年），不再续期。\r\n- 还有一个原因就是一个女生不再理我了，心里很不是滋味，所以这个网站也没有继续活下去的必要了\r\n- 最后一个原因就是我废话太多了，新博客就只记录有用的东西吧，我还是太嫩了。\r\n\r\n综上所述，39.102.213.182可能后面将不会再挂此网站，喜欢我的可以关注 herschel-ma.github.io。\r\n- 再见了，django写的小破站，还是很爱你，可是还是得说再见了。江湖再见！','2021-03-25 21:43:12.466963','2021-03-25 21:43:12.467001',9,4),(144,'我回来啦','# 为什么想到回来？\r\n说到这个，其实是一个悲伤的故事，我 sudo rm -rf /usr/bin 了，查资料，大多数让重装系统，所以我就重装系统了，幸好之前的 U 盘启动盘仍然存在，否则就真的很悲伤，真正令人悲伤的是，我之前所有的文件都丢了，所以我的 hugo 网站也丢了，只有发布在github上的部分了，虽然可以再去将hugo下载回来，但是我想想还是算了，这个服务器到期之后，或许我就不会再续费了...\r\n\r\n其实主要是由于不想再搭建一个 blog 了，为了方便起见，还是用回小破站吧，做好数据备份就行\r\n\r\n# 这次会坚持写博客吗？\r\n\r\n会的，主要是我想把做得事情做一个记录，这样方便我老了之后回忆，老是弄旧的东西令人感到烦躁，我喜欢新事物\r\n\r\n# 数据怎么备份呢？\r\n\r\n具体的步骤见【数据备份和恢复】\r\n\r\n计划是这样的：我现在没有急需解决的事情，我打算每周五中午 12：00 在服务端作一次备份，然后将其传到我本地\r\n\r\n# 怎么写博客呢？\r\n\r\n其实包括两部分，首先是写，我会将一些有趣的事情，或者待办事项，当然还有技术文章，笔记，日记等等，先写下来，我打算用 neovim 来作为我的编辑器，现在发现真的有点喜欢它。\r\n其次，是发布博客，我想写一个自动发布的脚本，来将我的 markdown 文件发到后台管理。\r\n\r\n# 担心私人的东西会被别人看到吗？\r\n\r\n呵呵，无所谓啦','2021-10-20 14:19:35.072739','2021-10-20 14:19:35.072786',1,4),(145,'数据备份和恢复','# 从服务端获取requirements.txt\r\n本文是用来记录django服务端数据库迁移的过程，部分内容仅本人适用！\r\n\r\n1. 远程登陆服务端\r\n  `ssh root@39.101.213.182`\r\n\r\n2. 查看mysql版本 `mysql --version`  \r\n  >  mysql  Ver 14.14 Distrib 5.7.29, for Linux (x86_64) using  EditLine wrapper\r\n\r\n3. 冻结 python pip 环境 `pip freeze > requirequirements.txt`\r\n  > 注意：一般将其放在与 settings.py 同级目录，本次方便起见，将其放到github仓库，即项目目录下，settings.py 以及 site.sql （备份后的文件）将从服务端传至本机，后面记录。\r\n\r\n4. 查看 requirements.txt `cat requirements.txt`\r\n  > Django==2.0\r\n  > django-ckeditor==5.4.0\r\n  > django-crispy-forms==1.8.1\r\n  > django-js-asset==1.2.2\r\n  > django-mdeditor==0.1.18\r\n  > django-simpleui==3.9.1\r\n  > importlib-metadata==1.7.0\r\n  > Markdown==3.2.2\r\n  > mysqlclient==1.4.6\r\n  > Pillow==7.0.0\r\n  > PyMySQL==0.9.3\r\n  > pytz==2019.3\r\n  > zipp==3.1.0\r\n\r\n# 本地上传最新文件\r\n\r\n由于本地重装了系统，之前所有文件都丢失，所以先在服务端提交，然后传文件到本地，再在本地 git push。\r\n  \r\n1. git 版本 `git --version`\r\n  > git version 2.17.1\r\n  \r\n2. 查看 `git status`\r\n  > On branch master\r\n  > Your branch is up to date with \'origin/master\'.\r\n  > \r\n  > Changes not staged for commit:\r\n  >   (use \"git add <file>...\" to update what will be committed)\r\n  >   (use \"git checkout -- <file>...\" to discard changes in working directory)\r\n  > \r\n  > 	modified:   .gitignore\r\n  > 	modified:   blog/templates/blog/blog_list.html\r\n  > 	modified:   comment/templatetags/comment_extras.py\r\n  > \r\n  > Untracked files:\r\n  >   (use \"git add <file>...\" to include in what will be committed)\r\n  > \r\n  > 	requirements.txt\r\n\r\n3. scp 从服务端下载文件\r\n  `scp root@39.101.213.182:/home ~`\r\n\r\n4. 添加 git config (本地)\r\n  `git config --global user.email \"xxxxxx@126.com\"`\r\n  `git config --global user.name \"xxxxx\"`\r\n\r\n5. 添加ssh key(本地)\r\n  [官方文档](https://docs.github.com/en/authentication)\r\n  [其他资料](https://cloud.tencent.com/developer/article/1861466)\r\n\r\n6. `git push`\r\n\r\n# 本机配置 blog 开发环境\r\n\r\n安装 virtualenvwrapper `pip install virtualenv virtualenvwrapper`\r\n\r\n```sh\r\n  Collecting virtualenvwrapper\r\n    Downloading virtualenvwrapper-4.8.4.tar.gz (334 kB)\r\n       |████████████████████████████████| 334 kB 282 kB/s \r\n  Collecting virtualenv\r\n    Downloading virtualenv-20.8.1-py2.py3-none-any.whl (5.3 MB)\r\n       |████████████████████████████████| 5.3 MB 455 kB/s \r\n  Collecting virtualenv-clone\r\n    Downloading virtualenv_clone-0.5.7-py3-none-any.whl (6.6 kB)\r\n  Collecting stevedore\r\n    Downloading stevedore-3.5.0-py3-none-any.whl (49 kB)\r\n       |████████████████████████████████| 49 kB 892 kB/s \r\n  Collecting distlib<1,>=0.3.1\r\n    Downloading distlib-0.3.3-py2.py3-none-any.whl (496 kB)\r\n       |████████████████████████████████| 496 kB 136 kB/s \r\n  Collecting backports.entry-points-selectable>=1.0.4\r\n    Downloading backports.entry_points_selectable-1.1.0-py2.py3-none-any.whl (6.2 kB)\r\n  Collecting filelock<4,>=3.0.0\r\n    Downloading filelock-3.3.1-py3-none-any.whl (9.7 kB)\r\n  Requirement already satisfied: six<2,>=1.9.0 in /usr/lib/python3/dist-packages (from virtualenv->virtualenvwrapper) (1.14.0)\r\n  Collecting platformdirs<3,>=2\r\n    Downloading platformdirs-2.4.0-py3-none-any.whl (14 kB)\r\n  Collecting pbr!=2.1.0,>=2.0.0\r\n    Using cached pbr-5.6.0-py2.py3-none-any.whl (111 kB)\r\n  Building wheels for collected packages: virtualenvwrapper\r\n    Building wheel for virtualenvwrapper (setup.py) ... done\r\n    Created wheel for virtualenvwrapper: filename=virtualenvwrapper-4.8.4-py2.py3-none-any.whl size=24868 sha256=6e22227a177b61975d1becefcdccfd4aa2bb5ccc3f0a05f22537f44447d72bb2\r\n    Stored in directory: /home/herschel/.cache/pip/wheels/47/15/3d/7a26eaf92e79f80a3df3ac5f8e0f0f5b7efdf24d313c594a44\r\n  Successfully built virtualenvwrapper\r\n  Installing collected packages: distlib, backports.entry-points-selectable, filelock, platformdirs, virtualenv, virtualenv-clone, pbr, stevedore, virtualenvwrapper\r\n  Successfully installed backports.entry-points-selectable-1.1.0 distlib-0.3.3 filelock-3.3.1 pbr-5.6.0 platformdirs-2.4.0 stevedore-3.5.0 virtualenv-20.8.1 virtualenv-clone-0.5.7 virtualenvwrapper-4.8.4\r\n```\r\n\r\n参考[How to Set Up Virtualenv with Virtualenvwrapper on Ubuntu 18.04](https://www.freecodecamp.org/news/virtualenv-with-virtualenvwrapper-on-ubuntu-18-04/) ，配置.zshrc\r\n  \r\n```sh \r\n  export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3\r\n  export WORKON_HOME=$HOME/.virtualenvs\r\n  export VIRTUALENVWRAPPER_VIRTUALENV=/home/goran/.local/bin/virtualenv\r\n  source ~/.local/bin/virtualenvwrapper.sh\r\n```\r\n\r\n创建虚拟环境 `mkvirtualenv blog`\r\n  \r\n```sh\r\n  created virtual environment CPython3.8.10.final.0-64 in 328ms\r\n    creator CPython3Posix(dest=/home/herschel/.virtualenvs/blog, clear=False, no_vcs_ignore=False, global=False)\r\n    seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/home/herschel/.local/share/virtualenv)\r\n      added seed packages: pip==21.2.4, setuptools==58.1.0, wheel==0.37.0\r\n    activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\r\n  virtualenvwrapper.user_scripts creating /home/herschel/.virtualenvs/blog/bin/predeactivate\r\n  virtualenvwrapper.user_scripts creating /home/herschel/.virtualenvs/blog/bin/postdeactivate\r\n  virtualenvwrapper.user_scripts creating /home/herschel/.virtualenvs/blog/bin/preactivate\r\n  virtualenvwrapper.user_scripts creating /home/herschel/.virtualenvs/blog/bin/postactivate\r\n  virtualenvwrapper.user_scripts creating /home/herschel/.virtualenvs/blog/bin/get_env_details\r\n```\r\n`workon` 查看虚拟环境 list \r\n  > blog\r\n\r\n进入虚拟环境 `workon blog`, 并且升级pip `pip install -U pip`\r\n\r\n安装 [msyql 8](https://phoenixnap.com/kb/install-mysql-ubuntu-20-04)\r\n\r\n解决问题\r\n \r\n```sh\r\n  mysql -u root               \r\n  ERROR 1698 (28000): Access denied for user \'root\'@\'localhost\'\r\n```\r\n  \r\n`sudo mysql -u root # I had to use \"sudo\" since it was new installation`\r\n\r\n```sh\r\n  mysql> USE mysql;\r\n  mysql> UPDATE user SET plugin=\'mysql_native_password\' WHERE User=\'root\';\r\n  mysql> FLUSH PRIVILEGES;\r\n  mysql> exit;\r\n```\r\n\r\n`sudo service mysql restart`\r\n\r\n现在输入`mysql -u root` 可以直接进入mysql,但是输入`mysql -u root -p`，再次报之前的错\r\n\r\n```sh\r\n\r\n  mysql> SHOW VARIABLES LIKE \'validate_password%\';\r\n  +--------------------------------------+--------+\r\n  | Variable_name                        | Value  |\r\n  +--------------------------------------+--------+\r\n  | validate_password.check_user_name    | ON     |\r\n  | validate_password.dictionary_file    |        |\r\n  | validate_password.length             | 8      |\r\n  | validate_password.mixed_case_count   | 1      |\r\n  | validate_password.number_count       | 1      |\r\n  | validate_password.policy             | STRONG |\r\n  | validate_password.special_char_count | 1      |\r\n  +--------------------------------------+--------+\r\n\r\n  mysql> SET GLOBAL validate_password.length = 6;\r\n  Query OK, 0 rows affected (0.00 sec)\r\n\r\n  mysql> SET GLOBAL validate_password.number_count = 0;\r\n  Query OK, 0 rows affected (0.00 sec)\r\n\r\n  mysql> SHOW VARIABLES LIKE \'validate_password%\';\r\n  +--------------------------------------+--------+\r\n  | Variable_name                        | Value  |\r\n  +--------------------------------------+--------+\r\n  | validate_password.check_user_name    | ON     |\r\n  | validate_password.dictionary_file    |        |\r\n  | validate_password.length             | 6      |\r\n  | validate_password.mixed_case_count   | 1      |\r\n  | validate_password.number_count       | 0      |\r\n  | validate_password.policy             | MEDIUM |\r\n  | validate_password.special_char_count | 1      |\r\n  +--------------------------------------+--------+\r\n  7 rows in set (0.00 sec)\r\n\r\n  mysql> SET GLOBAL validate_password_policy = 0;\r\n  ERROR 1193 (HY000): Unknown system variable \'validate_password_policy\'\r\n  mysql> SET GLOBAL validate_password.policy=LOW;\r\n  Query OK, 0 rows affected (0.00 sec)\r\n\r\n  mysql> ALTER USER \'root\'@\'localhost\' IDENTIFIED BY \'YOURPASSWORD\';\r\n  Query OK, 0 rows affected (0.16 sec)\r\n```\r\n\r\n现在可以使用密码登陆了 `mysql -u root -p`\r\n\r\n创建database mysite:\r\n  `create database mysite;`\r\n\r\n服务端导出数据，可以借鉴[这篇文章](\"https://www.sqlshack.com/how-to-backup-and-restore-mysql-databases-using-the-mysqldump-command/\")\r\n  `mysqldump -u root -p mysite > /home/site-date.sql`\r\n\r\n拷贝数据到本机 `scp root@39.101.213.182:/home/site-date.sql ~/site/sitesite-date.sql`\r\n\r\n# 本机安装依赖\r\n\r\n`pip install -r requirements.txt`\r\n出现类似报错：\r\n\r\n```sh\r\n(mysite)zjm1126@zjm1126-G41MT-S2:~/zjm_test/mysite$ pip install mysql-python\r\nDownloading/unpacking mysql-python\r\n  Downloading MySQL-python-1.2.3.tar.gz (70Kb): 70Kb downloaded\r\n  Running setup.py egg_info for package mysql-python\r\n    sh: mysql_config: not found\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 14, in <module>\r\n      File \"/home/zjm1126/zjm_test/mysite/build/mysql-python/setup.py\", line 15, in <module>\r\n        metadata, options = get_config()\r\n      File \"setup_posix.py\", line 43, in get_config\r\n        libs = mysql_config(\"libs_r\")\r\n      File \"setup_posix.py\", line 24, in mysql_config\r\n        raise EnvironmentError(\"%s not found\" % (mysql_config.path,))\r\n    EnvironmentError: mysql_config not found\r\n    Complete output from command python setup.py egg_info:\r\n    sh: mysql_config: not found\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"<string>\", line 14, in <module>\r\n\r\n  File \"/home/zjm1126/zjm_test/mysite/build/mysql-python/setup.py\", line 15, in <module>\r\n\r\n    metadata, options = get_config()\r\n\r\n  File \"setup_posix.py\", line 43, in get_config\r\n\r\n    libs = mysql_config(\"libs_r\")\r\n\r\n  File \"setup_posix.py\", line 24, in mysql_config\r\n\r\n    raise EnvironmentError(\"%s not found\" % (mysql_config.path,))\r\n\r\nEnvironmentError: mysql_config not found\r\n\r\n----------------------------------------\r\nCommand python setup.py egg_info failed with error code 1\r\nStoring complete log in /home/zjm1126/.pip/pip.log\r\n(mysite)zjm1126@zjm1126-G41MT-S2:~/zjm_test/mysite$ pip install mysql-python\r\nDownloading/unpacking mysql-python\r\n  Running setup.py egg_info for package mysql-python\r\n    sh: mysql_config: not found\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 14, in <module>\r\n      File \"/home/zjm1126/zjm_test/mysite/build/mysql-python/setup.py\", line 15, in <module>\r\n        metadata, options = get_config()\r\n      File \"setup_posix.py\", line 43, in get_config\r\n        libs = mysql_config(\"libs_r\")\r\n      File \"setup_posix.py\", line 24, in mysql_config\r\n        raise EnvironmentError(\"%s not found\" % (mysql_config.path,))\r\n    EnvironmentError: mysql_config not found\r\n    Complete output from command python setup.py egg_info:\r\n    sh: mysql_config: not found\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"<string>\", line 14, in <module>\r\n\r\n  File \"/home/zjm1126/zjm_test/mysite/build/mysql-python/setup.py\", line 15, in <module>\r\n\r\n    metadata, options = get_config()\r\n\r\n  File \"setup_posix.py\", line 43, in get_config\r\n\r\n    libs = mysql_config(\"libs_r\")\r\n\r\n  File \"setup_posix.py\", line 24, in mysql_config\r\n\r\n    raise EnvironmentError(\"%s not found\" % (mysql_config.path,))\r\n\r\nEnvironmentError: mysql_config not found\r\n\r\n----------------------------------------\r\nCommand python setup.py egg_info failed with error code 1\r\nStoring complete log in /home/zjm1126/.pip/pip.log\r\n```\r\n\r\n根据[stackoverflow](https://stackoverflow.com/questions/5178292/pip-install-mysql-python-fails-with-environmenterror-mysql-config-not-found)解决问题\r\n\r\n- `sudo apt-get install libmysqlclient-dev`\r\n\r\n- `sudo apt install default-libmysqlclient-dev`\r\n\r\n# 本机启动网站\r\n\r\n- `cd ~/site/mysite`\r\n\r\n- `python manage.py runserver`\r\n\r\n得到以下报错：\r\n\r\n```sh\r\nPerforming system checks...\r\n\r\nException ignored in thread started by: <function check_errors.<locals>.wrapper at 0x7f9952d33940>\r\nTraceback (most recent call last):\r\n  File \"/home/herschel/.virtualenvs/blog/lib/python3.8/site-packages/django/utils/autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/home/herschel/.virtualenvs/blog/lib/python3.8/site-packages/django/core/management/commands/runserver.py\", line 120, in inner_run\r\n    self.check(display_num_errors=True)\r\n  File \"/home/herschel/.virtualenvs/blog/lib/python3.8/site-packages/django/core/management/base.py\", line 410, in check\r\n    raise SystemCheckError(msg)\r\ndjango.core.management.base.SystemCheckError: SystemCheckError: System check identified some issues:\r\n\r\nERRORS:\r\n?: (staticfiles.E002) The STATICFILES_DIRS setting should not contain the STATIC_ROOT setting.\r\n\r\nSystem check identified 1 issue (0 silenced).\r\n\r\n```\r\n\r\n这可能是由于生产环境的 settings.py 和开发环境不一致导致的，所以修改 settings.py\r\n\r\n`nvim ~/site/mysite/mysite/settings.py`\r\n\r\n```python\r\n    import os\r\n\r\n    # Build paths inside the project like this: os.path.join(BASE_DIR, ...)\r\n    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\r\n\r\n    # Quick-start development settings - unsuitable for production\r\n    # See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/\r\n\r\n    # SECURITY WARNING: keep the secret key used in production secret!\r\n    SECRET_KEY = \'=k)4amu9#)&)=4^xz$_e$jr&#fkv2-y&@di(^7euco_j#mg!o=\'\r\n\r\n    # SECURITY WARNING: don\'t run with debug turned on in production!\r\n    DEBUG = True\r\n\r\n    ...\r\n    ...\r\n\r\n    import sys\r\n    if sys.argv[1] != \'runserver\':\r\n        STATIC_ROOT = os.path.join(BASE_DIR, \'static/\')\r\n```\r\n\r\n`python manage.py runserver`\r\n\r\n```sh\r\n    python manage.py runserver\r\n    Performing system checks...\r\n\r\n    System check identified no issues (0 silenced).\r\n    October 20, 2021 - 13:27:40\r\n    Django version 2.0, using settings \'mysite.settings\'\r\n    Starting development server at http://127.0.0.1:8000/\r\n    Quit the server with CONTROL-C.\r\n```\r\n\r\n现在可以看到正常启动了！','2021-10-20 15:24:33.217254','2021-10-20 16:11:03.653644',1,4),(146,'面向对象','# 封装\r\n成员变量私有化，提供公共的getter和setter给外界去访问成员变量\r\n\r\n## class和struct\r\nc++中class和struct就是类，唯一的区别的是 class 定义的类对象，默认情况下成员变量和方法是私有的\r\n\r\n```c++\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nstruct Person {\r\n    private:\r\n        int m_age;\r\n    public:\r\n        void setAge(int age) {\r\n            if (age <= 0) return;\r\n            m_age = 1\r\n        } else {\r\n            m_age = age\r\n        }\r\n\r\n        int getAge() {\r\n            return m_age;\r\n        }\r\n};\r\n\r\nint main() {\r\n    Person person;\r\n    // person.m_age = -4 访问不到\r\n    person.setAge(-4);\r\n    getchar(); // 等待直到输入一个字符\r\n    return 0;\r\n} \r\n```\r\n\r\n# 内存空间的布局\r\n每个应用都有自己独立的内存空间，其内存空间一般都有以下几大区域\r\n\r\n1. 代码段（代码区）\r\n用于存放代码\r\n\r\n2. 数据段（全局区）\r\n用于存放全局变量\r\n\r\n3. 栈空间\r\n用于存放局部变量等，每调用一个函数就会给它分配一段连续的栈空间，等函数调用完成之后释放栈空间\r\n自动分配和回收\r\n\r\n4. 堆空间\r\n需要主动去申请和释放\r\n在程序运行过程中，为了能自由控制内存的生命周期、大小，会经常使用堆空间的内存\r\n\r\n```c++\r\n  \r\n#include <iostream>\r\nusing namespace std;\r\n\r\nvoid test() {\r\n    int *p = (int*)malloc(4); // 从堆空间中获取4个字节的内存空间，返回连续空间的首内存地址\r\n    *p = 10;\r\n    free(p); // 堆空间必须手动释放\r\n\r\n    char *t = new char[4]\r\n    delete[] t;\r\n}\r\nint main() {\r\n    test();\r\n    getchar();\r\n    return 0;\r\n}\r\n\r\n```\r\n\r\n# 堆空间的初始化\r\n## malloc和new的区别\r\nmalloc不会初始化对象，而new会\r\n\r\n```c++\r\n#include<iostream>\r\nusing namespace std;\r\n\r\nvoid test() {\r\n    int *p0 = new int(); // 会初始化\r\n    int *p1 = new int[3]; // 不会初始化\r\n    int *p2 = new int[3](); // 会初始化\r\n    int *p3 = new int[3]{5}; // 将数组首位初始化为5，其他仍为0\r\n    cout << *p0 << endl; // 输出\r\n}\r\nint main() {\r\n    int *p = (int*)malloc(sizeof(int)*10) // 申请40个字节的堆空间\r\n    *p = 1; // 将第一个字节地址赋值为1\r\n    // 从p地址开始的连续4个字节中的每一个字节都设置为1\r\n    // memset(p, 1, 4)\r\n    // 00000001 00000001 00000001 00000001\r\n\r\n\r\n    // 将四个字节设置为1\r\n    // 00000000 00000000 00000000 00000000\r\n    test()\r\n    getchar;\r\n    return 0;\r\n}\r\n```\r\n# 对象内存\r\n对象的内存可以放到全局区，堆空间或者栈空间','2021-10-20 16:41:25.987714','2021-10-20 16:41:25.987751',1,10),(147,'认识TypeScript','# TypeScript的介绍\r\nTypeScript是一种有微软开发的开源，跨平台的编程语言，最终会被编译成为JavaScript代码。\r\n\r\n2012年10月，微软发布了首个公开版本的TypeScript，2013年6月19日，在经历到了一个预览版之后微软正式发布了正式版TypeScript.\r\n\r\nTypeScript的作者是安德斯-海尔斯伯格，C#的首席架构师，它是开源和跨平台的编程语言。\r\n\r\nTypeScript扩展了JavaScript的语法，所以任何现有的JavaScript程序可以运行在TypeScript环境中。\r\n\r\nTypeScript是为大型应用的开发而设计，并且可以编译为JavaScript。\r\n\r\nTypeScript是JavaScript的一个超集，主要提供了类型系统和对ES6+的支持，它由Microsoft开发，代码开源于Github上。\r\n\r\n# TypeScript的特点\r\n始于JavaScipt,归于JavaScript\r\nTypeScript可以编译出纯净、简洁的JavaScript代码，并且可以运行在任何浏览器上，Node.js环境中和任何支持ECMAScript3（或更高版本）的JavaScript引擎中。\r\n\r\n强大的类型系统\r\n类型系统允许JavaScript开发者在开发JavaScript应用程序是使用高效的开发工具和常用操作，比如静态检查和代码重构。\r\n\r\n先进的JavaScript\r\nTypeScript提供最新的和不断发展的JavaScript特性，包括那些来自2015年的ECMAScript和未来的提案中的特性，比如异步功能和Decrators，以帮助建立健壮的组件。\r\n\r\n# 小结\r\nTypeScript在社区的流行度越来越高，它非常适用于一些大型项目，也非常适用于一些基础库，极大地帮助我们提升了开发效率和体验。\r\n\r\nTypeScript的安装\r\n命令行如下，全局安装TypeScript\r\n\r\n`npm i -g typescript`\r\n安装完之后，输入以下命令查看是否安装成功：\r\n\r\n`tsc -V`\r\n类型注解\r\n类型注解是一种轻量级的为函数或者变量添加的约束。\r\n\r\n```typescript\r\n(()=>{\r\n    function showMsg(msg:string) {\r\n       return \"hello,\" + msg\r\n    }\r\n    let msg = \"迪儿\"\r\n    console.log(showMsg(msg))\r\n })()\r\n```\r\n\r\n# 接口\r\n接口是一种能力， 一种约束。\r\n\r\n```typescript\r\n(()=>{\r\n    // define an interface\r\n    interface IPerson {\r\n        firstName: string\r\n        lastName:  string\r\n    }\r\n    // print name\r\n    function showFullName(person:IPerson) {\r\n        return person.firstName + \'_\' + person.lastName\r\n    }\r\n    // define an object\r\n    const person = {\r\n        firstName: \'东方\'\r\n        lastName:  \'不败\'\r\n    }\r\n    console.log(showFullName(person))\r\n })()\r\n```','2021-10-20 19:18:34.490077','2021-10-20 19:18:34.490111',1,14),(148,'认识JVM','# JVM的整体结构\r\nHotSpot VM是目前市面上高性能虚拟机的代表作之一。\r\n它采用解释器与即时编译器并存的架构。\r\n在今天，Java程序的运行性能早已脱胎换骨，已经达到了可以和c/c++程序一较高下的地步。\r\nJVM的整体结构\r\n![JVM的整体结构](/media/editor/JVM_STRUCTURE_20211020192458047130.png \"JVM的整体结构\")\r\n\r\n# JVM的架构模型\r\nJava编译器输入的指令流基本上是一种基于栈的指令集架构,另外一种指令集架构则是基于寄存器的指令集架构。\r\n\r\n区别:\r\n\r\n基于栈式架构的特点：\r\n\r\n设计和实现更加简单，适用于资源受限的系统；\r\n避开了寄存器的分配难题，使用零地址指令方式分配；\r\n指令流中的指令大部分是零地址指令，其执行过程依赖于操作栈。指令集更小，编译器容易实现；\r\n不需要硬件支持，可移植性更好，更好实现跨平台。\r\n基于寄存器架构的特点：\r\n\r\n典型的应用是x86的二进制指令集：比如传统的PC以及Andriod的Davlik虚拟机。\r\n指令集架构则完全依赖硬件，可移植性差。\r\n性能优秀和执行更高效。\r\n花费更少的指令去完成一项操作。\r\n在大部分情况下，基于寄存器架构的指令集往往都以一地址指令、二地址指令和三地址指令为主，而基于栈式架构的指令集却是以零地址指令为主。\r\n# JVM的生命周期\r\n虚拟机的启动\r\nJava虚拟机的启动是通过引导类加载器（bootstrap class loader）创建一个初始类（initail class）来完成的，这个类是由虚拟及的具体实现指定的。\r\n虚拟机的执行\r\n一个运行中的Java虚拟机有一个清晰的任务：执行Java程序；\r\n程序开始执行时它才运行，程序结束时它就停止；\r\n执行一个所谓的Java程序的时候，真真正正在执行的是一个叫做Java虚拟机的进程。\r\n虚拟机的退出\r\n有如下几种情况：\r\n程序正常执行结束\r\n程序在执行过程中遇到了异常或者错误而异常终止\r\n由于操作系统出现错误而导致Java虚拟机进程终止\r\n某线程调用Runtime类或者System类的exit方法，或Runtime类的halt方法，并且Java安全管理器也允许这次exit或halt操作\r\n除此之外，JNI（Java Native Interface）规范描述了用JNI Invocation API来加载或者卸载Java虚拟机时，Java虚拟机的退出情况。\r\n# JVM发展历程\r\n## Sun Classic VM\r\n早在1996年Java1.0版本的时候，Sun公司发布了一款名叫Sun Classic VM的Java虚拟机，它同时也是世界上第一款商用Java虚拟机,JKD1.4时完全被淘汰。\r\n这款虚拟机内部只提供解释器\r\n虚拟机在解释运行字节吗文件的时候，可以只使用解释器或者JIT（即时编译器）\r\n如果使用JIT编译器，就需要进行外挂。但是一旦使用了JIT编译器，JIT就会接管虚拟机的执行系统。解释器就不再工作。解释器和编译器不能配合工作。\r\n现在hotspot内置了此虚拟机。\r\n## Exact VM\r\n为了解决上一个虚拟机问题，在jdk1.2时，sun 提供了此虚拟机\r\nExact Memory Management: 准确式内存管理\r\n也可以叫Non-Conservative/Accurate Memory Management\r\n虚拟机可以知道内存中某个为之的数据具体是什么类型。\r\n具体被现代高性能虚拟机的雏形\r\n热点探测\r\n编译器与解释器混合工作模式\r\n只在Solaris平台短暂使用，其他平台还是classic VM\r\n英雄气短，后被Hotspot虚拟机代替\r\n## HotSpot VM\r\nHotSpot历史\r\n\r\n最初由一家名为“Longview Technologies”的小公司设计\r\n1997年，此公司被Sun收购；2009年，Sun公司被Oracle收购。\r\nJDK1.3时，HotSpot VM成为默认虚拟机。\r\n目前Hotspot占有绝对的市场地位，称霸武林\r\n\r\n不管是现在仍在广泛使用的JDK6，还是使用比例较多的JDK8中，默认的虚拟机都是Hotspot.\r\nSun/Oracle JDK 和 OpenJDK的默认虚拟机\r\n从服务器、桌面到移动端、嵌入式都有应用。\r\n\r\n名称中的HotSpot指的是它的热点代码探测技术。\r\n\r\n通过计数器找到最具编译价值的代码，触发即时编译或栈上替换\r\n通过编译器与解释器协同工作，在最优化的程序响应时间与最佳执行性能中取得平衡。\r\nBEA的JRockit\r\n专注于服务器端应用\r\n它可以不太关注程序启动速度，因此JRockit内部不包含解释器实现，全部代码都靠即时编译器编译后执行。\r\n大量的行业基准测试显示，JRockit是世界上最快的JVM.\r\n使用JRockit产品，客户已经体验到了显著的性能提高（一些超过了70%）和硬件成本的减少（达50%）。\r\n优势：全面的Java运行时解决方案组合。\r\nJRockit 面向延迟敏感型应用的解决方案 JRockit Real Time 提供以毫秒或微妙级别的 JVM 响应时间，适合财务、军事指挥、电信网络的需要。\r\nMissionControl 服务套件，它是一组以极低的开销来监控、管理和分析生产环境中的应用程序的工具。\r\n2008年，BEA 被 Oracle 收购。\r\nOracle表达了整合两大优秀虚拟机的工作，大致在JDK8中完成，整合的方式是在 HotSpot 的基础上，移植 JRockit 的优秀特性。\r\n高斯林：目前就职于谷歌，研究人工智能和水下机器人。\r\n## IBM 的 J9\r\n全称：IBM Technology for Java Virtual Machine,简称IT4J，内部代号：J9。\r\n市场定位与 HotSpot 接近，服务器端、桌面应用、嵌入式等多用途 VM\r\n广泛用于 IBM 的各种 Java 产品。\r\n目前， 有影响力的三大商用虚拟机之一, 也号称是世界上最快的 Java 虚拟机。\r\n2017年左右，IBM 发布了开源 J9 VM，命名为 OpenJ9，交给 Eclipse基金会管理，也称为 Eclipse OpenJ9','2021-10-20 19:21:59.608508','2021-10-20 19:26:20.608036',1,7),(149,'类加载子系统','# 类加载器与类的加载过程\r\n加载流程\r\n\r\n| 字节码文件  |类加载子系统   |   |   |\r\n| ------------ | ------------ | ------------ | ------------ |\r\n|  字节码文件 | 加载阶段  | 链接阶段  | 初始化  |\r\n|  字节码文件 | 引导类加载器  | 验证  | 初始化  |\r\n| 字节码文件 | 扩展类加载器  | 准备  | 初始化  |\r\n| 字节码文件  | 系统类加载器  | 解析  | 初始化  |\r\n\r\n\r\n类加载器子系统负责从文件系统或者网络中加载 Class 文件，class 文件在文件的开头有特定的文件标识\r\nClassLoader 只负责 class 文件的加载，至于它是否可以运行，则由 Execution Engine 决定。\r\n加载的类信息存放与一块称为方法区的内存空间。除了类的信息外，方法区中还会存放运行时常量地信息，可能还包括字符串字面量和数字常量（这部分常量信息是 class 文件中常量池部分的内存映射。\r\n类加载器 ClassLoader 角色\r\n开始\r\nCar.class\r\nClassLoader\r\n加载并初始化\r\nCar Class\r\n实例化\r\nCar实例(car1,car2,...)\r\n1. class file 存在于本地硬盘上，可以理解为设计师画在纸上的模板，而最终这个模板在执行的时候是要加载到 JVM 当中来根据这个文件实例化出 n 个一模一样的实例。\r\n2. class file 加载到 JVM 中，被称为 DNA 元数据模板，放在方法区。\r\n3. 在 .class 文件-> JVM -> 最终成为元数据模板，此过程就要一个运输工具（类加载器 ClassLoader），扮演一个快递员的角色。\r\n\r\n# 类的加载过程\r\n代码\r\n```java\r\npackage com.herschel.java\r\n\r\npublic class HelloLoader{\r\n    public static void main(String[] args){\r\n        System.out.println(\"谢谢 ClassLoader 加载我...\")\r\n        System.out.println(\"你的大恩大德，我下辈子来报！\")\r\n    }\r\n}\r\n```\r\n流程\r\n开始\r\n装载类 HelloLoader 了吗？\r\n链接\r\n初始化 HelloLoader\r\n调用 HelloLoader.main()\r\n结束\r\nClassLoader 装载顺利\r\n抛出异常\r\nyes\r\nno\r\nyes\r\nno\r\n全流程\r\n加载 Loading\r\n验证 Verification\r\n准备 Preparation\r\n剖析 Resolution\r\n初始化 Initialization\r\n\r\n# 加载（Loading）\r\n\r\n1. 通过一个类的全限定名获取定义此类的二进制字节流\r\n2. 将这个字节流所代表的静态存储结构转化为方法区的运行时数据结构\r\n3. 在内存中生成一个代表这个类的 java.lang.Class 对象，作为方法区这个类的各种数据的访问入口\r\n\r\n# 链接（Linking）\r\n## 验证（Verify）\r\n目的在于确保 class 文件的字节流中包含信息符合当前的虚拟机要求，保证被加载类的正确性，不会危害虚拟机自身安全。\r\n主要包括四种验证，文件格式验证，元数据验证，字节码验证，符号引用验证。\r\n## 准备（Prepare）\r\n为类变量分配内存并且设置该类变量的默认初始值，即零值。\r\n这里不包含用 final 修饰的 static, 因为 final 在编译的时候就会分配了，准备阶段会显示初始化。\r\n这里不会为实例变量分配初始化, 类变量会分配在方法区中，而实例变量是会随着对象一起分配到 Java 堆中。\r\n## 解析（Resole）\r\n将常量池中的符号引用转换为直接引用的过程\r\n事实上，解析操作往往会伴随着 JVM 在执行完初始化之后再执行。\r\n符号引用就是一组符号来描述所引用的目标。符号引用的字面量形式明确定义在《Java虚拟机规范》的 class 文件格式中。直接引用就是直接指向目标的指针、相对偏移量或一个间接定位到目标的句柄。\r\n解析动作主要针对类或者接口、字段、类方法、接口方法、方法类型等，对应常量池中的 CONSTANT_Class_info、CONSTANT_Fieldref_info、CONSTANT_Methodref_info等。\r\n## 初始化\r\n初始化阶段就是执行类构造器方法<clinit>()的过程。\r\n此方法不需要定义，是 javac 编译器自动收集类中的所有类变量的赋值动作和静态代码块中的语句合并而来。\r\n构造器方法中指令按语句在源文件中出现的顺序执行。\r\n<clinit>()不同于类的构造器。（关联：构造器是虚拟机视角下的<init>())\r\n若该类具有父类，JVM 会保证子类的<clinit>()执行前，父类的<clinit>()已经执行完毕。\r\n虚拟机必须保证一个类的<clinit>()方法在多线程下被同步加锁。\r\n# 几种类加载器\r\n类加载器分为引导类加载器以及自定义加载器\r\n自定义加载器又分为系统加载器，扩展类加载器以及自己写的加载器\r\n类加载器分类：\r\n![类加载器分类](/media/editor/ClassLoader_20211020194031649570.png \"类加载器分类\")\r\n\r\n```java\r\npublic class ClassLoaderTest{\r\n    public static void main(String[] args) {\r\n        // 获取系统类加载器\r\n        ClassLoader systemClassLoader = ClassLoader.getSystemClassLoader();\r\n        System.out.println(systemClassLoader); // sun.misc.launcher$AppClassLoader@18b4aac2\r\n\r\n\r\n        // 获取其上层：扩展类加载器\r\n        ClassLoader extClassLoader = systemClassLoader.getParent();\r\n        System.out.println(extClassLoader); // sun.misc.launcher$ExtClassLoader@1540e19d\r\n\r\n\r\n        // 获取其上层：获取不到引导类加载器\r\n        ClassLoader bootstrapClassLoader = extClassLoader.getParent();\r\n        System.out.println(bootstrapClassLoader); // null\r\n    }\r\n\r\n\r\n        // 对于用户自定义类来说，默认使用系统类加载器进行加载\r\n        ClassLoader classLoader = classLoaderTest.class.getClassLoader();\r\n        System.out.println(classLoader); // sun.misc.launcher$AppClassLoader@18b4aac2\r\n\r\n        // String类使用引导类加载器进行加载--> Java 的核心类库都是使用引导类加载器进行加载的\r\n        ClassLoader classLoader1 = String.class.getClassLoader();\r\n        System.out.println(classLoader1); // null\r\n}\r\n```\r\n# 虚拟机自带的加载器\r\n1. 启动类加载器（引导类加载器，Bootstrap ClassLoader）\r\n这个类加载使用c/c++语言实现的,嵌套在 JVM 内部\r\n它用来加载 Java 的核心库（JAVA_HOME/jre/lib/rt.jar、resources.jar 或 sun.boot.class.path 路径下的内容），用于提供 JVM 自身需要的类\r\n并不继承 java.lang.ClassLoader，没有父加载器。\r\n加载扩展类和应用类加载器，并指定为他们的父类加载器。\r\n处于安全考虑，Bootstrap 启动类加载器只加载包名为 java、javax、sun 等开头的类。\r\n  \r\n2. 扩展类加载器（Extention ClassLoader）\r\nJava 语言编写，由 sun.misc.launcher$ExtClassLoader 实现\r\n派生于 ClassLoader 类\r\n父类加载器为启动类加载器\r\n从 java.ext.dirs 系统属性所指定的目录中加载类库，或从 JDK 的安装目录的 jre/lib/ext 子目录（扩展目录）下加载类库。如果用户创建的 JAR 放在此目录下，也会自动由扩展类加载器加载。\r\n\r\n3. 应用程序类加载器（系统类加载器，AppClassLoader）\r\njava 语言编写，由 sun.misc.launcher$AppClassLoader 实现\r\n派生于 ClassLoader 类\r\n父类加载器为扩展类加载器\r\n它负责加载环境变量 classpath 或系统属性 java.class.path 指定路径下的类库\r\n该类加载是程序中默认的类加载器，一般类说，java 应用的类都是由它来完成加载\r\n通过 ClassLoader#getSystemClassLoader() 方法可以获取到该类加载器','2021-10-20 19:41:10.160221','2021-10-20 20:04:40.234303',1,7),(150,'关于classLoader','# 关于classLoader\r\nClassLoader 类，它是一个抽象类，其后所有的类加载器都继承自 ClassLoader (不包括启动类加载器)。\r\n概览\r\n\r\n|方法名称|	描述|\r\n|-------------- | -------------- |\r\n|getParent()|	返回该类加载器的超类加载器|\r\nloadClass(String name)|	加载名为 name 的类，返回结果为 java.lang.Class 类的实例|\r\nfindClass(String name)|	查找名为 name 的类，返回结果为 java.lang.Class 类的实例|\r\nfindLoadedClass(String name)|	查找名为 name 的已经被加载过的类，返回结果为 java.lang.Class 类的实例|\r\ndefineClass(String name,byte[] b, int off, int len)|	把字节数组中 b 的内容转换为一个 Java 类，返回结果为 java.lang.Class 类的实例|\r\nfindLoadedClass(String name)|	查找名为 name 的已经被加载过的类，返回结果为 java.lang.Class 类的实例|\r\n\r\n# 获取 classLoader 的途径\r\n\r\n1. 获取当前类的 classLoader\r\n`class.getClassLoader()`\r\n\r\n2. 获取当前线程上下文的 ClassLoader\r\n`Thread.currentThread().getContextClassLoader()`\r\n\r\n3. 获取系统的 ClassLoader\r\n`ClassLoader.getSystemClassLoader()`\r\n\r\n4. 获取调用者的 ClassLoader\r\n`DriverManager.getCallerClassLoader()`\r\n\r\n```java\r\npublic classLoaderTest {\r\n    public static void main (String[] args) {\r\n        try{\r\n            ClassLoader classLoader = Class.forName(\"java.lang.String\").getClassLoader();\r\n            System.out.println(classLoader);\r\n\r\n            ClassLoader classLoader1 = Thread.currentThread.getContextClassLoader();\r\n            System.out.println(classLoader1);\r\n\r\n            ClassLoader classLoader2 = ClassLoader.getSystemClassLoader.getParent();\r\n            System.out.println(classLoader2);\r\n        }catch(ClassNotFountException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n# 双亲委派机制\r\n## 简介\r\n\r\nJava虚拟机对 class 文件采取的是按需加载的方式，也就是说当需要使用该类时才将它的 class 文件加载到内存中生成 class 对象。而且加载某个 class 文件时，Java虚拟机采用的是双亲委派模式，即把请求交给父类处理，它是一种任务委派模式。\r\n工作原理\r\n双亲委派机制:\r\n![双亲委派机制](/media/editor/双亲委派机制_20211020200636418220.png \"双亲委派机制\")\r\n\r\n1. 如果一个类加载器收到了类加载请求，他不会自己先去加载，而是把这个请求委托给父类的加载器去执行；\r\n\r\n2. 如果父类加载器还存在其父类加载器，则进一步向上委托，依次递归；最终请求将会到达顶层的启动类加载器；\r\n\r\n3. 如果父类加载器可以完成类加载任务，就成功返回，否则才尝试自己加载，这就是双亲委派机制。\r\n\r\n## 优势\r\n\r\n1.避免类的重复加载\r\n\r\n2. 保护程序安全，防止核心 API 被篡改\r\n  > 自定义类 java.lang.String\r\n  > 自定义类 java,lang.ShkStart\r\n\r\n## 沙箱安全机制\r\n\r\n自定义 String 类，但是在加载自定义 String 类的时候会率先使用引导类加载器加载，而引导类加载器在加载的过程中会先加载jdk自带的文件（rt.jar包中的 java/lang/String.class），报错信息说没有main方法，就是因为加载的是 rt.jar 包中的 String 类。这样可以保证对 java 核心源代码的保护，这就是沙箱安全机制。\r\n\r\n# 其他\r\n\r\n在 JVM 中表示两个 class 对象是否是同一个类存在两个必要条件：\r\n\r\n类的完整类名必须一致，包括包名。\r\n加载这个类的 ClassLoader（指 ClassLoader 实例对象）必须相同。\r\n换句话说，在 JVM 中，即使这两个类对象来源于同一个Class文件，被同一个虚拟机所加载，但只要加载他们的 ClassLoader 实例对象不同，那么这两个类对象也是不相等的。\r\n\r\n# 类加载器的引用\r\nJVM 必须知道一个类型是由启动加载器加载的还是由用户类加载器加载的。如果一个类型是由用户类加载器加载的，那么 JVM 会将这个类加载器的一个引用作为类型信息的一部分包存在方法区中。当解析一个类型到另一个类型的引用的时候，JVM 需要保证这两个类型的类加载器是相同的。\r\n类的主动使用和被动使用\r\nJava 程序对类的使用方式分为：主动使用和被动使用。\r\n主动使用，又分为7种情况：\r\n\r\n1. 创建类的实例\r\n\r\n2. 访问某个类或接口的静态变量，或者对该静态变量赋值\r\n\r\n3. 调用类的静态方法\r\n\r\n4. 反射（比如：Class.forName(‘java.lang.String’)\r\n\r\n5. 初始化一个类的子类\r\n\r\n6. Java 虚拟机启动时被标明为启动类的类\r\n\r\n7. JDK7 开始提供的动态语言支持：java.lang.invoke.MethodHandle实例的解析结果、REF_getStatic、REF_invokeStatic 句柄对应的类没有初始化，则初始化\r\n\r\n除了以上七种情况，其他使用 Java 类的方式都被看作是对类的被动使用，都不会导致类的初始化。','2021-10-20 20:05:07.363540','2021-10-20 20:07:36.052327',1,7),(151,'运行时数据区概述及线程','# 运行时数据区内部结构\r\n![运行时数据区内部结构](/media/editor/运行时数据区_20211020201051586502.png \"运行时数据区内部结构\")\r\n\r\nJava虚拟机定义了若干种程序运行期间会使用到的运行时数据区，其中有一些会随着虚拟机的启动而创建，随着虚拟机退出而销毁(与虚拟机进程对应)。另外一些则是与线程一一对应的，这些与线程对应的数据区会随着线程开始和结束而创建和销毁。\r\n\r\n灰色的为线程私有的红色的为多个线程共享的，即：\r\n\r\n每个线程：独立包括程序计数器、栈、本地栈。\r\n线程间共享：堆、堆外内存（永久代或元空间、代码缓存）\r\n![线程拥有的内存结构](/media/editor/线程拥有的内存结构_20211020201256215281.png \"线程拥有的内存结构\")\r\n\r\n# 关于线程间共享的说明\r\n每个 JVM 只有一个 Runtime 实例。即为运行时环境，相对与内存结构中间的那个框框：运行时环境。\r\n# 线程\r\n线程是一个程序里的运行单元。JVM 允许一个应用有多个线程并行的执行。\r\n\r\n在 HotSpot JVM 里，每个线程都与操作系统的本地线程直接映射。\r\n\r\n当一个 Java 线程准备好执行以后，此时一个操作系统的本地线程也同时创建，Java 线程执行终止后，本地线程也会被回收。线程回收之后，如果只有守护进程存活，则JVM也会终止。\r\n操作系统负责所有线程的安排调度到任何一个可用的 CPU 上。一旦本地线程初始化成功，它就会调用Java线程中的 run() 方法。\r\n\r\n# JVM 系统线程\r\n如果你使用 jconsole 或者是任何一个调试工具，都能看到在后台有许多线程在运行。这些后台线程不包括调用 public static void main(String[] args) 的 main 线程以及所有这个 main 线程自己创建的线程。\r\n这些主要的后台系统线程在 HotSpot JVM 里主要是以下几个：\r\n虚拟机线程：这种线程的操作是需要 JVM 达到安全点才会出现。这些操作必须在不同的线程中发生的原因是他们都需要 JVM 达到安全点，这样堆才不会变化。这种线程的执行类型包括\"stop-the-world\"的垃圾收集、线程栈收集、线程挂起以及偏向锁撤销。\r\n周期任务线程：这种线程是时间周期事件的体现（比如中断），他们一般用于周期性操作的调度执行。\r\nGC 线程：这种线程对在 JVM 里不同种类的垃圾收集行为提供了支持。\r\n编译线程：这种线程在运行时会将字节码编译成本地代码。\r\n信号调度线程：这种线程接收信号并发送给 JVM ，在它内部通过调用适当的方法进行处理。','2021-10-20 20:11:16.361245','2021-10-20 20:16:03.900352',1,7),(152,'程序计数器','# PC Register 介绍\r\n\r\n![程序计数器](/media/editor/程序计数器_20211021095748891940.png \"程序计数器\")\r\n\r\nJVM 中的程序计数寄存器（Program Counter Register)中，Register 的命名源于 cpu 的寄存器，寄存器存储指令相关的现场信息。CPU 只有把数据装载到寄存器才能够运行。\r\n这里，并非是广义上所指的物理寄存器，或许将其翻译为 PC 计数器（或指令计数器）会更加贴切（也称为程序钩子），并且也不容易引起一些不必要的误会。JVM 中的 PC 寄存器是对物理 PC 寄存器的一种抽象模拟。\r\n它是一块很小的内存空间，几乎可以忽略不计，也是运行速度最快的区域。\r\n在 JVM 规范中，每个线程都有它自己的程序计数器，是线程私有地，生命周期与线程的生命周期保持一致。\r\n任何时间一个线程都只有一个方法在执行，也就是所谓的当前方法。程序计数器会存储当前线程正在执行的 Java 方法的 JVM 地址：或者，如果是在执行 native 方法，则是未指定指（ undefined ）。\r\n它是程序控制流的指示器，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。\r\n字节码解释器工作时就是通过改变这个计数器的指来选取下一条需要执行的字节码指令。\r\n它是唯一一个在 Java 虚拟机规范中没有规定任何 OutOtMemoryError 情况的区域。\r\n\r\n# 程序计数器作用\r\n\r\n![程序计数器作用](/media/editor/程序寄存器作用_20211021095834475832.png \"程序计数器作用\")\r\n\r\nPC 寄存器用来存储指向下一条指令的地址，也即将要执行的指令代码。由执行引擎读取下一条指令。\r\n\r\n# 寄存器的使用举例\r\n\r\n## 示例\r\n```Java\r\npublic class PCRegisterTest{\r\n    public static void main(String[] args) {\r\n        int a = 10\r\n        int b = 20\r\n        int c = a + b\r\n        String s = \"abc\"\r\n        System.out.println(s)\r\n    }\r\n}\r\n```\r\n\r\n## PCRegister 调用过程\r\n\r\n![寄存器的使用](/media/editor/程序寄存器作用_20211021100023967838.png \"寄存器的使用\")\r\n\r\n# 两个常见问题\r\n使用PC寄存器存储字节码指令地址有什么用呢？\r\n\r\n1. 为什么使用PC寄存器记录当前线程的执行地址呢？\r\n\r\n  > 因为CPU需要不停的切换各个线程，这时候切换回来以后，就得知道接着从哪开始继续执行。\r\nJVM 的字节码解释器就需要通过改变 PC 寄存器的值来明确下一条应该执行什么样的字节码指令。\r\n\r\n2. PC 寄存器为什么会被设定为线程私有?\r\n\r\n  > 我们都知道所谓的多线程在一个特定的时间段内只会执行其中某一个线程的方法，CPU 会不停地做任务切换，这样必然导致经常中断或恢复，如何保证分毫无差呢？为了能够准确地记录各个线程正在执行的当前字节码指令地址，最好的办法自然是为每一个线程都分配一个 PC 寄存器，这样一来各个线程之间可以进行独立计算，从而不会出现相互干扰的情况。\r\n由于 CPU 时间片轮限制，众多线程在并发执行过程中，任何一个确定的时刻，一个处理器或者多核处理器中的一个内核，只会执行某个线程中的一条指令。\r\n这样必然导致经常中断或恢复，如何保证分毫无差呢？每个线程在创建后，都会产生自己的程序计数器和栈帧，程序计数器在各个线程之间互不影响。\r\n\r\n# CPU 时间片\r\n\r\nCPU 时间片即 CPU 分配给各个程序的时间，每个线程被分配一个时间段，称作它的时间片。\r\n在宏观上：我们可以同时打开多个应用程序，每个程序并行不悖，同时运行。\r\n但在微观上，由于只有一个 CPU ，一次只能处理程序要求的一部分，如何公平处理，一种方法就是引入时间片，每个程序轮流执行。','2021-10-21 09:52:18.041550','2021-10-21 10:01:18.511022',1,7),(153,'虚拟机栈','# 虚拟机栈概述\r\n由于跨平台性的设计，Java 的指令都是根据栈来设计的。不同平台 CPU 架构不同，所有不能设计为基于寄存器的。\r\n\r\n优点是跨平台，指令集小，编译器容易实现，缺点是性能下降，实现同样的功能需要更多的指令。\r\n\r\n# 内存中的栈和堆\r\n栈解决程序的运行问题，即程序如何执行，或者说如何处理数据。堆解决的是数据存储的问题，即数据怎么放、放在哪儿。\r\n# 虚拟机栈的基本内容\r\nJava 虚拟机栈是什么？\r\n\r\n  > Java 虚拟机栈（Java Virtual Machine Stack），早期也叫 Java 栈。每个线程在创建时，都会创建一个虚拟机栈，其内部保存一个个的栈帧（Stack Frame），对应者一次次的 Java 方法调用。\r\n  是线程私有的\r\n生命周期\r\n\r\n  > 生命周期和线程一致。\r\n\r\n作用\r\n\r\n  > 主管 Java 程序的运行，它保存方法的局部变量(8种基本数据类型、对象的引用地址)、部分结果，并参与方法的调用和返回。\r\n  > 局部变量 vs 成员变量（或属性）\r\n  > 基本数据类型 VS 引用类型变量（类、数据、接口）\r\n\r\n栈的特点（优点）\r\n\r\n  1. 栈是一种快速有效的分配存储方式，访问速度仅次于程序计数器。\r\n\r\n  2. JVM 直接对 Java 栈的操作只有两个：\r\n\r\n      > 每个方法执行，伴随着进栈（入栈、压栈）\r\n      > 执行结束后的出栈工作\r\n      \r\n  3. 对于栈来说不存在垃圾回收问题。\r\n\r\n栈中可能出现的异常\r\n\r\n  > Java 虚拟机规范允许**Java 栈的大小是动态的或者是固定不变的。**\r\n\r\n  1. 如果采用固定大小的 Java 虚拟机栈，那每一个线程的 Java 虚拟机栈容量可以在线程创建的时候独立选定。如果线程请求分配的栈容量超过 Java 虚拟机栈允许的最大容量， Java 虚拟机将会抛出一个 StackOverflowError 异常。\r\n  2. 如果 Java 虚拟机栈可以动态扩展，并且在尝试扩展的时候无法申请到足够的内存，或者在创建新的线程时没有足够的内存去创建对应的虚拟机栈，那 Java 虚拟机将会抛出一个 OutOtMemoryError 异常。\r\n\r\n设置栈内存大小\r\n\r\n  > 我们可以使用参数 -Xss 来设置线程的最大栈空间，栈的大小直接决定了函数调用的最大可达深度。\r\n  > eg: Xss256k\r\n\r\n# 栈中存储什么\r\n\r\n每个线程都有自己的栈，栈中的数据都是以**栈帧（Stack Frame）**的格式存在。\r\n在这个线程上正在执行的每个方法都各自对应着一个栈帧（Stack Frame）。\r\n栈帧是一个内存区块，是一个数据集，维系着方法在执行过程中的各种数据信息。\r\n\r\n# 栈运行原理\r\n\r\nJVM 直接对 Java 栈的操作只有两个，就是对栈帧的压栈和出栈，遵循 FILO、LIFO 原则。\r\n\r\n在一条活动线程中，一个时间点上，只会有一个活动的栈帧。即只有当前正在执行的方法的栈帧（栈顶栈帧）是有效的，这个栈帧被称为**当前栈帧**（Current Frame），与当前栈帧相对应的方法就是**当前方法**（Current Method），定义这个方法的类就是**当前类**（Current Class）。\r\n\r\n执行引擎运行的字节码指令只针对当前栈帧进行操作。\r\n\r\n如果在该方法中调用了其方法，对应的新的栈帧会被创建出来，放在栈的顶端，成为新的当前栈。\r\n\r\n![栈运行原理](/media/editor/栈运行原理_20211021102349912560.png \"栈运行原理\")\r\n\r\n不同线程中所包含的栈帧是不允许存在相互引用的，即不可能在一个栈帧之中引用另外一个线程的栈帧。\r\n\r\n如果当前方法调用了其他方法，方法返回之际，当前栈帧会传回此方法的执行结果给前一个栈帧，接着，虚拟机会丢弃当前栈帧，使得前一个栈帧重新成为当前栈帧。\r\n\r\nJava 方法有两种返回函数的方式，一种是正常的函数返回，使用`return`指令，另外一种是抛出异常，不管使用哪种方式，都会导致栈帧被弹出。\r\n\r\n# 栈帧的内部结构\r\n\r\n- 局部变量表（Local Variables）\r\n- 操作数栈（Operand Stack)（或表达式栈）\r\n- 动态链接（Dynamic Linking）（或指向运行时常量池的方法引用）\r\n- 方法返回地址（Return Address）（或方法正常退出或者异常退出的定义）\r\n- 一些附加信息\r\n\r\n![栈帧内部结构](/media/editor/栈帧内部结构_20211021102436482001.png \"栈帧内部结构\")\r\n\r\n## 局部变量表（Local variables）\r\n\r\n局部变量表也被称之为局部变量数组或者本地变量表\r\n\r\n**定义为一个数字数组，主要用于存储方法参数和定义在方法体内的局部变量**，这些数据类型包括各类基本数据类型、对象引用（Reference），以及 returnAddress 类型。\r\n\r\n由于局部变量表是建立在线程的栈上，是线程私有的数据，因此**不存在数据安全问题**。\r\n\r\n局部变量表所需的容量大小是在编译期确定下来的，并保存在方法的 Code 属性的 maximum local variables 数据项中。在方法运行期间是不会改变局部变量表的大小的。\r\n\r\n方法嵌套调用的次数由栈的大小决定。一般来说，栈越大，方法嵌套调用次数越多。对一个函数而言，它的参数和局部变量越多，使得局部变量表膨胀，它的栈帧就会越大，以满足方法调用所需传递的信息增大的需求。进而函数调用就会占有更多的栈空间，导致其嵌套调用次数就会减少。\r\n\r\n局部变量表中的变量只在当前方法调用中有效。在方法执行时，虚拟机通过使用局部变量表完成参数值到参数变量列表的传递过程。当方法调用结束之后，随着方法栈的销毁，局部变量表也会随之销毁。\r\n\r\n### 关于slot的理解\r\n\r\n局部变量表，最基本的存储单元是 slot（变量槽）\r\n\r\n局部变量表中存放编译期可知的各种基本数据类型（8种），引用类型、 returnAddress 类型的变量。\r\n\r\n在局部变量表里，**32位以内的类型只占有一个 slot（包括 returnAddress 类型）,64位的类型（long 和 double）占用两个 Slot。**\r\n\r\n  > byte、short、char 在存储前被转化为 int,boolean 也被转换为 int，0表示 false，非0表示 true。\r\n\r\n  > long 和 double 则占据两个 Slot。\r\n\r\n![slot](/media/editor/slot_20211021102529576727.png \"slot\")\r\n\r\nJVM 会为局部变量表中的每一个 slot 都分配一个访问索引， 通过这个索引即可成功的访问到局部变量表中指定的局部变量值。\r\n\r\n当一个实例方法被调用的时候，它的方法参数和方法体内部定义的局部变量就会**按照顺序被复制**到局部变量表中的每一个slot上。\r\n\r\n**如果需要访问局部变量表中一个64bit的局部变量值时，只需要使用前一个索引即可。**（比如：访问 long 或 double 类型变量。\r\n\r\n如果当前栈是由构造方法或者实例方法创建的，那么**该对象引用 this 将会存放在 index 为0的 slot 处，**其余的参数按照参数表顺序继续排列。\r\n\r\n### slot 的重复利用\r\n\r\n**栈帧中的局部变量表中的槽位是可以重用的**，如果一个局部变量过了其作用域，那么在其作用域之后申明的新的局部变量就很有可能会复用过期局部变量的槽位，从而达到节省资源的目的。\r\n\r\n### 局部变量与静态变量的对比\r\n\r\n参数表分配完毕之后，再根据方法内定义的变量的顺序和作用域分配。\r\n我们知道类变量表有两次初始化的机会，一次是在“准备阶段”，执行系统初始化，对类变量设置零值，另一次则是在“初始化”阶段，赋予程序员在代码中定义的出事值。\r\n和类变量初始化不同的是，局部变量表不存在系统初始化的过程，这意味着一旦定义了局部变量则必须人为的初始化，否则无法使用。\r\n\r\n```java\r\npublic void test(){\r\n    int i;\r\n    System.out.println(i);\r\n}\r\n```\r\n这样的代码是错误的，没有赋值不能使用。\r\n\r\n### 补充说明\r\n在栈帧中，与性能调优关系最为密切的部分就是前面提到的局部变量表。在方法执行时，虚拟机使用局部变量表完成方法的传递。\r\n局部变量表中的变量也是重要的垃圾回收根节点，只要被局部变量表中直接或间接引用的对象都不会被回收。\r\n\r\n## 操作数栈（Operand Stack）\r\n\r\n每一个独立的栈帧中除了包含局部变量表之外，还包含一个后进先出(Last-In_-First-Out)的操作数栈，也可以称之为表达式栈(Expression Stack)\r\n\r\n操作数栈，在方法执行过程中，根据字节码指令，在栈中写入数据或提取数据，即入栈/出栈。\r\n\r\n  > 某些字节码指令将值压入操作数栈，其余的字节码指令将操作数取出栈，使用他们后再把结果压入栈。\r\n\r\n  > 比如：执行复制、交换、求和等操作。\r\n\r\n操作数栈，主要用于保存计算过程的中间结果，同时作为计算过程中变量临时的存储空间。\r\n\r\n操作数栈就是 JVM 执行引擎的一个工作区，当一个方法刚开始执行的时候，一个新的栈帧也会随之被创建出来，这个方法的操作数栈是空的。\r\n\r\n每一个操作数栈都会拥有一个明确的栈深度用于存储数值，其所需的最大深度在编译期就定义好了，保存在方法的 Code 属性中，为 max__stack的值。\r\n\r\n栈中的任何一个元素都是可以任意的 Java 数据类型。\r\n\r\n  > 32 bit 的类型占用一个栈单位深度\r\n\r\n  > 64 bit 的类型占用两个栈单位深度\r\n\r\n操作数栈并非采用访问索引的方式来进行数据访问的，而是只能通过标准的入栈和出栈操作来完成一次数据访问。\r\n\r\n如果被调用的方法带有返回值的话，其返回值将会被压入当前栈帧的操作数栈中，并更新pc寄存器中下一条需要执行的字节码指令。\r\n\r\n操作数栈中元素的数据类型必须与字节码指令的序列严格匹配，这由编译器在编译期间进行验证，同时在类加载过程中的类检验阶段的数据流分析阶段要再次验证。\r\n\r\n另外，我们说 Java 虚拟机的解释引擎是基于栈的执行引擎，其中的栈指的就是操作数栈。\r\n\r\n### 栈顶缓存技术\r\n\r\n前面提过，基于栈式架构的虚拟机所使用的零地址指令更加紧凑，但完成一项操作的时候必然需要使用更多的入栈和出栈指令，这同时也就意味着需要更多的指令分配(instruction dispatch)次数和内存读写次数。\r\n\r\n由于操作数是存储在内存中的，因此频繁地执行内存读写操作必然会影响执行速度，为了解决这个问题，HotSpot JVM 的设计者们提出来栈顶缓存技术(ToS,Top-of-Stack Cashing), 将栈顶元素全部缓存在物理 CPU 的寄存器中，以此减低对内存的读写次数，提升执行引擎的执行效率。\r\n\r\n## 动态链接(或指向运行时常量的方法引用)\r\n\r\n每一个栈帧内部都包含一个执行运行是常量池中该栈帧所属方法的引用。包含这个引用的目的就是为了支持当前方法的代码能够实现动态链接。比如：invokedynamic 指令\r\n在 Java 源文件被编译到字节码文件中时，所有的变量和方法引用都作为符号引用(Symbolic Reference)保存在 class 文件的常量池里。比如：描述一个方法调用了另外的其他方法时，就是通过常量池中指向方法的符号引用来表示的，那么动态链接的作用就是为了将这些符号引用转换为调用方法的直接引用。\r\n\r\n### 为什么需要常量池呢？\r\n\r\n常量池的作用，就是为了提供一些符号和常量，便于指令的识别。\r\n\r\n### 方法的调用\r\n\r\n在JVM中，将符号引用转换为调用方法的直接引用与方法的绑定机制有关。\r\n\r\n静态链接：\r\n\r\n  > 当一个字节码文件被装载进JVM 内部时，如果被调用的目标方法在编译器可知，且运行期保持不变时。这种情况下将调用方法的符号引用转换为直接引用的过程称之为静态链接。\r\n\r\n动态链接：\r\n\r\n  > 如果被调用的方法在编译期无法被确定下来，也就是说，只能够在程序运行期将调用方法的符号引用转换为直接引用，由于这种引用转换过程具备动态性，因此也就被称之为动态链接。\r\n对应的方法的绑定机制为：早期绑定和晚期绑定。绑定是一个字段、方法或者类在符号引用被替换为直接引用的过程，这仅仅发生一次。\r\n\r\n早期绑定：\r\n\r\n  > 早期绑定就是指被调用的目标方法如果在编译期可知，且运行期保持不变时，即可将这个方法与所属的类型进行绑定，这样一来，由于明确了被调用的目标方法究竟时哪一个，因此也就可以时哟偶能够静态链接的方式将符号引用转换为直接引用。\r\n晚期绑定：\r\n\r\n  > 如果被调用的方法在编译期无法被确定下来，只能够在程序运行期根据实际的类型绑定相关的方法，这种绑定方式就被称之为晚期绑定。\r\n随着高级与演的横空出世，类似于 java 一样的基于面向对象的编程语言如今越来越多，尽管这类编程语言在语法风格上存在一定的差别，但是他们彼此之间始终保持这一个共性，那就是支持封装、继承和多态等面向对象特性，既然这一类的编程语言具备多态特性，那么自然也就具备早期绑和晚期绑定两种绑定方式。\r\n\r\nJava 中任何一个普通的方法其实都具备虚函数的特征，他们相当于 C++ 语言中的虚函数（C++中则需要使用关键字 virtual 来显示定义）。如果在 Java 程序中不希望某个方法拥有虚函数的特征时，则可以使用关键字 final 来标记这个方法。\r\n\r\n###  非虚方法与虚方法\r\n非虚方法\r\n\r\n  > 如果方法在编译期就确定了具体的调用版本，这个版本在运行时是不可变的，这样的方法称为非虚方法。\r\n\r\n  > 静态方法、私有方法、final 方法、实例构造器、父类构造器、父类方法都是非虚方法。\r\n\r\n  > 其他方法称为虚方法。','2021-10-21 10:19:48.220697','2021-10-21 10:44:37.949483',1,7),(154,'4种方法调用指令','# 方法的调用：虚方法与非虚方法\r\n## 4种方法调用指令\r\n\r\n虚拟机中提供了以下几条方法调用指令：\r\n\r\n1. 普通调用指令：\r\n  > invokestatic: 调用静态方法，解析阶段唯一确定唯一方法版本\r\n  > invokespecial: 调用方法、私有及父类方法，解析阶段确定唯一方法版本\r\n  > invokevirtual: 调用所有虚方法\r\n  > invokeinterface: 调用接口方法\r\n\r\n2. 动态调用指令：\r\n  > invokedynamic: 动态解析处需要调用的方法，然后执行。\r\n\r\n前四条指令固化在虚拟机内部，方法的调用执行不可人为干预，而 invokedynamic 指令则支持由用户确定方法版本，其中 invokestatic 指令和 Invokespecial 指令调用的方法称为非虚方法，其余的(final修饰的除外)称为虚方法。\r\n\r\n# 方法的调用：关于 invokedynamic 指令\r\n\r\nJVM 字节码指令集一直比较稳定，一直到 Java7 中才增加了一个 invokedynamic 指令，这是**Java 为了实现「动态类型语言」支持而做的一种改进。**\r\n但是在 Java7 中并没有提供直接生成 invokedynamic 指令的方法，需要借助 ASM 这种底层字节码工具来产生 invokedynamic 指令。直到**Java8 的 Lambda 表达式的出现，invokedynamic 指令的生成，在 Java 中才有了直接的生成方式。**\r\nJava7 中增加的动态语言类型支持的本质式对 Java 虚拟机规范的修改，而不是对 Java 语言规则的修改，这一块相对来说比较复杂，增加了虚拟机中的方法调用，最直接的受益者就是运行在 Java 平台的动态语言的编译器。\r\n\r\n## 动态类型语言和静态类型语言\r\n\r\n动态类型语言和静态类型语言两者的区别在于对类型的检查是在编译期还是在运行期，满足前者就是静态类型语言，反之就是动态类型语言。\r\n说的再直白一点就是，**静态类型语言是判断变量自身的类型信息；动态类型语言是判断变量值的类型信息，变量没有类型信息，变量值才有类型信息。**这是动态语言的一个重要特征。\r\n\r\n# 方法的调用：方法重写的本质\r\n## Java 语言中方法重写的本质\r\n\r\n找到操作数栈顶的第一个元素所执行的对象的实际类型，记作 C 。\r\n如果在类型 C 中找到与常量中的描述符和简单名称都相符的方法，则进行访问权限校验，如果通过则返回这个方法的直接引用，查找过程结束；如果不通过，则返回 java.lang.IllegalAccessError 异常。\r\n否则，按照继承关系从下往上一次对 C 的各个父类进行第 2 步的搜索与验证过程。\r\n如果始终没有找到合适的方法，则抛出 java.lang.AbstractMethodError 异常。\r\n\r\n## IllegalAccessError 介绍：\r\n\r\n程序试图访问或修改一个属性或调用一个方法，这个属性或方法，你没有权限访问。一般的，这个会引起编译器异常。这个错误如果发生在运行时，就说明一个类发生了不兼容的改变。\r\n\r\n# 方法的调用：虚方法表\r\n\r\n在面向对象的编程中，会很频繁的使用动态分配，如果在每次动态分派的过程中都要重新在类的方法元数据中搜索合适的目标的话就可能影响到执行效率。因此，为了提高性能，JVM 采用在类的方法区建立一个虚方法表（ virtual method table ）（**非虚方法不会出现在表中**）来实现。使用索引表来代替查找。\r\n每个类中都有一个虚方法表，表中存放着各个方法的实际入口。\r\n那么虚方法表是什么时候被创建？\r\n虚方法表会在类加载的链接阶段被创建并开始初始化，类的变量初始值准备完成之后，JVM 会把该类的方法表也初始化完毕。\r\n![虚方法表](/media/editor/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doLzEzOTI1MTcxMzgvaW1nUmVwb3NpdG9yeUBtYXN0ZXIvaW1hZ2UtMjAyMDA1MDgxNzIwMjA2NDYucG5n_20211021133625993382.png \"虚方法表\")','2021-10-21 13:37:13.721764','2021-10-21 14:51:07.036547',1,7),(155,'动态导包和已导入的模块','# How to list imported modules\r\n\r\n- How to enumerate all imported modules?\r\n- E.g. I would like to get [‘os’,‘sys’] from this code:\r\n\r\n```python\r\nimport sys\r\nimport os\r\n```\r\n# Answer liked most\r\n- 所有加载模块都会出现在sys.moudles中\r\n\r\n```python\r\nimport sys\r\nsys.moudles.keys()\r\n```\r\n\r\n- An approximation of getting all imports for the current module only would be to inspect globals() for modules:\r\nimport types\r\n\r\n```python\r\ndef imports():\r\n    for name, val in globals.items():\r\n        if isinstance(val, types.MoudleType):\r\n            yield val.__name__\r\nimported_moudles = [i for i in imports()]\r\nprint(imported_moudles)\r\n```\r\n\r\n- This won’t return local imports, or non-moudle imports like from x import y. Note that this returns val.__name__ so you get the original module name if you used import moudle as alias; yield name instead if you want the alias.\r\n# dynamically import\r\n- 以下两种方式均可将变量或者包名的字符串传入，动态加载模块。\r\n\r\n  1. exec()\r\n  2. __import__()','2021-10-21 14:51:38.701148','2021-10-21 14:51:38.701179',1,5),(156,'方法返回地址','# 方法返回地址\r\n![方法返回地址](/media/editor/方法返回地址_20211021150049385785.png \"方法返回地址\")\r\n\r\n存放调用该方法的 pc 寄存器的值。\r\n\r\n一个方法的结束，有两种方式：\r\n\r\n1. 正常执行完成\r\n2. 出现未处理的异常，非正常退出\r\n\r\n无论通过哪种方式退出，在方法退出后都返回该方法被调用的位置，方法正常退出时，**调用者的 pc 寄存器的值作为返回地址，即调用该方法的指令的下一条指令的地址。**而通过异常退出的，返回地址是通过异常表来确定，栈帧中一般不会保存这部分信息。\r\n\r\n本质上，方法的退出就是当前栈帧出栈的过程。此时，需要恢复上层方法的局部变量表、操作数栈，将返回值压入调用者栈帧的操作数栈、设置 PC 寄存器值等，让调用者方法继续执行下去。\r\n\r\n当一个方法开始执行后，只有两种方式可以退出这个方法：\r\n\r\n1. 执行引擎遇到任意一个方法返回的字节码指令（return），会有返回值传递给上层的方法调用者，简称正常完成出口。\r\n\r\n  > 一个方法在正常调用完成之后究竟需要使用哪一个返回指令还需要根据方法返回值的实际数据类型而定。\r\n  > 在字节码指令中，返回指令包含 ireturn（当返回值是 boolean、byte、char、short和 int 类型的时候使用）、lreturn、freturn、dreturn 以及 areturn，另外还有一个 return 指令提供声明为 void 的方法、实例初始化方法、类和接口的初始化方法使用。\r\n\r\n2. 在方法执行的过程中遇到了异常，并且这个异常没有在方法内进行处理，也就是只要在本方法的异常表中没有搜索到匹配的异常处理器，就会导致方法退出，简称异常**完成出口**。\r\n方法执行过程中抛出异常时的异常处理，存储在一个异常处理表，方便在发生异常的时候找到处理异常的代码。\r\n\r\n# 本地方法\r\n\r\n## 本地方法接口的理解\r\n简单来讲，本地方法就是一个 Java 调用非 Java 代码的接口。一个 Native Method 是这样一个 Java 方法：该方法的实现由非 Java 语言完成，比如 C 。这个特征并非只有 Java 语言才有，比如在 C++ 中，你可以用 `extern \"C\"` 来告诉 C++ 编译器调用一个 C 的函数。\r\n在定义一个 native method 的时候，并不提供实现体（有些像定义一个 Java Interface），因为其实现体是由非 java 语言在外面实现的。\r\n本地接口的作用是融合不同的编程语言为 Java 所用，它的初衷是融合 C/C++ 程序。\r\n\r\n## 为什么要使用 Native Method?\r\nJava 使用起来很方便，但是有些层次的任务用 Java 实现起来不容易，或者我们对程序的效率很在意时，问题就来了\r\n\r\n### 与 Java 环境外交互\r\n**有时 Java 语言需要与 Java 外面的环境交互，这是本地方法存在的主要原因。** 你可以想想 Java 需要与操作系统或者其他硬件交换信息时的情况。本地方法正是这样一种交流机制，是一种非常简洁的接口，而且我们不需要去了解 Java 之外的繁琐的细节。\r\n\r\n### 与操作系统交互\r\nJVM 支持着 Java 本身和运行时库，它是 Java 赖以生存的平台，它是由一个解释器（解释字节码）和一些连接本地代码的库组成的。然而不管怎样，它毕竟不是一个完整的系统，它经常依赖于一些底层系统的支持。这些底层系统常常是强大的操作系统。通过使用本地方法，我们得以用 Java 实现了 jre 与底系统交互，甚至 JVM 的一部分就是用 C 写的。还有，如果我们要使用一些 Java 没有封装的操作系统的特性时，也要使用本地方法。\r\n\r\n### Sun’s Java\r\n**Sun 的解释器就是用 C 实现的，这使得它能够像一些普通的 C 一样与外部交互**。jre 大部分是用 Java 实现的，它也通过一些本地方法与外界交互。类 java.lang.Thread 的 setPriority() 方法是用 Java 实现的，但它实现调用的是该类里的本地方法 setPriority0()。这个本地方法是用 C 实现的，并被移植到 JVM 内部，在 Windows 95 平台上，这个本地方法最终会调用 Win32 setPriority() API。这是一个本地方法的具体实现由 JVM 直接提供，更多情况是本地方法由外部的动态链接库（external dynamic link library）提供，然后被 JVM 调用。\r\n\r\n# 本地方法栈\r\n\r\n- Java 虚拟机栈用于管理 Java 方法的调用，本地方法栈用于管理本地方法的调用。\r\n- 本地方法栈，也是线程私有的。\r\n- 允许被实现成固定或者是可扩展的内存大小。（在内存溢出方面是一样的）\r\n\r\n    > 如果线程请求分配的栈容量超过了本地方法栈允许的最大容量，Java 虚拟机将会抛出一个 StackOverflowError 异常。\r\n    > 如果本地方法栈可以扩展，并且在扩展的时候无法申请到足够的内存，或者在创建新的线程时没有足够的内存去创建对应的本地方法栈，那么 Java 虚拟机将会抛出一个 OutOfMemoryError 异常。\r\n    > 本地方法是使用 C 语言实现的。\r\n    > 它的具体做法是在 Native Method Stack 中登记 native 方法，在 Execution Engine 执行时加载本地方法库。\r\n\r\n- 当某个线程调用一个本地方法时，它就进入了一个全新的并且不再受虚拟机限制的世界。他和虚拟机拥有同样的权限。\r\n\r\n    > 本地方法可以通过本地方法接口来访问虚拟机内部的运行时数据区。\r\n    > 它甚至可以直接使用本地处理器中的寄存器。\r\n    > 直接从本地方法的堆中分配任意数量的内存。\r\n\r\n- 并不是所有的 JVM 都支持本地方法。因为 Java 虚拟机规范并没有明确要求本地方法栈的使用语言、具体实现方式、数据结构等。如果 JVM 产品不打算支持 native 方法，也可以无需实现本地方法栈。\r\n- 在 Hospot JVM 中，直接将本地方法栈和虚拟机栈合二为一。','2021-10-21 14:58:51.074228','2021-10-21 15:03:47.839383',1,7),(157,'MajorGC_MinorGC_FullGC','# Major GC、Minor GC、Full GC\r\nJVM 在进行 GC 时，并非每次都对上面三个内存（新生代、老年代、方法区）区域一起回收的，大部分时候回收的都是指新生代。\r\n针对HotSpot VM 的实现，它里面的GC按照回收区域又分为两大种类型：一种是部分收集（Partial GC），一种是整堆收集（Full GC）。\r\n\r\n1. 部分收集：不是完整收集整个 Java 堆的垃圾收集。其中又分为：\r\n\r\n    - 新生代收集（Minor GC/Young GC）：只是新生代（Eden,s0,s1）的垃圾收集。\r\n    - 老年代收集（Major GC/Old GC）：只是老年代的垃圾收集。\r\n\r\n        > 目前，只有 CMS GC 会有单独收集老年代的行为。\r\n        > 注意：很多时候 Major GC 会和 Full GC 混淆使用，需要具体分辨是老年代回收还是整堆回收。\r\n\r\n    - 混合收集（Mixed GC）：收集整个新生代以及部分老年代的垃圾收集。\r\n\r\n        > 目前，只有G1 GC会有这种行为\r\n\r\n2. 整堆收集（Full GC）：收集整个 java 堆和方法区的垃圾收集。\r\n\r\n# 最简单的分代式GC策略的触发条件\r\n\r\n## 年轻代GC（Minor GC）的触发机制\r\n当年轻代空间不足时，就会触发Minor GC，这里的年轻代指的是 Eden 代满，Survivor 满不会引发GC。（每次Minor GC 会清理年轻代的内存。）\r\n因为 Java 对象大多都具备朝生夕死的特性，所以 Minor GC 非常频繁，一般回收速度也比较快。这一定义既清晰又易于理解。\r\nMinor GC会引发 STW ，暂停其他用户线程，等垃圾回收结束，用户线程才恢复运行。\r\n## 老年代（Major GC/Full GC）触发机制\r\n指发生在老年代的GC，对象从老年代消失时，我们说“Major GC”或者“Full GC”发生了。\r\n出现了Major GC，经常会伴随至少一次的Minor GC（但非绝对的，在 Parallel Scavenge 收集器的收集策略里就有直接进行 Major GC 的策略选择过程）。\r\n\r\n  > 也就是在老年代空间不足时，会先尝试触发Minor GC。如果之后空间还不足，则触发Major GC。\r\n\r\nMajor GC的速度一般会比Minor GC 慢10倍以上，STW的时间更长。\r\n如果Major GC后，内存还不足，就报 OOM 了。\r\n# Full GC 触发机制\r\n触发 Full GC 执行的情况有下面五种：\r\n\r\n1. 调用 System.gc() 时，系统建议执行 Full GC，但是不必然执行\r\n2. 老年代空间不足\r\n3. 方法区空间不足\r\n4. 通过 Minor GC 后进入老年代的平均大小大于老年代的可用内存\r\n5. 由 Eden 区，survivor space0（From Space）区向 survivor space1（To Space）区复制时，对象大小大于 To Space 可用内存，则把该对象转存到老年代，且老年代的可用内存小于该对象大小。\r\n\r\n说明：full gc 是开发或调优中尽量要避免的，这样暂时时间短一些。\r\n\r\n# 堆空间分代思想\r\n其实不分代完全可以，分代的唯一理由就是优化GC性能。如果没有分代，那所有的对象都在一块，就如同把一个学校的人都关在一个教室。GC的时候要找到哪些对象没有用。这样就会对堆的所有区域进行扫描。而很多对象都是朝生夕死的，如果分代的话，把新创建的对象放到某一地方，当GC的时候先把这块存储“朝生夕死”对象的区域进行回收，这样就会腾出很大的空间来。\r\n\r\n# 内存分配策略\r\n对象提升(Promotion)规则\r\n如果对象在 Eden 出生并经过第一次 MinorGC 之后仍然存活，并且能够被 Survivor 容纳的话，将被移动到 Survivor 空间中，并将对象年龄设为1。对象在 survivor 区中每熬过一次 MinorGC, 年龄就增加1岁，当它的年龄增加到一定程度（默认为15岁，其实每个 JVM、每个 GC 都有所不同）时，就会被晋升到老年代中。\r\n**对象晋升到老年代的年龄阈值，可以通过选项 -XX：MaxTenuringThrehold 来设置。**','2021-10-21 15:13:15.106323','2021-10-21 15:23:02.456016',1,7),(158,'Something made me chuckle a bit','# 今晚在 reddit 上看到的\r\n\r\n![funny](/media/editor/2021-10-26 20-19-12 的屏幕截图_20211026202335448709.png \"funny\")','2021-10-26 20:23:59.710203','2021-10-26 20:23:59.710251',1,13),(159,'博客添加github OAuth认证','# 最近在做的事\r\n\r\n由于最近还在失业，所以宅家中。可是在不久之前，我的邮件中收到了一些警告，主要是说我的博客中有一些库存在漏洞，让我赶紧升级。有图为证：![邮箱警告](/media/editor/2021-10-31 17-26-22 的屏幕截图_20211031193453616826.png \"邮箱警告\")\r\n所以不知怎么想的，我尽然产生了将博客升级的想法，我这人有想法就会去做，某些方面哈，所以我就去写去了，用的django3.2，和vue ^3。除了不久之前，官方把django升级到了4.0之外，我觉得我这都是最新的了...... 不过写起来也挺折腾的, 由于之前用 django-webpack-loader(后端), 以及webpack-bundle-tracker 把前后端结合在了一起，带来了便利的同时也有不便之处，这点我在后面会解释。\r\n\r\n# 前后端怎么结合？\r\n\r\n## 前端\r\n\r\nvue-cli 启动文件 vue.conf.js 中添加 publicPath 为后端\r\n具体含义请查阅 vue-cli 官方文档\r\n\r\n```javascript\r\nvar BundleTracker = require(\'webpack-bundle-tracker\');\r\nmodule.exports = {\r\n  publicPath: \"http://127.0.0.1:8080/\",\r\n  outputDir: \"./dist/\",\r\n  runtimeCompiler: true,\r\n\r\n  chainWebpack: config => {\r\n\r\n    config.optimization\r\n      .splitChunks(false)\r\n\r\n    config\r\n      .plugin(\'BundleTracker\')\r\n      .use(BundleTracker, [{ filename: \'./webpack-stats.json\' }])\r\n\r\n    config.output \r\n      .filename(\'bundle.js\')\r\n\r\n    config.resolve.alias\r\n      .set(\'__STATIC__\', \'static\')\r\n\r\n    config.devServer\r\n      .public(\'http://127.0.0.1:8080\')\r\n      .host(\'127.0.0.1\')\r\n      .port(8080)\r\n      .hotOnly(true)\r\n      .watchOptions({ poll: 1000 })\r\n      .https(false)\r\n      .disableHostCheck(true)\r\n      .headers({ \"Access-Control-Allow-Origin\": [\"*\"] })\r\n    }\r\n};\r\n```\r\n\r\n## 后端\r\n\r\n项目根目录添加 `templates/index.html`, 并在其中通过 django-webpack-loader 渲染 bundle.js\r\n\r\n```html\r\n{% load render_bundle from webpack_loader %}\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" >\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    {% render_bundle \'app\' \'css\' %}\r\n    <title>Django | Vue</title>  \r\n  </head>\r\n  <body>\r\n    {% csrf_token %}\r\n    <div id=\"app\"></div>\r\n    {% render_bundle \'app\' \'js\' %}\r\n  </body>\r\n</html>\r\n\r\n```\r\n\r\n# 第三方登陆怎么做？\r\n\r\n做完了就感觉简单了，但是做的过程中就有很多坑。\r\n由于我是用django-webpack-loader将前后端结合，并且我不想再在项目中使用django的模板引擎，所以我不能使用django第三方库来实现这个功能。\r\n那怎么办呢？只能一步步来了，我先在github中创建了OAuth应用，然后打开[github授权文档](\"https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps\")\r\n\r\n第一步，需要`GET https://github.com/login/oauth/authorize`, 必须携带参数 `client_id`, 这个创建应用之后会有，然后在用户确认之后github会重点向到创建应用填写的`redirect_uri`中，好麻，于是写一个组件呗。\r\n\r\n```vue\r\n...\r\n <span @click=\"getGithubCode\"\r\n          class=\"w-11 h-11 items-center justify-center inline-flex rounded-full font-bold text-lg text-white bg-blue-500 hover:shadow-lg cursor-pointer transition ease-in duration-300\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"\r\n            />\r\n          </svg>\r\n</span>\r\n\r\n...\r\n\r\nsetup() {\r\n    ...\r\n    return {\r\n      getGithubCode:() => window.location.href = \"https://github.com/login/oauth/authorize?client_id=xxxxxxxx\"\r\n    }\r\n  },\r\n```\r\n\r\n到这里，我碰到了第一个坑，就是由于上面提到的那种结合方式。这里用户点击授权之后，就会被github重定向到`redirect_uri`,不过是直接到了后端的路由，前端是处理不了这个跳转后的路由的，所以就没有办法拿到url中的code。好吧，那就后端处理呗。实际上我也是后端处理的，前端收不到，能咋办。\r\n\r\n后端新建一个app, 然后在urlPatten中添加回调url, 并在 view 中处理\r\n\r\n``` python\r\nbackend_res/urls.py\r\n...\r\nurlpatterns = [\r\n    ...\r\n    path(\'github/callback\',\r\n         githubCreditialView.as_view(), name=\"github_callback\"),\r\n]\r\n\r\nbackend_res/views.py\r\n...\r\nclass githubCreditialView(APIView):\r\n    code = \'\'\r\n    access_token = \'\'\r\n\r\n    # handle github callback to get code received\r\n    def get(self, request):\r\n        self.code = request.GET[\'code\']\r\n        # get access_token\r\n        if not self.code:\r\n            return Response(\'回调错误，登陆失败\', status=status.HTTP_400_BAD_REQUEST)\r\n...\r\n\r\n```\r\n这里获取到了返回的code \r\n\r\n第二步，需要 `POST https://github.com/login/oauth/access_token`,需要传参数 `client_id, client_secret`, 以及上面返回的 `code`\r\n\r\n这里有了第二个坑，我不知道前端怎么监控这个授权后跳转的授权页面，换句话说，我怎么把数据传给前端呢？这里是github重定向之后的处理逻辑，我在这里处理了剩下的逻辑后怎么把数据传给前端？？？说句实话，我在这里耗了好长时间，一般是前端发个请求，然后有回调函数处理数据，这里却没有......其实写到这里我发现, 或许可以直接axios post github获取code,这样就能回调了，但我不是采取的这种方法，我直接接着处理了......好嘛，接着post，拿到 access_token，这里就不贴代码了。\r\n\r\n再然后呢，就可以拿到github数据了 \r\n\r\n```\r\nAuthorization: token OAUTH-TOKEN\r\nGET https://api.github.com/user\r\n```\r\n\r\n到这里，就必须考虑怎么把数据给前端了，其实我是用了取巧的办法，那就是：这次回调处理中，后端不返回昵称等信息，而是只返回cookie!问题得以解决！！！\r\n当然，在返回cookie之前，需要保存用户数据，可以客制化user或者添加关联表，这里我添加了关联表\r\n\r\n```python\r\nfrom django.conf import settings\r\nfrom django.db import models\r\nfrom django.db.models.signals import post_save\r\nfrom django.dispatch import receiver\r\nfrom rest_framework.authtoken.models import Token\r\nfrom users.models import userModel\r\n\r\n\r\n@receiver(post_save, sender=settings.AUTH_USER_MODEL)\r\ndef create_auth_token(sender, instance=None, created=False, **kwargs):\r\n    if created:\r\n        Token.objects.create(user=instance)\r\n\r\n\r\nclass Profile(models.Model):\r\n    user = models.OneToOneField(userModel, on_delete=models.CASCADE,)\r\n    nickname = models.CharField(max_length=20)\r\n    avatar_url = models.TextField(\r\n        max_length=255,\r\n        default=\'https://source.unsplash.com/collection/1346951/50x50?sig=1\')\r\n    github_node_id = models.CharField(max_length=100, default=\'\')\r\n\r\n    def __str__(self):\r\n        return self.nickname\r\n```\r\n\r\n由于我是使用的django rest framework 的 authtoken，所以这里利用django signal，用户创建创建之后，自动生成token, 前端有了这个token，就可以请求受限的数据。\r\n\r\ngithub登陆的用户，后端需要认证通过，所以直接登陆\r\n\r\n```python\r\n def login_direct(self, request, user):\r\n        setattr(user, \'backend\', \'django.contrib.auth.backends.ModelBackend\')\r\n        auth.login(request, user)\r\n```\r\n\r\n最后，重定向到首页，在这之前，设置好cookie来返回登陆凭证\r\n\r\n到这里，接入第三方认证就完成了！\r\n再之后，由于我想添加一个加载中的组件，所以在加载页面挂载之后才去跳转到授权页面。','2021-10-31 19:36:31.179331','2021-10-31 19:36:31.179380',1,4);
/*!40000 ALTER TABLE `blog_blog` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_blogtype`
--

DROP TABLE IF EXISTS `blog_blogtype`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_blogtype` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `type_name` varchar(15) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_blogtype`
--

LOCK TABLES `blog_blogtype` WRITE;
/*!40000 ALTER TABLE `blog_blogtype` DISABLE KEYS */;
INSERT INTO `blog_blogtype` VALUES (3,'vue'),(4,'本博客的故事'),(5,'Python'),(6,'Golang'),(7,'Java'),(8,'English'),(9,'vim小记'),(10,'汇编'),(11,'markdown'),(12,'ML'),(13,'随笔'),(14,'TypeScript');
/*!40000 ALTER TABLE `blog_blogtype` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `comment_comment`
--

DROP TABLE IF EXISTS `comment_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `comment_comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `object_id` int(10) unsigned NOT NULL,
  `text` longtext NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `parent_id` int(11) DEFAULT NULL,
  `reply_to_id` int(11) DEFAULT NULL,
  `root_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `comment_comment_content_type_id_fbfb9793_fk_django_co` (`content_type_id`),
  KEY `comment_comment_parent_id_b612524c_fk_comment_comment_id` (`parent_id`),
  KEY `comment_comment_reply_to_id_e0adcef8_fk_auth_user_id` (`reply_to_id`),
  KEY `comment_comment_root_id_28721811_fk_comment_comment_id` (`root_id`),
  KEY `comment_comment_user_id_6078e57b_fk_auth_user_id` (`user_id`),
  CONSTRAINT `comment_comment_content_type_id_fbfb9793_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `comment_comment_parent_id_b612524c_fk_comment_comment_id` FOREIGN KEY (`parent_id`) REFERENCES `comment_comment` (`id`),
  CONSTRAINT `comment_comment_reply_to_id_e0adcef8_fk_auth_user_id` FOREIGN KEY (`reply_to_id`) REFERENCES `auth_user` (`id`),
  CONSTRAINT `comment_comment_root_id_28721811_fk_comment_comment_id` FOREIGN KEY (`root_id`) REFERENCES `comment_comment` (`id`),
  CONSTRAINT `comment_comment_user_id_6078e57b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=133 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `comment_comment`
--

LOCK TABLES `comment_comment` WRITE;
/*!40000 ALTER TABLE `comment_comment` DISABLE KEYS */;
INSERT INTO `comment_comment` VALUES (98,98,'<p>hi，又发现个问题，手机端上点击登陆之后无法通过滑动验证，已经修改了代码，但还是有问题，需要优化。</p>','2020-03-13 11:06:35.768000',8,1,NULL,NULL,NULL),(99,98,'<p><span style=\"color:#8e44ad\">照片墙已经添加完毕，已经设置为默认全屏状态，3d垂直方向旋转。</span></p>','2020-03-13 14:45:31.774000',8,1,NULL,NULL,NULL),(100,98,'<p>已确认，待修复</p>','2020-03-13 16:02:50.732000',8,1,98,1,98),(101,98,'<p><span style=\"color:#8e44ad\">详情页面和列表页面博客描述信息已经优化完毕！</span></p>','2020-03-13 17:58:17.722000',8,1,NULL,NULL,NULL),(102,98,'<p>hi, 又发现两个新的问题。1.照片墙字体会变大；2.照片墙激活状态未设置。</p>','2020-03-13 17:59:46.160000',8,1,NULL,NULL,NULL),(103,98,'<p>ok，已修复</p>','2020-03-13 18:04:40.777000',8,1,102,1,102),(104,98,'<p><span style=\"color:#8e44ad\">增加了顶部的进度条，今日目标首页任务顺延。</span></p>','2020-03-13 22:52:35.669000',8,1,NULL,NULL,NULL),(105,98,'<p>记录一下，以备后用。Bootstrap的徽章以及模态框可以使用下。</p>','2020-03-14 09:48:39.763000',8,1,NULL,NULL,NULL),(106,91,'<p>&lt;kbd&gt;cd&lt;/kbd&gt;</p>','2020-03-14 09:54:13.084000',8,1,NULL,NULL,NULL),(107,98,'<p>好吧，又有别的东西耽搁首页进度了，照片墙第四页之后就会覆盖掉前面的图片，正在修复中...</p>','2020-03-14 15:02:35.065621',8,1,NULL,NULL,NULL),(108,98,'<p>已修复，采取了偷懒的方式，降低了视觉效果，修复了bug，并且可以展示多张图片。</p>','2020-03-14 18:00:44.274624',8,1,107,1,107),(109,98,'<p><span style=\"color:#8e44ad\">首页已经按照ui优化完毕，预计会在下一个计划中加入更多内容。</span></p>','2020-03-14 18:03:22.323824',8,1,NULL,NULL,NULL),(110,98,'<p>hello，虽然知道你又要上班了，但还是很心疼的告诉你，你的照片墙点击的时候有黑屏的bug，可能是没处理呢~</p>','2020-03-14 21:38:04.171401',8,1,NULL,NULL,NULL),(111,98,'<p>收到，添加到解决计划里了。</p>','2020-03-14 21:39:05.332601',8,1,110,1,110),(112,98,'<p>已修复</p>','2020-03-15 20:37:25.519800',8,1,110,1,110),(113,99,'<p><span style=\"color:#8e44ad\">除了头像开发均已经优化完毕~</span></p>','2020-03-17 15:03:14.371000',8,1,NULL,NULL,NULL),(114,100,'<p><span style=\"color:#8e44ad\">ok，除了第三步的滚动监听功能，以及第四步的隐藏功能，目录已开发完毕，目前未发现bug。</span></p>','2020-03-17 22:53:40.369000',8,1,NULL,NULL,NULL),(115,100,'<p><span style=\"color:#8e44ad\">已经完成目录滚动联动</span></p>','2020-03-19 20:28:15.437413',8,1,NULL,NULL,NULL),(116,102,'<p><span style=\"background-color:null\"><span style=\"color:#8e44ad\">目前部署已经完成，后面要写个定时备份数据的脚本，不然哪天服务器过期就泪目了！！！</span></span></p>','2020-03-26 10:54:03.804009',8,1,NULL,NULL,NULL),(117,102,'<p>发现邮箱服务果然无法使用，后面解决</p>','2020-03-26 10:56:17.172012',8,1,NULL,NULL,NULL),(118,102,'<p>测试发送邮件</p>','2020-03-26 12:07:49.743884',8,1,NULL,NULL,NULL),(119,102,'<p>已解决，端口 465，TLS 改成 SSL</p>','2020-03-26 12:09:11.038108',8,1,118,1,118),(120,102,'<p>发现个小bug serach-form button需要加上float</p>','2020-03-30 10:37:36.793731',8,1,NULL,NULL,NULL),(121,106,'<p>记得晚上清理邮箱！</p>','2020-04-21 18:50:17.121512',8,9,NULL,NULL,NULL),(122,106,'<p>任何时候别苦了自己哇~</p>','2020-04-22 21:03:30.884752',8,1,NULL,NULL,NULL),(123,119,'<p>或许我是好高骛远了？急先锋啊急先锋。</p>','2020-06-17 08:44:40.221624',8,9,NULL,NULL,NULL),(124,119,'<p>一个月前的内容，脑子里已经没有了。<img alt=\"broken heart\" height=\"23\" src=\"http://39.101.213.182/static/ckeditor/ckeditor/plugins/smiley/images/broken_heart.png\" title=\"broken heart\" width=\"23\" /></p>','2020-06-24 21:05:56.152112',8,1,NULL,NULL,NULL),(125,125,'<p>最近很懒～还是很浮躁，有时候甚至很烦躁，回家不知道干嘛&rarr;_&rarr;，另外，发现改成markdown之后，手机下图片显示有点难看，回去先把这bug修了吧。</p>','2020-08-20 20:08:15.630609',8,9,NULL,NULL,NULL),(126,125,'<p>评论也出问题？</p>','2020-08-20 20:09:05.471964',8,9,NULL,NULL,NULL),(127,125,'<p>哈哈哈</p>','2020-08-21 22:10:05.516779',8,1,NULL,NULL,NULL),(128,128,'<p>come on</p>','2020-08-22 17:23:37.352170',8,1,NULL,NULL,NULL),(129,128,'<p>好了哈</p>','2020-08-22 17:23:50.431707',8,1,128,1,128),(130,133,'<p>昨夜寒风起，便知已是秋。</p>','2020-09-01 19:12:33.001625',8,9,NULL,NULL,NULL),(131,138,'<p><span style=\"color:#8e44ad\">代码很久国庆前写的，直接搬了</span></p>','2020-10-07 21:59:26.685412',8,1,NULL,NULL,NULL),(132,158,'<p><img alt=\"blush\" height=\"23\" src=\"http://39.101.213.182/static/ckeditor/ckeditor/plugins/smiley/images/embarrassed_smile.png\" title=\"blush\" width=\"23\" /></p>','2021-10-26 20:27:46.348660',8,1,NULL,NULL,NULL);
/*!40000 ALTER TABLE `comment_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=554 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2020-02-11 15:21:20.957000','1','BlogType object (1)',1,'[{\"added\": {}}]',7,1),(2,'2020-02-11 15:23:13.655000','1','Blog object (1)',1,'[{\"added\": {}}]',8,1),(3,'2020-02-11 15:28:30.827500','2','BlogType object (2)',1,'[{\"added\": {}}]',7,1),(4,'2020-02-11 15:28:56.172000','1','Blog object (1)',3,'',8,1),(5,'2020-02-11 15:31:12.418000','2','<Blog: ()>',1,'[{\"added\": {}}]',8,1),(6,'2020-02-12 01:25:45.101500','3','<Blog: ()>',1,'[{\"added\": {}}]',8,1),(7,'2020-02-13 07:57:44.282000','4','<Blog: ()>',1,'[{\"added\": {}}]',8,1),(8,'2020-02-14 06:54:36.557000','3','<Blog: ()>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(9,'2020-02-14 12:55:18.315000','64','<Blog: ()>',3,'',8,1),(10,'2020-02-14 12:55:18.468000','63','<Blog: ()>',3,'',8,1),(11,'2020-02-14 12:55:18.506000','62','<Blog: ()>',3,'',8,1),(12,'2020-02-14 12:55:18.556000','61','<Blog: ()>',3,'',8,1),(13,'2020-02-14 12:55:18.756000','60','<Blog: ()>',3,'',8,1),(14,'2020-02-14 12:55:18.795000','59','<Blog: ()>',3,'',8,1),(15,'2020-02-14 12:55:18.833000','58','<Blog: ()>',3,'',8,1),(16,'2020-02-14 12:55:18.872000','57','<Blog: ()>',3,'',8,1),(17,'2020-02-14 12:55:18.910000','56','<Blog: ()>',3,'',8,1),(18,'2020-02-14 12:55:18.950000','55','<Blog: ()>',3,'',8,1),(19,'2020-02-14 12:55:18.988000','54','<Blog: ()>',3,'',8,1),(20,'2020-02-14 12:55:19.026000','53','<Blog: ()>',3,'',8,1),(21,'2020-02-14 12:55:19.065000','52','<Blog: ()>',3,'',8,1),(22,'2020-02-14 12:55:19.104000','51','<Blog: ()>',3,'',8,1),(23,'2020-02-14 12:55:19.143000','50','<Blog: ()>',3,'',8,1),(24,'2020-02-14 12:55:19.182000','49','<Blog: ()>',3,'',8,1),(25,'2020-02-14 12:55:19.221000','48','<Blog: ()>',3,'',8,1),(26,'2020-02-14 12:55:19.259000','47','<Blog: ()>',3,'',8,1),(27,'2020-02-14 12:55:19.298000','46','<Blog: ()>',3,'',8,1),(28,'2020-02-14 12:55:19.337000','45','<Blog: ()>',3,'',8,1),(29,'2020-02-14 12:55:19.376000','44','<Blog: ()>',3,'',8,1),(30,'2020-02-14 12:55:19.414000','43','<Blog: ()>',3,'',8,1),(31,'2020-02-14 12:55:19.453000','42','<Blog: ()>',3,'',8,1),(32,'2020-02-14 12:55:19.492000','41','<Blog: ()>',3,'',8,1),(33,'2020-02-14 12:55:19.530000','40','<Blog: ()>',3,'',8,1),(34,'2020-02-14 12:55:19.569000','39','<Blog: ()>',3,'',8,1),(35,'2020-02-14 12:55:19.608000','38','<Blog: ()>',3,'',8,1),(36,'2020-02-14 12:55:19.646000','37','<Blog: ()>',3,'',8,1),(37,'2020-02-14 12:55:19.685000','36','<Blog: ()>',3,'',8,1),(38,'2020-02-14 12:55:19.741000','35','<Blog: ()>',3,'',8,1),(39,'2020-02-15 14:06:19.767000','3','vue',1,'[{\"added\": {}}]',7,1),(40,'2020-02-15 19:25:55.397000','95','<Blog: ()>',1,'[{\"added\": {}}]',8,1),(41,'2020-02-15 19:29:03.915000','95','<Blog: ()>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(42,'2020-02-18 20:32:11.805000','1','ReadNum object (1)',1,'[{\"added\": {}}]',9,1),(43,'2020-02-18 22:00:00.964000','1','ReadDetail object (1)',1,'[{\"added\": {}}]',10,1),(44,'2020-02-20 14:28:58.470500','2','maliang',3,'',4,1),(45,'2020-02-20 16:55:38.256000','3','maliang',3,'',4,1),(46,'2020-02-20 22:09:12.189000','23','是啊，终于解决了~',1,'[{\"added\": {}}]',11,1),(47,'2020-02-20 22:23:02.119000','4','maliang',1,'[{\"added\": {}}]',4,1),(48,'2020-02-20 22:23:35.372000','4','maliang',3,'',4,1),(49,'2020-02-20 22:24:03.033000','5','maliang',1,'[{\"added\": {}}]',4,1),(50,'2020-02-20 22:24:07.293000','23','是啊，终于解决了~',2,'[{\"changed\": {\"fields\": [\"user\"]}}]',11,1),(51,'2020-02-24 09:42:24.129000','96','<Blog: 测试下代码>',1,'[{\"added\": {}}]',8,1),(52,'2020-02-24 16:11:33.460000','1','<Prfile:HERSCHEL-herschel>',1,'[{\"added\": {}}]',14,1),(53,'2020-02-25 15:39:11.550000','6','maiang',3,'',4,1),(54,'2020-02-25 15:39:11.664000','5','maliang',3,'',4,1),(55,'2020-02-25 15:44:28.630000','1','herschel',2,'[{\"changed\": {\"fields\": [\"email\", \"last_login\"]}}]',4,1),(56,'2020-02-25 16:05:46.407000','1','herschel',2,'[{\"changed\": {\"fields\": [\"email\"]}}]',4,1),(57,'2020-02-25 18:27:21.084000','7','maliang',3,'',4,1),(58,'2020-02-25 18:32:08.033000','8','maliang',3,'',4,1),(59,'2020-02-26 20:25:14.322500','1','herschel',2,'[{\"changed\": {\"fields\": [\"email\", \"last_login\"]}}]',4,1),(60,'2020-03-11 11:35:57.796500','3','<Blog: 第二篇测试>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(61,'2020-03-12 18:22:37.633000','97','<Blog: 做博客的想法>',1,'[{\"added\": {}}]',8,1),(62,'2020-03-12 18:28:49.849000','97','<Blog: 做博客的想法>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(63,'2020-03-13 10:22:57.665000','98','<Blog: 系列优化>',1,'[{\"added\": {}}]',8,1),(64,'2020-03-13 10:26:22.437000','98','<Blog: 系列优化>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(65,'2020-03-15 20:41:20.290200','4','本博客的故事',1,'[{\"added\": {}}]',7,1),(66,'2020-03-15 20:41:57.792200','98','<Blog: 系列优化>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',8,1),(67,'2020-03-15 20:42:11.102200','97','<Blog: 做博客的想法>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',8,1),(68,'2020-03-15 21:23:28.397400','99','<Blog: 登录滑动验证优化>',1,'[{\"added\": {}}]',8,1),(69,'2020-03-16 10:44:09.740201','99','<Blog: 登录滑动验证优化>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(70,'2020-03-17 17:58:06.636000','100','<Blog: 文章目录显示>',1,'[{\"added\": {}}]',8,1),(71,'2020-03-24 20:10:49.378000','101','<Blog: Promise>',1,'[{\"added\": {}}]',8,1),(72,'2020-03-24 21:16:58.738000','101','<Blog: 基本的Promise>',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',8,1),(73,'2020-03-24 22:53:53.197000','101','<Blog: 基本的Promise>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(74,'2020-03-24 22:54:31.198000','101','<Blog: 基本的Promise>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(75,'2020-03-24 22:54:55.289000','101','<Blog: 基本的Promise>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(76,'2020-03-25 22:56:57.935000','102','<Blog: 部署>',1,'[{\"added\": {}}]',8,1),(77,'2020-03-25 22:57:52.851000','102','<Blog: 部署>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(78,'2020-03-25 22:58:39.158000','102','<Blog: 部署>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(79,'2020-03-26 09:11:49.022131','2','随笔',3,'',7,1),(80,'2020-03-26 09:11:49.025582','1','python',3,'',7,1),(81,'2020-03-26 10:22:31.869729','102','<Blog: 部署>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(82,'2020-03-26 10:23:15.901912','102','<Blog: 部署>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(83,'2020-03-26 10:50:38.604643','102','<Blog: 部署>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(84,'2020-03-26 10:52:04.724874','102','<Blog: 部署>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(85,'2020-03-26 11:10:49.599316','102','<Blog: 部署>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(86,'2020-03-26 11:11:17.019827','102','<Blog: 部署>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(87,'2020-03-26 11:24:31.983648','16','ReadNum object (16)',3,'',9,1),(88,'2020-03-26 11:24:31.987620','15','ReadNum object (15)',3,'',9,1),(89,'2020-03-26 11:24:31.992907','14','ReadNum object (14)',3,'',9,1),(90,'2020-03-26 11:24:31.996453','13','ReadNum object (13)',3,'',9,1),(91,'2020-03-26 11:24:31.999743','12','ReadNum object (12)',3,'',9,1),(92,'2020-03-26 11:24:32.002898','11','ReadNum object (11)',3,'',9,1),(93,'2020-03-26 11:24:32.004647','10','ReadNum object (10)',3,'',9,1),(94,'2020-03-26 11:24:32.008892','9','ReadNum object (9)',3,'',9,1),(95,'2020-03-26 11:24:32.012946','8','ReadNum object (8)',3,'',9,1),(96,'2020-03-26 11:24:32.016297','7','ReadNum object (7)',3,'',9,1),(97,'2020-03-26 11:24:32.019602','6','ReadNum object (6)',3,'',9,1),(98,'2020-03-26 11:24:32.022879','5','ReadNum object (5)',3,'',9,1),(99,'2020-03-26 11:24:32.024688','4','ReadNum object (4)',3,'',9,1),(100,'2020-03-26 11:24:32.027476','3','ReadNum object (3)',3,'',9,1),(101,'2020-03-26 11:24:32.029277','2','ReadNum object (2)',3,'',9,1),(102,'2020-03-26 11:24:32.035389','1','ReadNum object (1)',3,'',9,1),(103,'2020-03-26 11:28:10.303100','1','至今待一人~',3,'',11,1),(104,'2020-03-26 11:28:10.306883','2','吻伊人，醉芬芳！',3,'',11,1),(105,'2020-03-26 11:28:10.310651','3','忧桑啊！',3,'',11,1),(106,'2020-03-26 11:28:10.314698','4','我习惯了',3,'',11,1),(107,'2020-03-26 11:28:10.318031','5','<p>是嘛？<img alt=\"devil\" height=\"23\" src=\"http://127.0.0.1:8000/static/ckeditor/ckeditor/plugins/smiley/images/devil_smile.png\" title=\"devil\" width=\"23\" /></p>',3,'',11,1),(108,'2020-03-26 11:28:10.321239','6','<p>jgjgj</p>',3,'',11,1),(109,'2020-03-26 11:28:10.324971','7','<p>jgjgj</p>',3,'',11,1),(110,'2020-03-26 11:28:10.328090','8','<p>jgjgj</p>',3,'',11,1),(111,'2020-03-26 11:28:10.331253','9','<p>我的天哪？什么玩意<img alt=\"angry\" height=\"23\" src=\"http://127.0.0.1:8000/static/ckeditor/ckeditor/plugins/smiley/images/angry_smile.png\" title=\"angry\" width=\"23\" /></p>',3,'',11,1),(112,'2020-03-26 11:28:10.333190','10','<p>好奇葩</p>\r\n\r\n<p>&nbsp;</p>',3,'',11,1),(113,'2020-03-26 11:28:10.336881','11','<p>好奇葩</p>\r\n\r\n<p>&nbsp;</p>',3,'',11,1),(114,'2020-03-26 11:28:10.339553','12','<p>好奇葩</p>\r\n\r\n<p>&nbsp;</p>',3,'',11,1),(115,'2020-03-26 11:28:10.342966','13','<p>好奇葩</p>\r\n\r\n<p>&nbsp;</p>',3,'',11,1),(116,'2020-03-26 11:28:10.348080','14','<p>好奇葩</p>\r\n\r\n<p>&nbsp;</p>',3,'',11,1),(117,'2020-03-26 11:28:10.351658','15','<p>好奇葩</p>\r\n\r\n<p>&nbsp;</p>',3,'',11,1),(118,'2020-03-26 11:28:10.354791','16','<p>好奇葩</p>\r\n\r\n<p>&nbsp;</p>',3,'',11,1),(119,'2020-03-26 11:28:10.357127','17','<p>终于解决了</p>',3,'',11,1),(120,'2020-03-26 11:28:10.360806','18','<p>ajax写错了</p>',3,'',11,1),(121,'2020-03-26 11:28:10.364230','19','<p><img alt=\"heart\" height=\"23\" src=\"http://127.0.0.1:8000/static/ckeditor/ckeditor/plugins/smiley/images/heart.png\" title=\"heart\" width=\"23\" /></p>',3,'',11,1),(122,'2020-03-26 11:28:10.367864','20','<p>1</p>',3,'',11,1),(123,'2020-03-26 11:28:10.371336','21','<p>2</p>',3,'',11,1),(124,'2020-03-26 11:28:10.372984','22','<p>1</p>',3,'',11,1),(125,'2020-03-26 11:28:10.376515','24','<p><strong>时间怎么没有更新啊</strong></p>',3,'',11,1),(126,'2020-03-26 11:28:10.380047','25','<p>？</p>',3,'',11,1),(127,'2020-03-26 11:28:10.383082','26','<p>这是个爱心嘛？</p>\r\n\r\n<p>&nbsp;</p>',3,'',11,1),(128,'2020-03-26 11:28:10.384884','27','<p><span style=\"color:#e74c3c\">你看，没有影响，成功了，不过掌握了吗？</span></p>',3,'',11,1),(129,'2020-03-26 11:28:10.387830','28','<p>评论去哪里了？</p>\r\n\r\n<p>&nbsp;</p>',3,'',11,1),(130,'2020-03-26 11:28:10.390945','29','<p>成功了？</p>',3,'',11,1),(131,'2020-03-26 11:28:10.393955','30','<p>好像真的成功了</p>',3,'',11,1),(132,'2020-03-26 11:28:10.397326','31','<p>嘿嘿</p>',3,'',11,1),(133,'2020-03-26 11:28:10.400856','32','<p>应该出现在嘿嘿上面</p>',3,'',11,1),(134,'2020-03-26 11:28:10.405309','33','<p>看吧</p>',3,'',11,1),(135,'2020-03-26 11:28:10.408963','34','<p>等</p>',3,'',11,1),(136,'2020-03-26 11:28:10.410784','35','<p>哈哈</p>',3,'',11,1),(137,'2020-03-26 11:28:10.412570','36','<p>分</p>',3,'',11,1),(138,'2020-03-26 11:28:10.418616','37','<p>(⊙o⊙)&hellip;</p>',3,'',11,1),(139,'2020-03-26 11:28:10.422520','38','<p>123</p>',3,'',11,1),(140,'2020-03-26 11:28:10.425712','39','<p>234</p>',3,'',11,1),(141,'2020-03-26 11:28:10.428979','40','<p>345</p>',3,'',11,1),(142,'2020-03-26 11:28:10.432132','41','<p>456</p>',3,'',11,1),(143,'2020-03-26 11:28:10.435355','42','<p>567</p>',3,'',11,1),(144,'2020-03-26 11:28:10.437441','43','<p>678</p>',3,'',11,1),(145,'2020-03-26 11:28:10.440800','44','<p>飞飞飞</p>',3,'',11,1),(146,'2020-03-26 11:28:10.444108','45','<p>ajax刷评论</p>\r\n\r\n<p>&nbsp;</p>',3,'',11,1),(147,'2020-03-26 11:28:10.447841','46','<p>ajax刷评论2</p>',3,'',11,1),(148,'2020-03-26 11:28:10.451844','47','<p>123</p>',3,'',11,1),(149,'2020-03-26 11:28:10.455372','48','<p>123</p>',3,'',11,1),(150,'2020-03-26 11:28:10.457160','49','<p>234</p>',3,'',11,1),(151,'2020-03-26 11:28:10.460755','50','<p>345</p>',3,'',11,1),(152,'2020-03-26 11:28:10.464175','51','<p>456</p>',3,'',11,1),(153,'2020-03-26 11:28:10.467362','52','<p>567</p>',3,'',11,1),(154,'2020-03-26 11:28:10.469371','53','<p>567</p>',3,'',11,1),(155,'2020-03-26 11:28:10.473984','54','<p>678</p>',3,'',11,1),(156,'2020-03-26 11:28:10.477776','55','<p>789</p>',3,'',11,1),(157,'2020-03-26 11:28:10.481556','56','<p>完美收工</p>',3,'',11,1),(158,'2020-03-26 11:28:10.484571','57','<p>镇北堡容易啊</p>',3,'',11,1),(159,'2020-03-26 11:28:10.487575','58','<p>是啊</p>',3,'',11,1),(160,'2020-03-26 11:28:10.491459','59','<p>22</p>',3,'',11,1),(161,'2020-03-26 11:28:10.495002','60','<p><u>11</u></p>',3,'',11,1),(162,'2020-03-26 11:28:10.497796','61','<p>标签真好用</p>',3,'',11,1),(163,'2020-03-26 11:28:10.501182','62','<p>细节跳帧</p>',3,'',11,1),(164,'2020-03-26 11:28:10.506205','63','<p>111</p>',3,'',11,1),(165,'2020-03-26 11:28:10.509287','64','<p>222</p>',3,'',11,1),(166,'2020-03-26 11:28:10.512682','65','<p>更好看啦</p>',3,'',11,1),(167,'2020-03-26 11:28:10.515940','66','<p>@</p>',3,'',11,1),(168,'2020-03-26 11:28:10.518977','67','<p><em>柔柔弱弱</em></p>',3,'',11,1),(169,'2020-03-26 11:28:10.520677','68','<p>22</p>',3,'',11,1),(170,'2020-03-26 11:28:10.523743','69','<p>33</p>',3,'',11,1),(171,'2020-03-26 11:28:10.526751','70','<p>333</p>',3,'',11,1),(172,'2020-03-26 11:28:10.528872','71','<p>44</p>',3,'',11,1),(173,'2020-03-26 11:28:10.531816','76','<p>别的是好的呀</p>',3,'',11,1),(174,'2020-03-26 11:28:10.534905','77','<pre>\r\n<code class=\"language-go\">package main\r\n\r\nimport (\r\n	\"fmt\"\r\n)\r\nfunc main(){\r\n	fmt.Println(\"hello world\")\r\n}\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>',3,'',11,1),(175,'2020-03-26 11:28:10.536724','78','<p>好像有点奇怪</p>',3,'',11,1),(176,'2020-03-26 11:28:10.540196','79','<p>嗯嗯</p>',3,'',11,1),(177,'2020-03-26 11:28:10.543328','80','<p>测试评论发送邮件~</p>',3,'',11,1),(178,'2020-03-26 11:28:10.545068','81','<p>回复邮件测试</p>',3,'',11,1),(179,'2020-03-26 11:28:10.547992','82','<p>2</p>',3,'',11,1),(180,'2020-03-26 11:28:10.550843','83','<p>分</p>',3,'',11,1),(181,'2020-03-26 11:28:10.552742','84','<p>手吧</p>',3,'',11,1),(182,'2020-03-26 11:28:10.556588','85','<p>分手吧</p>',3,'',11,1),(183,'2020-03-26 11:28:10.560056','86','<p>111</p>\r\n\r\n<p>&nbsp;</p>',3,'',11,1),(184,'2020-03-26 11:28:10.563150','87','<p>多线程测试邮件发送</p>',3,'',11,1),(185,'2020-03-26 11:28:10.564877','88','<p>多线程测试邮件发送2</p>',3,'',11,1),(186,'2020-03-26 11:28:10.568733','89','<p>多线程测试邮件发送3</p>',3,'',11,1),(187,'2020-03-26 11:28:10.572149','90','<p>测试成功</p>',3,'',11,1),(188,'2020-03-26 11:28:10.575630','91','<p>html邮件测试</p>',3,'',11,1),(189,'2020-03-26 11:28:10.579062','92','<p>测试</p>',3,'',11,1),(190,'2020-03-26 11:28:10.580747','93','<p><strong>是</strong></p>',3,'',11,1),(191,'2020-03-26 11:28:10.583678','94','<p>是啊</p>',3,'',11,1),(192,'2020-03-26 11:28:10.586689','95','<p>调整回复位置后ajax是否正确显示</p>',3,'',11,1),(193,'2020-03-26 11:28:10.589211','96','<p>回复后回复位置</p>',3,'',11,1),(194,'2020-03-26 11:28:10.592787','97','<p>评论后回复位置</p>',3,'',11,1),(195,'2020-03-26 12:12:08.990728','102','<Blog: 部署>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(196,'2020-03-26 20:31:01.833616','103','<Blog: promise 链式调用>',1,'[{\"added\": {}}]',8,1),(197,'2020-03-26 20:33:59.474819','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(198,'2020-03-26 20:41:03.679899','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(199,'2020-03-26 21:13:54.222036','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(200,'2020-03-26 21:38:24.023271','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(201,'2020-03-26 21:50:35.972771','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(202,'2020-03-26 22:10:00.603994','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(203,'2020-03-26 22:27:33.599184','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(204,'2020-03-26 22:29:35.708664','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(205,'2020-03-26 22:30:53.761765','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(206,'2020-03-26 22:32:54.212656','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(207,'2020-03-26 22:33:17.142808','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(208,'2020-03-26 22:42:01.930482','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(209,'2020-03-26 22:42:32.815119','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(210,'2020-03-27 09:24:18.050373','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(211,'2020-03-27 16:30:40.997855','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(212,'2020-03-27 16:31:28.392896','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(213,'2020-03-30 08:08:56.212663','103','<Blog: promise 链式调用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(214,'2020-04-06 23:45:05.595783','104','<Blog: Promise 周边方法>',1,'[{\"added\": {}}]',8,1),(215,'2020-04-15 22:24:19.989251','5','python',1,'[{\"added\": {}}]',7,1),(216,'2020-04-15 23:33:53.943897','105','<Blog: 令人目眩的条件语句>',1,'[{\"added\": {}}]',8,1),(217,'2020-04-15 23:35:41.084265','105','<Blog: 令人目眩的条件语句>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(218,'2020-04-16 15:56:44.671826','105','<Blog: 令人目眩的条件语句>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(219,'2020-04-20 22:37:35.121539','6','golang',1,'[{\"added\": {}}]',7,1),(220,'2020-04-20 23:21:15.720630','106','<Blog: 聊聊 go 中的模板继承>',1,'[{\"added\": {}}]',8,1),(221,'2020-04-22 20:55:10.560124','106','<Blog: 聊聊 go 中的模板继承>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(222,'2020-04-22 20:56:05.815701','106','<Blog: 聊聊 go 中的模板继承>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(223,'2020-04-22 20:57:52.996235','106','<Blog: 聊聊 go 中的模板继承>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(224,'2020-04-22 21:02:31.088110','106','<Blog: 聊聊 go 中的模板继承>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(225,'2020-04-22 21:06:38.307724','106','<Blog: 聊聊 go 中的模板继承>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(226,'2020-04-22 21:23:58.056168','106','<Blog: 聊聊 go 中的模板继承>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(227,'2020-05-08 21:34:26.206149','6','Golang',2,'[{\"changed\": {\"fields\": [\"type_name\"]}}]',7,1),(228,'2020-05-08 21:34:41.269824','5','Python',2,'[{\"changed\": {\"fields\": [\"type_name\"]}}]',7,1),(229,'2020-05-08 21:34:59.028100','7','Java',1,'[{\"added\": {}}]',7,1),(230,'2020-05-08 22:58:15.682485','107','<Blog: 开启 Java 之旅>',1,'[{\"added\": {}}]',8,1),(231,'2020-05-08 23:01:19.422754','107','<Blog: 开启 Java 之旅>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(232,'2020-05-09 22:56:19.074889','108','<Blog: 字符流>',1,'[{\"added\": {}}]',8,1),(233,'2020-05-09 22:58:33.751799','108','<Blog: 字符流>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(234,'2020-05-10 08:22:57.398267','109','<Blog: Properties集合>',1,'[{\"added\": {}}]',8,1),(235,'2020-05-10 08:24:21.701844','109','<Blog: Properties集合>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(236,'2020-05-10 08:24:57.193608','109','<Blog: Properties集合>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(237,'2020-05-10 09:34:32.581804','110','<Blog: 缓冲流>',1,'[{\"added\": {}}]',8,1),(238,'2020-05-10 09:35:17.754551','110','<Blog: 缓冲流>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(239,'2020-05-10 12:46:36.326855','111','<Blog: 转换流>',1,'[{\"added\": {}}]',8,1),(240,'2020-05-10 16:45:54.243129','111','<Blog: 转换流>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(241,'2020-05-10 17:30:52.603474','112','<Blog: 序列化流>',1,'[{\"added\": {}}]',8,1),(242,'2020-05-10 17:38:13.672957','112','<Blog: 序列化流>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(243,'2020-05-11 22:06:00.116551','113','<Blog: 简单实现TCP客户端与服务端>',1,'[{\"added\": {}}]',8,1),(244,'2020-05-11 22:06:46.464840','113','<Blog: 简单实现TCP客户端与服务端>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(245,'2020-05-11 22:33:00.875152','113','<Blog: 简单实现TCP客户端与服务端>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(246,'2020-05-12 22:09:59.638793','114','<Blog: 函数式接口>',1,'[{\"added\": {}}]',8,1),(247,'2020-05-12 22:41:28.499476','114','<Blog: 函数式接口>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(248,'2020-05-12 23:13:40.106970','114','<Blog: 函数式接口>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(249,'2020-05-12 23:14:51.355489','114','<Blog: 函数式接口>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(250,'2020-05-13 20:38:27.932054','114','<Blog: 函数式接口>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(251,'2020-05-13 20:42:48.630132','114','<Blog: 函数式接口>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(252,'2020-05-13 20:43:33.864490','114','<Blog: 函数式接口>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(253,'2020-05-13 20:44:38.739924','114','<Blog: 函数式接口>',2,'[]',8,1),(254,'2020-05-13 22:02:35.095139','115','<Blog: 方法引用的简单使用>',1,'[{\"added\": {}}]',8,1),(255,'2020-05-16 23:33:31.624302','116','<Blog: FastAPI series-1>',1,'[{\"added\": {}}]',8,1),(256,'2020-05-16 23:35:24.333365','116','<Blog: FastAPI series-1>',2,'[]',8,1),(257,'2020-05-16 23:47:57.239506','116','<Blog: FastAPI series-1>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(258,'2020-05-16 23:51:58.273884','116','<Blog: FastAPI series-1>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(259,'2020-05-17 07:20:17.392790','116','<Blog: FastAPI series-1>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(260,'2020-05-17 07:21:48.437758','116','<Blog: FastAPI series-1>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(261,'2020-05-17 07:21:56.476176','116','<Blog: FastAPI series-1>',2,'[]',8,1),(262,'2020-05-17 08:01:17.142243','117','<Blog: FastAPI series-2>',1,'[{\"added\": {}}]',8,1),(263,'2020-05-17 08:40:08.895494','117','<Blog: FastAPI series-2>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(264,'2020-05-17 09:09:13.015785','117','<Blog: FastAPI series-2>',2,'[]',8,1),(265,'2020-05-17 09:49:38.456345','117','<Blog: FastAPI series-2>',2,'[]',8,1),(266,'2020-05-17 09:54:04.147180','117','<Blog: FastAPI series-2>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(267,'2020-05-17 10:59:26.031215','117','<Blog: FastAPI series-2>',2,'[]',8,1),(268,'2020-05-17 11:17:21.116278','117','<Blog: FastAPI series-2>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(269,'2020-05-17 12:01:30.631820','117','<Blog: FastAPI series-2>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(270,'2020-05-17 12:15:50.179585','117','<Blog: FastAPI series-2>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(271,'2020-05-17 12:25:43.997870','117','<Blog: FastAPI series-2>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(272,'2020-05-17 12:25:50.454266','117','<Blog: FastAPI series-2>',2,'[]',8,1),(273,'2020-05-17 12:27:54.087540','117','<Blog: FastAPI series-2>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(274,'2020-05-17 12:30:27.810682','117','<Blog: FastAPI series-2>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(275,'2020-05-17 15:01:58.891340','117','<Blog: FastAPI series-2>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(276,'2020-05-17 15:21:34.656271','117','<Blog: FastAPI series-2>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(277,'2020-05-17 16:59:23.310307','117','<Blog: FastAPI series-2>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(278,'2020-06-04 22:34:10.668034','8','English',1,'[{\"added\": {}}]',7,1),(279,'2020-06-04 22:45:35.348214','118','<Blog: Series of English>',1,'[{\"added\": {}}]',8,1),(280,'2020-06-04 22:57:20.765768','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(281,'2020-06-04 23:09:29.749240','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(282,'2020-06-04 23:10:09.574819','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(283,'2020-06-04 23:12:47.903615','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(284,'2020-06-04 23:19:05.430464','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(285,'2020-06-04 23:20:15.761124','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(286,'2020-06-04 23:22:19.344184','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(287,'2020-06-04 23:25:52.016212','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(288,'2020-06-04 23:27:28.056117','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(289,'2020-06-04 23:30:43.060092','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(290,'2020-06-04 23:31:30.897806','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(291,'2020-06-04 23:32:38.535782','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(292,'2020-06-04 23:33:27.013337','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(293,'2020-06-04 23:40:57.108103','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(294,'2020-06-04 23:43:44.645692','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(295,'2020-06-04 23:52:13.349226','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(296,'2020-06-05 00:24:37.811932','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(297,'2020-06-05 21:54:38.875281','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(298,'2020-06-05 22:34:07.054072','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(299,'2020-06-05 23:11:13.844012','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(300,'2020-06-05 23:30:41.831407','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(301,'2020-06-05 23:53:54.582590','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(302,'2020-06-06 10:10:48.385846','118','<Blog: Series of English>',2,'[]',8,1),(303,'2020-06-06 10:36:32.295250','118','<Blog: Series of English>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(304,'2020-06-06 10:36:59.241127','118','<Blog: Series of English>',2,'[]',8,1),(305,'2020-06-06 13:52:01.792937','119','<Blog: Spring 生词记录（2）>',1,'[{\"added\": {}}]',8,1),(306,'2020-06-06 17:58:27.436957','119','<Blog: Spring 生词记录（2）>',2,'[]',8,1),(307,'2020-07-09 00:05:55.891716','9','vim小记',1,'[{\"added\": {}}]',7,1),(308,'2020-07-09 00:19:19.860705','120','<Blog: vim设置当前行效果>',1,'[{\"added\": {}}]',8,1),(309,'2020-07-09 00:20:12.009175','120','<Blog: vim设置当前行效果>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(310,'2020-07-09 00:23:02.887853','120','<Blog: vim设置当前行效果>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(311,'2020-07-26 12:36:04.855760','121','<Blog: vimrc备份>',1,'[{\"added\": {}}]',8,1),(312,'2020-08-05 00:05:14.469751','122','<Blog: 后台启用markdown>',1,'[{\"added\": {}}]',8,1),(313,'2020-08-05 00:05:40.645224','122','<Blog: 后台启用markdown>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',8,1),(314,'2020-08-05 00:08:31.173811','122','<Blog: 后台启用markdown>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(315,'2020-08-05 00:09:16.543121','122','<Blog: 后台启用markdown>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(316,'2020-08-05 00:10:11.600442','122','<Blog: 后台启用markdown>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(317,'2020-08-08 16:39:26.197321','123','<Blog: 在chrome浏览器使用vim编写文字>',1,'[{\"added\": {}}]',8,1),(318,'2020-08-08 16:41:06.001658','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(319,'2020-08-08 16:44:54.221165','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(320,'2020-08-08 16:54:07.182467','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(321,'2020-08-08 16:55:11.684910','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(322,'2020-08-08 16:56:39.360008','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(323,'2020-08-08 16:57:39.314297','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(324,'2020-08-08 16:58:21.959244','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(325,'2020-08-08 17:01:18.349066','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(326,'2020-08-08 17:02:08.072502','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(327,'2020-08-08 17:12:57.544524','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(328,'2020-08-08 17:13:53.914164','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(329,'2020-08-08 17:14:17.652192','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(330,'2020-08-08 17:16:42.182653','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(331,'2020-08-08 17:17:27.001546','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(332,'2020-08-08 17:18:37.196506','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(333,'2020-08-08 17:20:25.366468','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(334,'2020-08-08 17:21:52.028028','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(335,'2020-08-08 17:22:31.003379','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(336,'2020-08-08 17:23:05.747668','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(337,'2020-08-08 17:23:57.672574','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(338,'2020-08-08 17:24:51.980931','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(339,'2020-08-08 22:25:33.293819','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(340,'2020-08-08 22:39:26.171877','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(341,'2020-08-09 07:26:27.212718','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(342,'2020-08-09 11:14:36.657647','124','<Blog: 使用vim-go>',1,'[{\"added\": {}}]',8,1),(343,'2020-08-18 20:38:59.836869','10','汇编',1,'[{\"added\": {}}]',7,1),(344,'2020-08-19 21:43:04.854971','125','<Blog: 基本概念>',1,'[{\"added\": {}}]',8,1),(345,'2020-08-21 21:47:34.982607','125','<Blog: 基本概念>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(346,'2020-08-21 21:49:08.804797','125','<Blog: 基本概念>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(347,'2020-08-21 21:50:41.453653','125','<Blog: 基本概念>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(348,'2020-08-21 21:53:30.021517','125','<Blog: 基本概念>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(349,'2020-08-21 21:54:41.900209','125','<Blog: 基本概念>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(350,'2020-08-22 08:51:34.782828','125','<Blog: 基本概念>',2,'[]',8,1),(351,'2020-08-22 09:12:55.623830','126','<Blog: 两数之和>',1,'[{\"added\": {}}]',8,1),(352,'2020-08-22 09:14:47.240989','127','<Blog: 两数之和>',1,'[{\"added\": {}}]',8,1),(353,'2020-08-22 09:15:20.491568','126','<Blog: 两数之和>',3,'',8,1),(354,'2020-08-22 09:15:48.682145','127','<Blog: 两数之和>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(355,'2020-08-22 09:16:33.871806','127','<Blog: 两数之和>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(356,'2020-08-22 09:16:47.224328','127','<Blog: 两数之和>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(357,'2020-08-22 09:17:04.160259','127','<Blog: 两数之和>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(358,'2020-08-22 09:17:22.520735','127','<Blog: 两数之和>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(359,'2020-08-22 11:45:57.389180','127','<Blog: 两数之和>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(360,'2020-08-22 11:47:14.327485','127','<Blog: 两数之和>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(361,'2020-08-22 11:47:28.733403','127','<Blog: 两数之和>',2,'[]',8,1),(362,'2020-08-22 11:53:16.645403','128','<Blog: Container With Most Water>',1,'[{\"added\": {}}]',8,1),(363,'2020-08-22 12:14:48.029299','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(364,'2020-08-22 12:15:07.743273','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(365,'2020-08-22 12:15:36.307966','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(366,'2020-08-22 12:36:25.396837','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(367,'2020-08-22 12:37:30.456279','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(368,'2020-08-22 12:37:49.843036','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(369,'2020-08-22 14:17:58.360248','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(370,'2020-08-22 14:18:26.005654','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(371,'2020-08-22 14:18:44.422309','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(372,'2020-08-22 14:22:21.757418','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(373,'2020-08-22 14:22:54.301392','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(374,'2020-08-22 14:23:18.590721','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(375,'2020-08-22 14:23:39.405881','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(376,'2020-08-22 14:24:16.239126','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(377,'2020-08-22 14:24:40.171701','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(378,'2020-08-22 14:26:05.258314','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(379,'2020-08-22 14:26:49.138266','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(380,'2020-08-22 14:30:40.839362','128','<Blog: Container With Most Water>',2,'[]',8,1),(381,'2020-08-22 14:31:16.987449','11','markdown',1,'[{\"added\": {}}]',7,1),(382,'2020-08-22 14:33:32.797810','129','<Blog: LaTex Math>',1,'[{\"added\": {}}]',8,1),(383,'2020-08-22 14:34:00.212367','129','<Blog: LaTex Math>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(384,'2020-08-22 14:34:25.449613','129','<Blog: LaTex Math>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(385,'2020-08-22 14:35:01.433036','129','<Blog: LaTex Math>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(386,'2020-08-22 14:35:25.328925','129','<Blog: LaTex Math>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(387,'2020-08-22 14:36:23.666658','129','<Blog: LaTex Math>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(388,'2020-08-22 14:42:59.812038','129','<Blog: LaTex Math>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(389,'2020-08-22 14:44:11.125995','129','<Blog: LaTex Math>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(390,'2020-08-22 14:44:36.229823','129','<Blog: LaTex Math>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(391,'2020-08-22 14:45:34.922980','129','<Blog: LaTex Math>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(392,'2020-08-22 14:48:11.746291','129','<Blog: LaTex Math>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(393,'2020-08-22 14:48:29.879707','129','<Blog: LaTex Math>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(394,'2020-08-22 14:49:20.110378','129','<Blog: LaTex Math>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(395,'2020-08-22 14:50:01.358028','129','<Blog: LaTex Math>',3,'',8,1),(396,'2020-08-22 14:55:52.389731','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(397,'2020-08-22 14:57:53.519031','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(398,'2020-08-22 14:58:31.516595','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(399,'2020-08-22 17:15:31.995819','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(400,'2020-08-22 17:20:50.801282','128','<Blog: Container With Most Water>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(401,'2020-08-22 21:49:13.394762','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(402,'2020-08-22 21:50:34.593602','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(403,'2020-08-22 21:51:00.080929','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(404,'2020-08-22 21:52:19.829306','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(405,'2020-08-22 21:52:42.587187','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(406,'2020-08-22 21:53:10.486892','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(407,'2020-08-22 21:53:36.425559','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(408,'2020-08-22 22:25:20.198871','123','<Blog: 在chrome浏览器使用vim编写文字>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(409,'2020-08-23 18:47:10.474677','130','<Blog: 3sum or triplets>',1,'[{\"added\": {}}]',8,1),(410,'2020-08-24 23:21:27.352496','131','<Blog: 3Sum Closest>',1,'[{\"added\": {}}]',8,1),(411,'2020-08-25 23:23:18.535353','132','<Blog: 4Sum>',1,'[{\"added\": {}}]',8,1),(412,'2020-08-31 22:26:42.155945','133','<Blog: Remove Duplicates From Sorted Array>',1,'[{\"added\": {}}]',8,1),(413,'2020-08-31 22:28:01.686643','133','<Blog: Remove Duplicates From Sorted Array>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(414,'2020-08-31 22:29:52.631775','133','<Blog: Remove Duplicates From Sorted Array>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(415,'2020-08-31 22:31:33.172441','133','<Blog: Remove Duplicates From Sorted Array>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(416,'2020-08-31 22:33:51.581425','133','<Blog: Remove Duplicates From Sorted Array>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(417,'2020-08-31 22:34:18.966838','133','<Blog: Remove Duplicates From Sorted Array>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(418,'2020-09-02 22:13:35.296964','130','<Blog: 3sum or triplets>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(419,'2020-09-02 22:14:35.398211','130','<Blog: 3sum or triplets>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(420,'2020-09-02 22:15:24.429696','130','<Blog: 3sum or triplets>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(421,'2020-09-02 22:15:56.772313','130','<Blog: 3sum or triplets>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(422,'2020-09-03 08:27:41.441444','134','<Blog: Remove Element>',1,'[{\"added\": {}}]',8,1),(423,'2020-09-03 08:30:42.416216','134','<Blog: Remove Element>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(424,'2020-09-13 17:27:08.446142','12','ML',1,'[{\"added\": {}}]',7,1),(425,'2020-09-13 17:27:13.603180','135','<Blog: Chain Rule and Markov Assumption>',1,'[{\"added\": {}}]',8,1),(426,'2020-09-13 17:28:02.210305','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(427,'2020-09-13 17:29:57.471629','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(428,'2020-09-13 17:31:25.321809','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(429,'2020-09-13 17:32:43.688884','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(430,'2020-09-13 17:35:00.119620','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(431,'2020-09-13 17:42:37.856605','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(432,'2020-09-13 17:45:42.957539','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(433,'2020-09-13 17:49:50.207977','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(434,'2020-09-13 17:51:31.493318','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(435,'2020-09-13 17:52:21.419465','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(436,'2020-09-13 17:52:45.798901','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(437,'2020-09-13 17:54:26.111532','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(438,'2020-09-13 17:54:45.337718','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(439,'2020-09-13 17:55:53.964812','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(440,'2020-09-13 17:58:30.352886','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(441,'2020-09-13 18:03:07.678564','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(442,'2020-09-13 18:04:19.174128','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(443,'2020-09-13 18:06:06.842640','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(444,'2020-09-13 18:06:38.492989','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(445,'2020-09-13 18:08:17.011496','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(446,'2020-09-13 18:12:50.634502','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(447,'2020-09-13 18:13:49.294710','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(448,'2020-09-13 18:14:13.801801','135','<Blog: Chain Rule and Markov Assumption>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(449,'2020-09-26 10:36:50.178140','136','<Blog: First Missing Positive>',1,'[{\"added\": {}}]',8,1),(450,'2020-09-26 10:38:51.058573','136','<Blog: First Missing Positive>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(451,'2020-09-30 17:55:45.747231','137','<Blog: Trapping Rain Water>',1,'[{\"added\": {}}]',8,1),(452,'2020-10-07 21:56:45.861751','138','<Blog: Rotate Image>',1,'[{\"added\": {}}]',8,1),(453,'2020-10-07 22:05:01.504375','138','<Blog: Rotate Image>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(454,'2020-10-21 18:27:38.255961','13','随笔',1,'[{\"added\": {}}]',7,1),(455,'2020-10-21 18:27:45.604004','139','<Blog: 十月杂谈>',1,'[{\"added\": {}}]',8,1),(456,'2020-10-21 22:33:52.621095','139','<Blog: 十月杂谈>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(457,'2020-11-05 22:16:16.033748','140','<Blog: Maximum Subarray>',1,'[{\"added\": {}}]',8,1),(458,'2020-11-05 22:17:28.565354','140','<Blog: Maximum Subarray>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(459,'2020-11-08 22:54:30.857462','141','<Blog: Spiral Matrix>',1,'[{\"added\": {}}]',8,1),(460,'2020-11-08 22:56:34.678225','141','<Blog: Spiral Matrix>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(461,'2020-11-08 22:57:29.864078','141','<Blog: Spiral Matrix>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(462,'2020-11-26 21:50:21.569476','142','<Blog: Word of the day-- grudge>',1,'[{\"added\": {}}]',8,1),(463,'2021-03-25 21:43:12.467665','143','<Blog: good bye>',1,'[{\"added\": {}}]',8,1),(464,'2021-10-20 05:07:43.419253','13','随笔',2,'[]',7,1),(465,'2021-10-20 14:19:35.077803','144','<Blog: 我回来啦>',1,'[{\"added\": {}}]',8,1),(466,'2021-10-20 15:24:33.218663','145','<Blog: 数据备份和恢复>',1,'[{\"added\": {}}]',8,1),(467,'2021-10-20 15:31:42.958926','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(468,'2021-10-20 15:34:38.258532','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(469,'2021-10-20 15:39:35.228024','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(470,'2021-10-20 15:40:02.724594','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(471,'2021-10-20 15:40:56.637688','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(472,'2021-10-20 15:43:05.464195','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(473,'2021-10-20 15:43:38.102989','145','<Blog: 数据备份和恢复>',2,'[]',8,1),(474,'2021-10-20 15:45:14.791990','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(475,'2021-10-20 15:46:43.746486','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(476,'2021-10-20 15:48:12.672637','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(477,'2021-10-20 15:48:57.746701','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(478,'2021-10-20 15:49:53.774275','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(479,'2021-10-20 15:50:20.950282','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(480,'2021-10-20 15:51:08.302809','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(481,'2021-10-20 15:51:52.574775','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(482,'2021-10-20 15:53:28.619558','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(483,'2021-10-20 15:54:17.404360','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(484,'2021-10-20 15:54:37.624312','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(485,'2021-10-20 15:55:47.697530','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(486,'2021-10-20 15:56:10.011873','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(487,'2021-10-20 15:57:27.551948','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(488,'2021-10-20 15:58:54.676475','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(489,'2021-10-20 15:59:13.604844','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(490,'2021-10-20 16:00:07.157603','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(491,'2021-10-20 16:02:27.621193','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(492,'2021-10-20 16:03:24.842122','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(493,'2021-10-20 16:06:01.024180','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(494,'2021-10-20 16:09:24.214054','145','<Blog: 数据备份和恢复>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(495,'2021-10-20 16:11:03.654950','145','<Blog: 数据备份和恢复>',2,'[]',8,1),(496,'2021-10-20 16:41:25.991140','146','<Blog: 面向对象>',1,'[{\"added\": {}}]',8,1),(497,'2021-10-20 19:18:00.715554','14','TypeScript',1,'[{\"added\": {}}]',7,1),(498,'2021-10-20 19:18:34.490729','147','<Blog: 认识TypeScript>',1,'[{\"added\": {}}]',8,1),(499,'2021-10-20 19:21:59.609530','148','<Blog: 认识JVM>',1,'[{\"added\": {}}]',8,1),(500,'2021-10-20 19:25:37.213264','148','<Blog: 认识JVM>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(501,'2021-10-20 19:26:20.609473','148','<Blog: 认识JVM>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(502,'2021-10-20 19:41:10.161571','149','<Blog: 累加载子系统>',1,'[{\"added\": {}}]',8,1),(503,'2021-10-20 19:41:43.308094','149','<Blog: 类加载子系统>',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',8,1),(504,'2021-10-20 19:43:01.505752','149','<Blog: 类加载子系统>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(505,'2021-10-20 19:43:23.927630','149','<Blog: 类加载子系统>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(506,'2021-10-20 19:46:43.041556','149','<Blog: 类加载子系统>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(507,'2021-10-20 19:47:16.382692','149','<Blog: 类加载子系统>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(508,'2021-10-20 19:47:51.815720','149','<Blog: 类加载子系统>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(509,'2021-10-20 19:48:09.638388','149','<Blog: 类加载子系统>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(510,'2021-10-20 19:49:25.953558','149','<Blog: 类加载子系统>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(511,'2021-10-20 19:50:41.887659','149','<Blog: 类加载子系统>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(512,'2021-10-20 19:53:22.583935','149','<Blog: 类加载子系统>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(513,'2021-10-20 19:53:39.351148','149','<Blog: 类加载子系统>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(514,'2021-10-20 19:54:04.766560','149','<Blog: 类加载子系统>',2,'[]',8,1),(515,'2021-10-20 19:55:37.133504','149','<Blog: 类加载子系统>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(516,'2021-10-20 19:56:15.512660','149','<Blog: 类加载子系统>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(517,'2021-10-20 20:04:40.235604','149','<Blog: 类加载子系统>',2,'[]',8,1),(518,'2021-10-20 20:05:07.364573','150','<Blog: 关于classLoader>',1,'[{\"added\": {}}]',8,1),(519,'2021-10-20 20:07:04.407106','150','<Blog: 关于classLoader>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(520,'2021-10-20 20:07:36.053919','150','<Blog: 关于classLoader>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(521,'2021-10-20 20:11:16.361980','151','<Blog: 运行时数据区概述及线程>',1,'[{\"added\": {}}]',8,1),(522,'2021-10-20 20:13:19.325447','151','<Blog: 运行时数据区概述及线程>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(523,'2021-10-20 20:16:00.278841','151','<Blog: 运行时数据区概述及线程>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(524,'2021-10-20 20:16:03.901648','151','<Blog: 运行时数据区概述及线程>',2,'[]',8,1),(525,'2021-10-21 09:52:18.049061','152','<Blog: 程序计数器>',1,'[{\"added\": {}}]',8,1),(526,'2021-10-21 09:55:02.444138','152','<Blog: 程序计数器>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(527,'2021-10-21 09:56:24.699554','152','<Blog: 程序计数器>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(528,'2021-10-21 09:56:52.728954','152','<Blog: 程序计数器>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(529,'2021-10-21 09:57:10.860449','152','<Blog: 程序计数器>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(530,'2021-10-21 10:01:01.186982','152','<Blog: 程序计数器>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(531,'2021-10-21 10:01:18.512031','152','<Blog: 程序计数器>',2,'[]',8,1),(532,'2021-10-21 10:19:48.222068','153','<Blog: 虚拟机栈>',1,'[{\"added\": {}}]',8,1),(533,'2021-10-21 10:26:06.675545','153','<Blog: 虚拟机栈>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(534,'2021-10-21 10:44:37.950745','153','<Blog: 虚拟机栈>',2,'[]',8,1),(535,'2021-10-21 13:37:13.722604','154','<Blog: 4种方法调用指令>',1,'[{\"added\": {}}]',8,1),(536,'2021-10-21 13:38:02.794428','154','<Blog: 4种方法调用指令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(537,'2021-10-21 14:51:07.037588','154','<Blog: 4种方法调用指令>',2,'[]',8,1),(538,'2021-10-21 14:51:38.701772','155','<Blog: 动态导包和已导入的模块>',1,'[{\"added\": {}}]',8,1),(539,'2021-10-21 14:58:51.075017','156','<Blog: 方法返回地址>',1,'[{\"added\": {}}]',8,1),(540,'2021-10-21 14:59:46.840339','156','<Blog: 方法返回地址>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(541,'2021-10-21 15:01:27.455625','156','<Blog: 方法返回地址>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(542,'2021-10-21 15:02:17.655186','156','<Blog: 方法返回地址>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(543,'2021-10-21 15:02:58.786533','156','<Blog: 方法返回地址>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(544,'2021-10-21 15:03:35.258346','156','<Blog: 方法返回地址>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(545,'2021-10-21 15:03:47.840488','156','<Blog: 方法返回地址>',2,'[]',8,1),(546,'2021-10-21 15:13:15.107077','157','<Blog: 堆空间的概述>',1,'[{\"added\": {}}]',8,1),(547,'2021-10-21 15:15:11.082467','157','<Blog: 堆空间的概述>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(548,'2021-10-21 15:21:00.621851','157','<Blog: MajorGC_MinorGC_FullGC>',2,'[{\"changed\": {\"fields\": [\"title\", \"content\"]}}]',8,1),(549,'2021-10-21 15:21:34.835872','157','<Blog: MajorGC_MinorGC_FullGC>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(550,'2021-10-21 15:22:30.384468','157','<Blog: MajorGC_MinorGC_FullGC>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',8,1),(551,'2021-10-21 15:23:02.457138','157','<Blog: MajorGC_MinorGC_FullGC>',2,'[]',8,1),(552,'2021-10-26 20:23:59.710977','158','<Blog: Something made me chuckle a bit>',1,'[{\"added\": {}}]',8,1),(553,'2021-10-31 19:36:31.183065','159','<Blog: 博客添加github OAuth认证>',1,'[{\"added\": {}}]',8,1);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (1,'admin','logentry'),(3,'auth','group'),(2,'auth','permission'),(4,'auth','user'),(8,'blog','blog'),(7,'blog','blogtype'),(11,'comment','comment'),(5,'contenttypes','contenttype'),(13,'likes','likecount'),(12,'likes','likerecord'),(10,'read_record','readdetail'),(9,'read_record','readnum'),(6,'sessions','session'),(14,'userprofile','profile');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2020-02-11 15:16:49.746500'),(2,'auth','0001_initial','2020-02-11 15:17:00.623500'),(3,'admin','0001_initial','2020-02-11 15:17:02.461500'),(4,'admin','0002_logentry_remove_auto_add','2020-02-11 15:17:02.511500'),(5,'contenttypes','0002_remove_content_type_name','2020-02-11 15:17:03.586500'),(6,'auth','0002_alter_permission_name_max_length','2020-02-11 15:17:04.321500'),(7,'auth','0003_alter_user_email_max_length','2020-02-11 15:17:05.049500'),(8,'auth','0004_alter_user_username_opts','2020-02-11 15:17:05.094000'),(9,'auth','0005_alter_user_last_login_null','2020-02-11 15:17:05.587000'),(10,'auth','0006_require_contenttypes_0002','2020-02-11 15:17:05.623000'),(11,'auth','0007_alter_validators_add_error_messages','2020-02-11 15:17:05.673000'),(12,'auth','0008_alter_user_username_max_length','2020-02-11 15:17:07.327500'),(13,'auth','0009_alter_user_last_name_max_length','2020-02-11 15:17:08.285500'),(14,'sessions','0001_initial','2020-02-11 15:17:08.776500'),(15,'blog','0001_initial','2020-02-11 15:19:22.889000'),(16,'blog','0002_auto_20200214_2057','2020-02-14 12:57:31.155000'),(17,'blog','0003_auto_20200215_1156','2020-02-15 03:57:06.248000'),(18,'blog','0004_auto_20200215_1834','2020-02-15 18:34:54.276000'),(19,'blog','0005_blog_read_num','2020-02-15 19:37:04.222000'),(20,'blog','0006_remove_blog_read_num','2020-02-18 20:25:00.878000'),(21,'read_record','0001_initial','2020-02-18 20:25:03.924000'),(22,'read_record','0002_readdetail','2020-02-18 21:55:57.859000'),(23,'comment','0001_initial','2020-02-19 15:45:45.826000'),(24,'comment','0002_auto_20200219_1601','2020-02-19 16:01:32.889000'),(25,'comment','0003_auto_20200220_2151','2020-02-20 21:51:19.240000'),(26,'comment','0004_auto_20200220_2159','2020-02-20 21:59:53.171000'),(27,'comment','0005_auto_20200220_2203','2020-02-20 22:03:36.957000'),(28,'blog','0007_auto_20200221_1919','2020-02-21 19:19:30.833000'),(29,'comment','0006_auto_20200221_1919','2020-02-21 19:19:37.126000'),(30,'read_record','0003_auto_20200221_1919','2020-02-21 19:19:39.925000'),(31,'likes','0001_initial','2020-02-21 22:07:30.017000'),(32,'userprofile','0001_initial','2020-02-24 15:51:28.082000');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('0m1al10tdy71tzh4dvs3b02o0xnjrb0q','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-08-23 08:00:13.761708'),('0r31fa30f9n96cb6boh0mnf7fnfnfrvz','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-03-29 23:21:33.422200'),('1cbiuhljol64g6zf0juumgq4xmwg2hci','YTk0ZTEzMjdmN2NkYjYwMDBmMjQ1NGM5Y2VmNzMyOGFmYTc0MmNiYjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJmNjQyODEyZTQyMWY1YTA5Yjc5MjBhZGI1ZjBhMDlmNjVkMGRlYzk0In0=','2021-12-05 11:13:08.738176'),('1s7nvah7g1xt7zipxnwd83ft9ky1lgwi','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-22 12:35:20.910353'),('1yyfyg0i46qwse2c2s2glikirs5j7fiw','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-03-29 23:25:22.333000'),('1zlvf9c3mjdzd9bmsst8e32oz04xmg5p','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-23 23:51:27.868609'),('24thwbasdjas4xxypga4gdi9na5m9nj4','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-31 14:01:10.651001'),('26kq2jmd4e5o7zsto9hbrlcxokuz9jrz','YTk0ZTEzMjdmN2NkYjYwMDBmMjQ1NGM5Y2VmNzMyOGFmYTc0MmNiYjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJmNjQyODEyZTQyMWY1YTA5Yjc5MjBhZGI1ZjBhMDlmNjVkMGRlYzk0In0=','2021-11-03 05:03:43.220990'),('3peuhn328ci0t4b003u3kbc7qxfema0y','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-27 09:09:03.363442'),('41rwvljlw8k3yceytaz98xtahbp2g8cp','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-08-18 22:47:20.195319'),('48brw29ih8ldl0t3prha2nso7yd15073','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2021-04-08 21:29:26.156920'),('4hez82556gu4cpaogmnn5vh760fy9byl','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-08-10 19:43:38.315051'),('4m2yph7np984uqhx3ybo9scgbkrzokc2','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-09-04 22:26:49.828348'),('4vij8cqbk2wwn2zkg29fp7e4bsl4juyf','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-07-31 22:49:12.810238'),('4vw6p82750mr1q6rv015nbtmi7v9yv1u','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-09-26 16:41:44.783179'),('4xyspio6llch0iu44bibr95guatm3tdh','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-27 20:10:28.934068'),('4z73n5jnnib2g4mkiiq5ogdrtfdnfwna','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-16 05:28:14.126471'),('5gkpzpcytftvkzaulp9170hbbqdyrhtc','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-11-29 19:31:36.869583'),('5psvl5p472z2r5dfdm5bm7yjuphb0l8r','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-06-04 19:16:49.974357'),('5twwe86v8r580n952sqbed29rtwqlmnz','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-08-19 00:14:49.328031'),('5uv3t1cigqghr1wlpvg8nf56cmeqeo1l','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-03-29 23:27:12.040000'),('5y0iimql2e1433170q40doedqihf5du1','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-03-29 23:32:21.555000'),('5yns5h2fp2l9552u78wio41oq5oox8f6','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-08-25 19:04:23.040678'),('6xlf9iw1i10byhmh355zi9n7udnv1eq5','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-28 13:10:49.594378'),('7r4x0f2c9f63ft29gcj4wivbl7k0f8o6','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-23 20:00:38.937389'),('7t24oqa4i6vj02hvnkjpekmxj23ic6ae','NzA5YWE4OGUxNTg1NjkwYTE5ZDAzZTk4NTZlODFmNTFhOTRjMGQ5Yzp7InJlZ2lzdGVyX2NvZGUiOiJpYkN2Iiwic2VuZF9jb2RlX3RpbWUiOjE1ODI2NDE5ODMsIl9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4NDMyZDA3ZGQ5MGYwZjk5YjE1ZDBhY2YzYzVhZmI5NjE2NGU1YTc4In0=','2020-03-10 22:48:19.206000'),('81hpuihck4vf1p69aptj7xf4cd8z4v20','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-11-04 22:12:23.323828'),('88o8mm2situyihew1hgta65rgsccrk29','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-08-19 19:34:55.745465'),('8h9js4s9yq5lg96mli6xsenoalto1fkz','YTk0ZTEzMjdmN2NkYjYwMDBmMjQ1NGM5Y2VmNzMyOGFmYTc0MmNiYjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJmNjQyODEyZTQyMWY1YTA5Yjc5MjBhZGI1ZjBhMDlmNjVkMGRlYzk0In0=','2021-11-19 10:47:41.067608'),('8kgp0ielluuxw78geu5xc8q0pznbl60q','YmFlZmUxOWY5YjVjOWY0YzIzYjQyNDFiYTA4OWU0MDY3ZThmNDFkYjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ZGQ3ZmY3YjNiMjA0NWYyNDE4M2RhYWVhNmY5MDlhYTU5MzEyZmQ3In0=','2020-02-25 15:20:59.820000'),('9d2tf68f2nw12mxtay8g9cxf1oun9xst','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-31 00:17:17.027924'),('9ljm974fwy171furqoz7rb5zyk5mk51d','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-09-13 07:14:19.460285'),('a68a1uslpr91ppeonutjf5pxfg0ibo1q','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-29 08:50:12.191697'),('ao5aomkez53n8k33ottgp1kx4nos1105','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-09-06 09:42:49.484154'),('b6p4kyqvrjf669a0vncqhdxvrjzmmzms','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-09-08 00:25:06.786604'),('bezem2llsm81fra0xydsf7f32a96bjyd','YTk0ZTEzMjdmN2NkYjYwMDBmMjQ1NGM5Y2VmNzMyOGFmYTc0MmNiYjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJmNjQyODEyZTQyMWY1YTA5Yjc5MjBhZGI1ZjBhMDlmNjVkMGRlYzk0In0=','2021-11-03 04:57:41.672611'),('c8dae61siuuzxqbf7ksmk0ntzugx9mo2','YTk0ZTEzMjdmN2NkYjYwMDBmMjQ1NGM5Y2VmNzMyOGFmYTc0MmNiYjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJmNjQyODEyZTQyMWY1YTA5Yjc5MjBhZGI1ZjBhMDlmNjVkMGRlYzk0In0=','2021-11-03 04:58:50.777945'),('cmkdwfmcwtudkqrlr1evp26ceont9ux4','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-29 08:51:04.668545'),('cos5k9qa4hrmzixf150l7e0sk0k8tbcn','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-06-26 22:31:18.828726'),('cqtxr2gvg7ho57pp1aofb02s61z10yp2','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-08-27 08:21:31.068751'),('dpdl21nc5q53zh2ytaob5hbx72aqhgd4','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-09-03 20:02:09.049761'),('dxy0kb5k9kmuamjdf4atbalvtdisveil','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-07-23 00:04:48.989601'),('dy1ze9ly4yhzdix0ee3d62j7v0lw66wj','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-09-15 07:31:37.928037'),('e12evurlhg5yha1zh76kmeojthqn5xjz','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-09-05 21:44:19.879557'),('e13cgywn0oandlaiqbnfj9xg9rw3rfuo','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-07-01 08:42:54.331765'),('ebuuivgtmf0lt47110ls189coi65t4r3','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-27 22:48:24.054720'),('ectr25ajnvuavft2qdei714lt4729pg0','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-03-29 23:26:30.335000'),('emye9alvzxcwt3mv36xfrtfg2u25yrut','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-10-14 17:29:10.012193'),('eplyq5af0d7a4ubidr1r9n1o3xx13vaa','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-20 09:17:01.355370'),('fb6aml8xmm4xilz45fmrbkqhvb9bgiwb','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-06-19 00:34:46.364378'),('fh5m6nc2knu3nbj9dbsxxco1jgkng24i','NjQ0NWEzY2ZmNDg3MWZmNWQxZGYxM2M2MTExYjUyM2RlODkxODYwZjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3Iiwic2ltcGxldWlfMjAyMDA1MTAiOnRydWV9','2020-05-24 12:42:54.399654'),('flvixf0nd6cvolksl1r44973xfgjbksk','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-03-29 23:23:45.950000'),('g21gak4ncuyl0t1yo6zm67bq414ypr4q','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-27 12:50:44.930396'),('g8d8a0x4wf9emedqqmqk9c7n5npbs8su','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-08-25 12:19:59.609869'),('h7o3j27dazx07vbi9aroya6fl71mh8mt','MmRjNmUzNDQ5NmE2ZjllYjgxYjk5NzE1MTAxZmEwMjQ1YjRmNzcxOTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3Iiwic2ltcGxldWlfMjAyMDAzMzAiOnRydWV9','2020-04-13 10:37:50.486583'),('hcops2m9a03wg4pr3t39jl0b2kcfcas4','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-07-05 09:54:02.540740'),('hm42djrna6teexvf1c0omyphg8p88g58','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-08-31 13:18:06.923293'),('hn0evmgs9nfzh3zx0i3r7aqyzf5r8k14','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-09-28 18:58:05.138393'),('i0wzzf1vcn0vb9lh2dc9n7047cq6ups0','OWVjMTRlOWJjZTExYTUzMTQ2NTNmMTlhYWRmODI5ZGVkMzUwYTk3Mzp7InJlZ2lzdGVyX2NvZGUiOiJ0U2VRIiwic2VuZF9jb2RlX3RpbWUiOjE1ODU0ODg2NzR9','2020-04-12 21:31:16.081466'),('i4hd1p0asq8a90hgk4jycg0r9tuw7gyb','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-05 12:59:04.373974'),('j0ppvr8vb16cjl7hxbyfg47k9m369vam','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-11-19 22:04:26.684678'),('k8w6qwntn2rfyrh5eq8zidcr2tlx3snn','ODI0MzFjM2VjNmEyNzE2NTMwMWE1YjdiNTI0MTRjNWQ3NGVjNmJkNDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3Iiwic2ltcGxldWlfMjAyMDAzMjYiOnRydWUsInNpbXBsZXVpXzIwMjAwMzI3Ijp0cnVlLCJzaW1wbGV1aV8yMDIwMDMzMCI6dHJ1ZSwic2ltcGxldWlfMjAyMDA0MDUiOnRydWUsInNpbXBsZXVpXzIwMjAwNDA2Ijp0cnVlLCJzaW1wbGV1aV8yMDIwMDQxNSI6dHJ1ZSwic2ltcGxldWlfMjAyMDA0MTYiOnRydWUsInNpbXBsZXVpXzIwMjAwNDIwIjp0cnVlLCJzaW1wbGV1aV8yMDIwMDQyMiI6dHJ1ZX0=','2020-05-06 20:44:39.108338'),('kggc74ohai3mgmserygkoike0kaeihs7','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-06-22 19:15:52.915507'),('kygoa6pd8dpdvkq7fh2jdipyi3hlj376','ZTE4MWQ0OWUyNmEwZDEzYWIyM2FkMDllMzgwMWM0OTQ4ZTM1MzM4Mzp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3Iiwic2ltcGxldWlfMjAyMDA1MDgiOnRydWUsInNpbXBsZXVpXzIwMjAwNTEwIjp0cnVlLCJzaW1wbGV1aV8yMDIwMDUxNiI6dHJ1ZSwic2ltcGxldWlfMjAyMDA1MTciOnRydWV9','2020-05-31 12:26:49.690617'),('m2ea75ye8j0gmdmhrjn3mg8jblxjn34m','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-09-05 22:35:51.508998'),('mwnhrgm0i6lkdpng77vqtm0hy8z2gd6h','ZGM5N2NmMGVhNWM5Y2YyMDk0ZGYxOWFmOTE5MGE0MTg3NWFkOTQwOTp7InNlbmRfY29kZV90aW1lIjoxNTkxNjE1OTk4LCJfYXV0aF91c2VyX2lkIjoiMTAiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImIzMjIzZGRhODBiZjNlMTdjZjRjMTBlNTU3MmEwYTMxMzc5MjBjMGQifQ==','2020-06-22 19:33:42.950238'),('nc8l0mlfofkdfi45suh48p98jg8higw1','Y2U0Yzk1ODAyNWEwZWNkYjJmZmExNzkyMmFjMmU1MTRiYTI0MDZkZDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3Iiwic2ltcGxldWlfMjAyMDAzMTkiOnRydWUsInNpbXBsZXVpXzIwMjAwMzI0Ijp0cnVlLCJzaW1wbGV1aV8yMDIwMDMyNSI6dHJ1ZX0=','2020-04-08 22:22:40.160000'),('nuc8rtdfxyy1gxksnbzrtd9euje9d907','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-08-21 13:18:05.850825'),('on4bmqdowsntb6tbibmu46cmqhhbo7fb','Zjg3N2ZkNGY4OTUwMjM4ZjFhNDY1NmNhYWQ0Mjc4ODMxMGUwYzY1OTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3Iiwic2ltcGxldWlfMjAyMDA2MDQiOnRydWV9','2020-06-18 22:33:17.898236'),('oyymexbrljazogpa1qacnziz3qt9n7wz','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-17 02:07:15.846340'),('pdm2ccg3yue3wypaajowrju4ymxqe35j','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-29 08:52:02.913055'),('pe12urcjouloe82d5vhbplgusa43f5pa','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2021-01-17 21:10:18.037434'),('pfemw5jy7bx7xu6iakq8eacw15dea3tj','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-09-07 20:06:01.734511'),('pldkyxidtva3h88m485j9ezaf94hb6ps','YmFmYWY1MDdhZDIzZTU2Y2Y0NTcxYTgxNzk5NTc1ZjljODcyNTQ3OTp7Il9hdXRoX3VzZXJfaWQiOiI2IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJiMGQ0YWRlNWU0MGM4ZjM2NzM3YmNiZWY1Y2M0NmJiYWMwMmY3MTlkIn0=','2020-03-06 19:36:00.911000'),('pmh46ohu80jbrwy9j2u2q4youtfow61s','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-04-09 08:39:46.089265'),('pz429eixi9byrrudsy7bjxfugz64tohl','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-07-12 23:20:02.555146'),('qm80hmad1b3hbwkzh1kv2l7nevs5ao64','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-15 11:57:02.091781'),('r8ijdmccugdqxkpn7rrafyz8u6qsysb9','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-03-29 23:22:10.419200'),('s4bdqznyxeazk1c4tde9wa509kis7cyb','YmFlZmUxOWY5YjVjOWY0YzIzYjQyNDFiYTA4OWU0MDY3ZThmNDFkYjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ZGQ3ZmY3YjNiMjA0NWYyNDE4M2RhYWVhNmY5MDlhYTU5MzEyZmQ3In0=','2020-03-09 15:02:37.542000'),('s6c3mjmei2c1jkj9spyl2yh6v4rxkyly','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-27 09:32:50.436632'),('sbb6bb39qwi0m09o4h7jx99eb2eeyfwf','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-11-19 12:55:22.502581'),('shscj4rf2cl88ht2ocfoxvnxhgf4jxco','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-11 19:13:43.093408'),('sqrlop4d4e8s5ad13aq4h8meja16bwcr','YTk0ZTEzMjdmN2NkYjYwMDBmMjQ1NGM5Y2VmNzMyOGFmYTc0MmNiYjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJmNjQyODEyZTQyMWY1YTA5Yjc5MjBhZGI1ZjBhMDlmNjVkMGRlYzk0In0=','2021-11-03 05:04:34.549767'),('tduzmg1tis5x8ma1n91idre2yxpxtvrr','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-06-09 19:24:30.603929'),('tqj6ws2hergrpm75p0enhq9tw36mykpc','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-06-25 12:12:48.253188'),('uspcy6vn1jg9kznphid79289yu4u3jc3','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-05 19:07:29.596782'),('usqm3fsuyolwzwbqc90kmoc2pay9yn4u','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-03-29 23:27:32.410000'),('uswc27xf36rayxwogn3m6ibp9g6f4act','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2021-11-03 04:52:23.075880'),('vjzf2199m3ekoloa354xo82j5enkp178','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-03-29 23:35:09.304000'),('vwpqmw1yh9jpzps7929yfsu5tswmnwag','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-09-15 19:10:54.587794'),('wmav8zbln686cl5zf7037is79us36lzu','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2021-11-03 04:52:59.315588'),('wopnxij4gtm3pe8rfzlrrl502iwxjfve','MDdjMWJmNDlhZDc0YTJkYzQ2MTkwZWJjMzY2MDY4MjBiOGY3MmQ5ZTp7InJlZ2lzdGVyX2NvZGUiOiJMUkpiIiwic2VuZF9jb2RlX3RpbWUiOjE2MzUzMTMxNzYsIl9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJmNjQyODEyZTQyMWY1YTA5Yjc5MjBhZGI1ZjBhMDlmNjVkMGRlYzk0In0=','2021-11-14 19:32:28.733972'),('x8e4tpdddmyvsi828zstw8tltyb42xxe','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-08-22 17:05:31.705217'),('xjvspvaorje0j83y9d8izdtzpyfwvk2r','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-08-18 22:28:50.911744'),('xkfm8xn63kvmehetfbryob31hfvp5nn4','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-05 18:49:49.335119'),('xty7ty7xhdi4pvd9fxoblort7fpcicdo','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-03-29 23:26:53.847000'),('xukyyt9nxce9ufeatzjav3qvj6dqsv2x','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-11-04 15:09:28.349582'),('ygs4zge8qlvqig68ncauvz02bpjiy371','M2YwYTAzNzY4NWMyY2RkMzIwN2UwZjljMWY2YTM5ZTk5NzJkZDE0ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhOTZiYjExMWJlZWI1YTQwMTJmYjQ2MWVlMmViZGM2N2Q0YWEzNTQ3In0=','2020-11-29 10:39:11.071499'),('ynq5j2b22wbe1dplnnnv7fmx974z8i9g','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-04-09 22:59:20.215370'),('ywtki5j5owc4mznp3o92zjn5p4g45s7z','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-29 08:51:20.581043'),('z5xn5eje71fnp0dhy5kv4od0jqta3wdn','YThkMWQyOTMzZmZkZTJjZjYwODVhZDVlNTRmMmYyOTU3MWI2YWIyZTp7Il9hdXRoX3VzZXJfaWQiOiI5IiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ODViODU1MjJiNTkyMjA3ZmRkYzRkMjk3ZjI0ZDMxNWY3MGMyYjZmIn0=','2020-05-31 12:31:58.890184');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `likes_likecount`
--

DROP TABLE IF EXISTS `likes_likecount`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `likes_likecount` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `object_id` int(10) unsigned NOT NULL,
  `like_num` int(11) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `likes_likecount_content_type_id_a33eb91e_fk_django_co` (`content_type_id`),
  CONSTRAINT `likes_likecount_content_type_id_a33eb91e_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=99 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `likes_likecount`
--

LOCK TABLES `likes_likecount` WRITE;
/*!40000 ALTER TABLE `likes_likecount` DISABLE KEYS */;
INSERT INTO `likes_likecount` VALUES (1,95,1,8),(2,94,0,8),(3,93,0,8),(4,92,0,8),(5,91,2,8),(6,90,0,8),(7,89,0,8),(8,2,1,8),(9,96,1,8),(10,4,0,8),(11,88,0,8),(12,87,0,8),(13,86,0,8),(14,85,0,8),(15,84,0,8),(16,83,0,8),(17,82,0,8),(18,81,0,8),(19,80,0,8),(20,79,0,8),(21,78,0,8),(22,77,0,8),(23,76,0,8),(24,75,0,8),(25,74,0,8),(26,73,0,8),(27,72,0,8),(28,71,0,8),(29,70,0,8),(30,69,0,8),(31,68,0,8),(32,67,0,8),(33,66,0,8),(34,65,0,8),(35,3,0,8),(36,97,0,8),(37,98,1,8),(38,99,1,8),(39,100,0,8),(40,101,0,8),(41,102,0,8),(42,103,1,8),(43,104,0,8),(44,105,1,8),(45,106,0,8),(46,107,0,8),(47,108,0,8),(48,109,0,8),(49,110,0,8),(50,111,0,8),(51,112,0,8),(52,113,0,8),(53,114,0,8),(54,115,0,8),(55,116,0,8),(56,117,1,8),(57,118,0,8),(58,119,0,8),(59,120,0,8),(60,121,1,8),(61,122,1,8),(62,123,0,8),(63,124,0,8),(64,125,0,8),(65,126,0,8),(66,127,0,8),(67,128,0,8),(68,129,0,8),(69,130,0,8),(70,131,0,8),(71,132,0,8),(72,133,0,8),(73,134,0,8),(74,135,0,8),(75,136,0,8),(76,137,0,8),(77,138,0,8),(78,139,0,8),(79,140,0,8),(80,141,0,8),(81,142,0,8),(82,143,0,8),(83,144,0,8),(84,145,0,8),(85,146,0,8),(86,147,0,8),(87,148,0,8),(88,149,0,8),(89,150,0,8),(90,151,0,8),(91,152,0,8),(92,153,0,8),(93,154,0,8),(94,155,0,8),(95,156,0,8),(96,157,0,8),(97,158,0,8),(98,159,0,8);
/*!40000 ALTER TABLE `likes_likecount` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `likes_likerecord`
--

DROP TABLE IF EXISTS `likes_likerecord`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `likes_likerecord` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `object_id` int(10) unsigned NOT NULL,
  `like_time` datetime(6) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `likes_likerecord_content_type_id_4e35de35_fk_django_co` (`content_type_id`),
  KEY `likes_likerecord_user_id_c85b88bd_fk_auth_user_id` (`user_id`),
  CONSTRAINT `likes_likerecord_content_type_id_4e35de35_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `likes_likerecord_user_id_c85b88bd_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `likes_likerecord`
--

LOCK TABLES `likes_likerecord` WRITE;
/*!40000 ALTER TABLE `likes_likerecord` DISABLE KEYS */;
INSERT INTO `likes_likerecord` VALUES (9,2,'2020-02-23 18:11:02.396000',8,1),(12,96,'2020-02-24 13:49:29.829500',8,1),(14,91,'2020-02-25 23:04:56.369000',8,1),(15,91,'2020-02-25 23:05:24.296000',8,9),(16,95,'2020-02-26 20:47:38.665000',8,1),(18,98,'2020-03-13 17:31:28.763000',8,1),(19,99,'2020-03-15 21:32:30.478200',8,1),(20,103,'2020-03-26 22:59:38.937059',8,9),(21,105,'2020-04-15 23:36:27.438877',8,1),(22,117,'2020-05-21 19:17:56.122422',8,9),(25,121,'2020-07-26 12:36:57.309736',8,1),(26,122,'2020-08-05 19:36:30.538995',8,1);
/*!40000 ALTER TABLE `likes_likerecord` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `my_cache_table`
--

DROP TABLE IF EXISTS `my_cache_table`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `my_cache_table` (
  `cache_key` varchar(255) NOT NULL,
  `value` longtext NOT NULL,
  `expires` datetime(6) NOT NULL,
  PRIMARY KEY (`cache_key`),
  KEY `my_cache_table_expires` (`expires`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `my_cache_table`
--

LOCK TABLES `my_cache_table` WRITE;
/*!40000 ALTER TABLE `my_cache_table` DISABLE KEYS */;
INSERT INTO `my_cache_table` VALUES (':1:get_seven_days_blogs_read_data','gASVvgoAAAAAAACMFmRqYW5nby5kYi5tb2RlbHMucXVlcnmUjAhRdWVyeVNldJSTlCmBlH2UKIwFbW9kZWyUjAtibG9nLm1vZGVsc5SMBEJsb2eUk5SMA19kYpROjAZfaGludHOUfZSMBXF1ZXJ5lIwaZGphbmdvLmRiLm1vZGVscy5zcWwucXVlcnmUjAVRdWVyeZSTlCmBlH2UKGgFaAiMDmFsaWFzX3JlZmNvdW50lH2UKIwJYmxvZ19ibG9nlEsEjBZyZWFkX3JlY29yZF9yZWFkZGV0YWlslEsDdYwJYWxpYXNfbWFwlIwLY29sbGVjdGlvbnOUjAtPcmRlcmVkRGljdJSTlClSlChoFIwjZGphbmdvLmRiLm1vZGVscy5zcWwuZGF0YXN0cnVjdHVyZXOUjAlCYXNlVGFibGWUk5QpgZR9lCiMCnRhYmxlX25hbWWUaBSMC3RhYmxlX2FsaWFzlGgUdWJoFWgbjARKb2lulJOUKYGUfZQoaCBoFYwMcGFyZW50X2FsaWFzlGgUaCFoFYwJam9pbl90eXBllIwKSU5ORVIgSk9JTpSMCWpvaW5fY29sc5SMAmlklIwJb2JqZWN0X2lklIaUhZSMCmpvaW5fZmllbGSUjCJkamFuZ28uY29udHJpYi5jb250ZW50dHlwZXMuZmllbGRzlIwKR2VuZXJpY1JlbJSTlCmBlH2UKIwFZmllbGSUjBdkamFuZ28uZGIubW9kZWxzLmZpZWxkc5SMC19sb2FkX2ZpZWxklJOUjARibG9nlGgHjAxyZWFkX2RldGFpbHOUh5RSlGgFjBJyZWFkX3JlY29yZC5tb2RlbHOUjApSZWFkRGV0YWlslJOUjAxyZWxhdGVkX25hbWWUjAErlIwScmVsYXRlZF9xdWVyeV9uYW1llE6MEGxpbWl0X2Nob2ljZXNfdG+UfZSMC3BhcmVudF9saW5rlImMCW9uX2RlbGV0ZZSMGWRqYW5nby5kYi5tb2RlbHMuZGVsZXRpb26UjApET19OT1RISU5HlJOUjAtzeW1tZXRyaWNhbJSJjAhtdWx0aXBsZZSIdWKMCG51bGxhYmxllIiMEWZpbHRlcmVkX3JlbGF0aW9ulE51YnWMEGV4dGVybmFsX2FsaWFzZXOUj5SMCXRhYmxlX21hcJR9lChoFF2UaBRhaBVdlGgVYXWMDGRlZmF1bHRfY29sc5SJjBBkZWZhdWx0X29yZGVyaW5nlIiMEXN0YW5kYXJkX29yZGVyaW5nlIiMDHVzZWRfYWxpYXNlc5SPlIwQZmlsdGVyX2lzX3N0aWNreZSJjAhzdWJxdWVyeZSJjAZzZWxlY3SUjBxkamFuZ28uZGIubW9kZWxzLmV4cHJlc3Npb25zlIwDQ29slJOUKYGUfZQojBFfY29uc3RydWN0b3JfYXJnc5RoFGg3aDhoB2gqh5RSlIaUfZSGlIwMb3V0cHV0X2ZpZWxklGhijAVhbGlhc5RoFIwGdGFyZ2V0lGhijBJjb250YWluc19hZ2dyZWdhdGWUiXViaF0pgZR9lChoYGgUaDdoOGgHjAV0aXRsZZSHlFKUhpR9lIaUaGZobmhnaBRoaGhudWKGlIwFd2hlcmWUjBpkamFuZ28uZGIubW9kZWxzLnNxbC53aGVyZZSMCVdoZXJlTm9kZZSTlCmBlH2UKIwIY2hpbGRyZW6UXZQojBhkamFuZ28uZGIubW9kZWxzLmxvb2t1cHOUjAhMZXNzVGhhbpSTlCmBlH2UKIwDbGhzlGhdKYGUfZQoaGBoFWg3jAtyZWFkX3JlY29yZJRoPYwEZGF0ZZSHlFKUhpR9lIaUaGZohmhnaBVoaGiGaGmJdWKMA3Joc5SMCGRhdGV0aW1llIwEZGF0ZZSTlEMEB+UMDZSFlFKUjBRiaWxhdGVyYWxfdHJhbnNmb3Jtc5RdlGhpiXViaHuMEkdyZWF0ZXJUaGFuT3JFcXVhbJSTlCmBlH2UKGiAaIFoimiNQwQH5QwGlIWUUpRokV2UaGmJdWJljAljb25uZWN0b3KUjANBTkSUjAduZWdhdGVklIloaYl1YowLd2hlcmVfY2xhc3OUaHaMCGdyb3VwX2J5lGheaGqGlIwIb3JkZXJfYnmUjA0tcmVhZF9udW1fc3VtlIWUjAhsb3dfbWFya5RLAIwJaGlnaF9tYXJrlEsFjAhkaXN0aW5jdJSJjA9kaXN0aW5jdF9maWVsZHOUKYwRc2VsZWN0X2Zvcl91cGRhdGWUiYwYc2VsZWN0X2Zvcl91cGRhdGVfbm93YWl0lImMHXNlbGVjdF9mb3JfdXBkYXRlX3NraXBfbG9ja2VklImMFHNlbGVjdF9mb3JfdXBkYXRlX29mlCmMDnNlbGVjdF9yZWxhdGVklImMCW1heF9kZXB0aJRLBYwNdmFsdWVzX3NlbGVjdJRoKmhshpSMDF9hbm5vdGF0aW9uc5RoGSlSlIwMcmVhZF9udW1fc3VtlIwbZGphbmdvLmRiLm1vZGVscy5hZ2dyZWdhdGVzlIwDU3VtlJOUKYGUfZQoaGCMFnJlYWRfZGV0YWlsc19fcmVhZF9udW2UhZR9lIaUjAZmaWx0ZXKUTowSc291cmNlX2V4cHJlc3Npb25zlF2UaF0pgZR9lChoYGgVaDdog2g9jAhyZWFkX251bZSHlFKUhpR9lIaUaGZow2hnaBVoaGjDjBVfb3V0cHV0X2ZpZWxkX29yX25vbmWUaMNoaYl1YmGMBWV4dHJhlH2UjAppc19zdW1tYXJ5lIloZmjDdWJzjBZhbm5vdGF0aW9uX3NlbGVjdF9tYXNrlI+UKGiykIwYX2Fubm90YXRpb25fc2VsZWN0X2NhY2hllGgZKVKUaLJotnOMCmNvbWJpbmF0b3KUTowOY29tYmluYXRvcl9hbGyUiYwQY29tYmluZWRfcXVlcmllc5QpjAZfZXh0cmGUTowRZXh0cmFfc2VsZWN0X21hc2uUj5SME19leHRyYV9zZWxlY3RfY2FjaGWUTowMZXh0cmFfdGFibGVzlCmMDmV4dHJhX29yZGVyX2J5lCmMEGRlZmVycmVkX2xvYWRpbmeUKJGUiIaUjBNfZmlsdGVyZWRfcmVsYXRpb25zlH2UjA1fbG9va3VwX2pvaW5zlF2UKGgUaBVljApiYXNlX3RhYmxllGgUdWKMDV9yZXN1bHRfY2FjaGWUXZQofZQoaCpLlGhsjAnorqTor4ZKVk2UaLJLBHV9lChoKktiaGyMDOezu+WIl+S8mOWMlpRosksDdX2UKGgqS2ZobIwG6YOo572ylGiySwN1fZQoaCpLdGhsjBBGYXN0QVBJIHNlcmllcy0xlGiySwN1fZQoaCpLd2hsjBpTcHJpbmcg55Sf6K+N6K6w5b2V77yIMu+8iZRosksDdWWMDl9zdGlja3lfZmlsdGVylImMCl9mb3Jfd3JpdGWUiYwZX3ByZWZldGNoX3JlbGF0ZWRfbG9va3Vwc5QpjA5fcHJlZmV0Y2hfZG9uZZSJjBZfa25vd25fcmVsYXRlZF9vYmplY3RzlH2UjA9faXRlcmFibGVfY2xhc3OUaACMDlZhbHVlc0l0ZXJhYmxllJOUjAdfZmllbGRzlGgqaGyGlIwPX2RqYW5nb192ZXJzaW9ulIwDMi4wlHViLg==','2021-12-13 20:51:40.000000');
/*!40000 ALTER TABLE `my_cache_table` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `read_record_readdetail`
--

DROP TABLE IF EXISTS `read_record_readdetail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `read_record_readdetail` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `read_num` int(11) NOT NULL,
  `date` date NOT NULL,
  `object_id` int(10) unsigned NOT NULL,
  `content_type_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `read_record_readdeta_content_type_id_98cc2726_fk_django_co` (`content_type_id`),
  CONSTRAINT `read_record_readdeta_content_type_id_98cc2726_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2538 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `read_record_readdetail`
--

LOCK TABLES `read_record_readdetail` WRITE;
/*!40000 ALTER TABLE `read_record_readdetail` DISABLE KEYS */;
INSERT INTO `read_record_readdetail` VALUES (40,1,'2020-03-11',97,8),(42,2,'2020-03-12',97,8),(46,4,'2020-03-12',98,8),(48,2,'2020-03-13',97,8),(49,1,'2020-03-13',98,8),(51,3,'2020-03-14',98,8),(52,3,'2020-03-15',98,8),(53,4,'2020-03-15',99,8),(54,2,'2020-03-15',97,8),(55,1,'2020-03-16',98,8),(56,1,'2020-03-16',99,8),(57,1,'2020-03-16',97,8),(61,1,'2020-03-17',99,8),(62,2,'2020-03-17',98,8),(63,2,'2020-03-17',100,8),(64,1,'2020-03-17',97,8),(65,2,'2020-03-19',100,8),(66,2,'2020-03-19',99,8),(67,2,'2020-03-19',98,8),(68,2,'2020-03-19',97,8),(70,1,'2020-03-24',101,8),(71,4,'2020-03-25',101,8),(72,2,'2020-03-25',100,8),(73,1,'2020-03-25',99,8),(74,2,'2020-03-25',98,8),(75,1,'2020-03-25',102,8),(76,11,'2020-03-26',102,8),(77,1,'2020-03-26',98,8),(78,2,'2020-03-26',100,8),(79,11,'2020-03-26',103,8),(80,3,'2020-03-26',101,8),(81,1,'2020-03-26',99,8),(82,1,'2020-03-30',102,8),(83,1,'2020-04-05',98,8),(84,3,'2020-04-05',103,8),(85,1,'2020-04-05',102,8),(86,1,'2020-04-05',100,8),(87,3,'2020-04-05',104,8),(88,3,'2020-04-07',104,8),(89,2,'2020-04-07',102,8),(90,2,'2020-04-07',105,8),(91,1,'2020-04-16',104,8),(92,1,'2020-04-16',103,8),(93,1,'2020-04-18',103,8),(94,1,'2020-04-18',105,8),(95,1,'2020-04-18',97,8),(96,7,'2020-04-20',106,8),(97,1,'2020-04-20',98,8),(98,1,'2020-04-20',102,8),(99,1,'2020-04-20',101,8),(100,1,'2020-04-20',97,8),(101,5,'2020-04-22',106,8),(102,2,'2020-04-22',104,8),(103,2,'2020-04-22',101,8),(104,1,'2020-04-22',100,8),(105,1,'2020-04-30',105,8),(106,2,'2020-05-01',101,8),(107,3,'2020-05-01',105,8),(108,4,'2020-05-01',104,8),(109,1,'2020-05-01',102,8),(110,1,'2020-05-01',100,8),(111,1,'2020-05-01',103,8),(112,1,'2020-05-06',106,8),(113,1,'2020-05-06',107,8),(114,2,'2020-05-08',107,8),(115,3,'2020-05-08',108,8),(116,1,'2020-05-10',109,8),(117,1,'2020-05-10',110,8),(118,1,'2020-05-10',112,8),(119,1,'2020-05-10',113,8),(120,1,'2020-05-12',114,8),(121,2,'2020-05-13',114,8),(122,3,'2020-05-13',101,8),(123,6,'2020-05-13',111,8),(124,2,'2020-05-13',110,8),(125,2,'2020-05-13',113,8),(126,2,'2020-05-13',112,8),(127,1,'2020-05-13',115,8),(128,1,'2020-05-14',113,8),(129,2,'2020-05-15',114,8),(130,1,'2020-05-15',115,8),(131,5,'2020-05-15',109,8),(132,2,'2020-05-16',106,8),(133,1,'2020-05-16',100,8),(134,4,'2020-05-17',116,8),(135,4,'2020-05-17',117,8),(136,2,'2020-05-21',117,8),(137,1,'2020-05-23',115,8),(138,1,'2020-05-23',116,8),(139,1,'2020-05-25',117,8),(140,1,'2020-05-27',97,8),(141,1,'2020-05-28',117,8),(142,1,'2020-06-04',118,8),(143,2,'2020-06-05',118,8),(144,1,'2020-06-06',119,8),(145,2,'2020-06-08',119,8),(146,2,'2020-06-08',118,8),(147,1,'2020-06-09',118,8),(148,2,'2020-06-17',119,8),(149,1,'2020-06-23',119,8),(150,1,'2020-06-24',119,8),(151,1,'2020-06-24',118,8),(152,1,'2020-06-24',114,8),(153,1,'2020-06-25',119,8),(154,1,'2020-06-28',118,8),(155,2,'2020-06-28',119,8),(156,1,'2020-06-30',114,8),(157,1,'2020-07-07',114,8),(158,2,'2020-07-09',120,8),(159,1,'2020-07-17',120,8),(160,2,'2020-07-26',121,8),(161,1,'2020-07-27',121,8),(162,1,'2020-08-04',118,8),(163,1,'2020-08-04',121,8),(164,1,'2020-08-04',115,8),(165,1,'2020-08-04',114,8),(166,4,'2020-08-05',122,8),(167,1,'2020-08-05',102,8),(168,1,'2020-08-05',100,8),(169,2,'2020-08-05',121,8),(170,1,'2020-08-07',119,8),(171,2,'2020-08-07',115,8),(172,5,'2020-08-08',123,8),(173,1,'2020-08-08',122,8),(174,2,'2020-08-08',121,8),(175,2,'2020-08-08',120,8),(176,2,'2020-08-08',119,8),(177,2,'2020-08-08',118,8),(178,2,'2020-08-08',117,8),(179,1,'2020-08-10',124,8),(180,1,'2020-08-11',124,8),(181,3,'2020-08-11',123,8),(182,1,'2020-08-11',122,8),(183,2,'2020-08-13',124,8),(184,1,'2020-08-15',123,8),(185,1,'2020-08-15',124,8),(186,1,'2020-08-17',121,8),(187,1,'2020-08-17',122,8),(188,3,'2020-08-17',124,8),(189,1,'2020-08-17',123,8),(190,1,'2020-08-19',125,8),(191,1,'2020-08-20',125,8),(192,1,'2020-08-20',123,8),(193,2,'2020-08-20',118,8),(194,1,'2020-08-20',116,8),(195,2,'2020-08-20',117,8),(196,1,'2020-08-20',119,8),(197,1,'2020-08-20',122,8),(198,1,'2020-08-21',97,8),(199,2,'2020-08-21',121,8),(200,2,'2020-08-21',118,8),(201,2,'2020-08-21',125,8),(202,1,'2020-08-21',122,8),(203,1,'2020-08-21',120,8),(204,1,'2020-08-21',119,8),(205,1,'2020-08-21',117,8),(206,1,'2020-08-21',116,8),(207,1,'2020-08-21',115,8),(208,1,'2020-08-21',114,8),(209,1,'2020-08-21',123,8),(211,1,'2020-08-22',127,8),(212,5,'2020-08-22',128,8),(214,4,'2020-08-22',123,8),(215,2,'2020-08-22',100,8),(216,1,'2020-08-22',105,8),(217,1,'2020-08-22',106,8),(218,1,'2020-08-22',107,8),(219,2,'2020-08-22',108,8),(220,2,'2020-08-22',109,8),(221,2,'2020-08-22',110,8),(222,2,'2020-08-22',111,8),(223,2,'2020-08-22',112,8),(224,1,'2020-08-22',113,8),(225,2,'2020-08-22',114,8),(226,2,'2020-08-22',115,8),(227,2,'2020-08-22',116,8),(228,2,'2020-08-22',117,8),(229,1,'2020-08-22',124,8),(230,1,'2020-08-22',121,8),(231,1,'2020-08-22',122,8),(232,2,'2020-08-23',130,8),(233,1,'2020-08-23',123,8),(234,1,'2020-08-23',108,8),(235,1,'2020-08-23',100,8),(236,1,'2020-08-23',121,8),(237,1,'2020-08-23',116,8),(238,1,'2020-08-23',117,8),(239,1,'2020-08-23',109,8),(240,1,'2020-08-23',128,8),(241,1,'2020-08-23',124,8),(242,1,'2020-08-23',122,8),(243,1,'2020-08-23',107,8),(244,1,'2020-08-23',127,8),(245,1,'2020-08-23',125,8),(246,1,'2020-08-23',120,8),(247,1,'2020-08-23',98,8),(248,1,'2020-08-23',119,8),(249,2,'2020-08-24',130,8),(250,1,'2020-08-24',131,8),(251,4,'2020-08-25',131,8),(252,1,'2020-08-25',132,8),(253,1,'2020-08-26',132,8),(254,1,'2020-08-26',124,8),(255,2,'2020-08-27',132,8),(256,3,'2020-08-30',132,8),(257,1,'2020-08-31',133,8),(258,1,'2020-09-01',132,8),(259,3,'2020-09-01',133,8),(260,1,'2020-09-02',114,8),(261,1,'2020-09-02',112,8),(262,1,'2020-09-02',113,8),(263,2,'2020-09-02',111,8),(264,2,'2020-09-02',99,8),(265,1,'2020-09-02',103,8),(266,1,'2020-09-02',101,8),(267,1,'2020-09-02',102,8),(268,1,'2020-09-02',97,8),(269,1,'2020-09-02',118,8),(270,1,'2020-09-02',115,8),(271,1,'2020-09-02',104,8),(272,1,'2020-09-02',106,8),(273,1,'2020-09-02',131,8),(274,1,'2020-09-03',133,8),(275,1,'2020-09-03',134,8),(276,1,'2020-09-06',105,8),(277,1,'2020-09-06',133,8),(278,1,'2020-09-06',134,8),(279,1,'2020-09-07',105,8),(280,2,'2020-09-09',99,8),(281,1,'2020-09-09',105,8),(282,1,'2020-09-09',111,8),(283,1,'2020-09-09',133,8),(284,3,'2020-09-09',134,8),(285,1,'2020-09-09',98,8),(286,1,'2020-09-09',100,8),(287,1,'2020-09-09',104,8),(288,1,'2020-09-09',106,8),(289,1,'2020-09-09',110,8),(290,1,'2020-09-09',112,8),(291,1,'2020-09-09',127,8),(292,1,'2020-09-09',128,8),(293,1,'2020-09-09',130,8),(294,1,'2020-09-09',131,8),(295,1,'2020-09-09',132,8),(296,1,'2020-09-09',97,8),(297,1,'2020-09-09',101,8),(298,1,'2020-09-09',102,8),(299,1,'2020-09-09',103,8),(300,1,'2020-09-09',107,8),(301,1,'2020-09-09',109,8),(302,1,'2020-09-09',113,8),(303,1,'2020-09-09',114,8),(304,1,'2020-09-09',115,8),(305,1,'2020-09-09',116,8),(306,1,'2020-09-09',117,8),(307,1,'2020-09-09',118,8),(308,1,'2020-09-09',119,8),(309,1,'2020-09-09',120,8),(310,1,'2020-09-09',121,8),(311,1,'2020-09-09',122,8),(312,1,'2020-09-09',123,8),(313,1,'2020-09-09',124,8),(314,1,'2020-09-09',125,8),(315,1,'2020-09-09',108,8),(316,1,'2020-09-10',97,8),(317,2,'2020-09-11',128,8),(318,1,'2020-09-11',130,8),(319,2,'2020-09-11',133,8),(320,1,'2020-09-11',134,8),(321,1,'2020-09-11',97,8),(322,4,'2020-09-13',135,8),(323,3,'2020-09-13',99,8),(324,3,'2020-09-13',105,8),(325,3,'2020-09-13',111,8),(326,3,'2020-09-13',133,8),(327,3,'2020-09-13',134,8),(328,3,'2020-09-13',98,8),(329,3,'2020-09-13',100,8),(330,3,'2020-09-13',104,8),(331,3,'2020-09-13',106,8),(332,3,'2020-09-13',110,8),(333,3,'2020-09-13',112,8),(334,3,'2020-09-13',127,8),(335,3,'2020-09-13',128,8),(336,3,'2020-09-13',130,8),(337,3,'2020-09-13',131,8),(338,3,'2020-09-13',132,8),(339,2,'2020-09-13',97,8),(340,2,'2020-09-13',101,8),(341,2,'2020-09-13',102,8),(342,2,'2020-09-13',103,8),(343,2,'2020-09-13',107,8),(344,2,'2020-09-13',109,8),(345,2,'2020-09-13',113,8),(346,2,'2020-09-13',114,8),(347,2,'2020-09-13',115,8),(348,2,'2020-09-13',116,8),(349,2,'2020-09-13',117,8),(350,2,'2020-09-13',118,8),(351,2,'2020-09-13',119,8),(352,2,'2020-09-13',120,8),(353,2,'2020-09-13',121,8),(354,2,'2020-09-13',122,8),(355,2,'2020-09-13',123,8),(356,2,'2020-09-13',124,8),(357,2,'2020-09-13',125,8),(358,2,'2020-09-13',108,8),(359,10,'2020-09-14',97,8),(360,10,'2020-09-14',101,8),(361,11,'2020-09-14',102,8),(362,9,'2020-09-14',103,8),(363,11,'2020-09-14',107,8),(364,9,'2020-09-14',109,8),(365,9,'2020-09-14',113,8),(366,9,'2020-09-14',114,8),(367,9,'2020-09-14',115,8),(368,9,'2020-09-14',116,8),(369,9,'2020-09-14',117,8),(370,9,'2020-09-14',118,8),(371,9,'2020-09-14',119,8),(372,9,'2020-09-14',120,8),(373,9,'2020-09-14',121,8),(374,9,'2020-09-14',122,8),(375,9,'2020-09-14',123,8),(376,9,'2020-09-14',124,8),(377,9,'2020-09-14',125,8),(378,9,'2020-09-14',108,8),(379,10,'2020-09-14',135,8),(380,8,'2020-09-14',99,8),(381,8,'2020-09-14',105,8),(382,8,'2020-09-14',111,8),(383,8,'2020-09-14',133,8),(384,9,'2020-09-14',134,8),(385,8,'2020-09-14',98,8),(386,8,'2020-09-14',100,8),(387,8,'2020-09-14',104,8),(388,8,'2020-09-14',106,8),(389,8,'2020-09-14',110,8),(390,8,'2020-09-14',112,8),(391,8,'2020-09-14',127,8),(392,8,'2020-09-14',128,8),(393,8,'2020-09-14',130,8),(394,8,'2020-09-14',131,8),(395,8,'2020-09-14',132,8),(396,8,'2020-09-15',99,8),(397,8,'2020-09-15',105,8),(398,8,'2020-09-15',111,8),(399,8,'2020-09-15',133,8),(400,8,'2020-09-15',134,8),(401,8,'2020-09-15',98,8),(402,8,'2020-09-15',100,8),(403,8,'2020-09-15',104,8),(404,8,'2020-09-15',106,8),(405,8,'2020-09-15',110,8),(406,8,'2020-09-15',112,8),(407,8,'2020-09-15',127,8),(408,8,'2020-09-15',128,8),(409,8,'2020-09-15',130,8),(410,8,'2020-09-15',131,8),(411,8,'2020-09-15',132,8),(412,8,'2020-09-15',97,8),(413,8,'2020-09-15',101,8),(414,8,'2020-09-15',102,8),(415,8,'2020-09-15',103,8),(416,8,'2020-09-15',107,8),(417,8,'2020-09-15',109,8),(418,8,'2020-09-15',113,8),(419,8,'2020-09-15',114,8),(420,8,'2020-09-15',115,8),(421,8,'2020-09-15',116,8),(422,8,'2020-09-15',117,8),(423,8,'2020-09-15',118,8),(424,8,'2020-09-15',119,8),(425,8,'2020-09-15',120,8),(426,8,'2020-09-15',121,8),(427,8,'2020-09-15',122,8),(428,8,'2020-09-15',123,8),(429,8,'2020-09-15',124,8),(430,8,'2020-09-15',125,8),(431,8,'2020-09-15',108,8),(432,7,'2020-09-15',135,8),(433,4,'2020-09-16',135,8),(434,6,'2020-09-16',99,8),(435,4,'2020-09-16',105,8),(436,4,'2020-09-16',111,8),(437,4,'2020-09-16',133,8),(438,4,'2020-09-16',134,8),(439,4,'2020-09-16',98,8),(440,4,'2020-09-16',100,8),(441,4,'2020-09-16',104,8),(442,4,'2020-09-16',106,8),(443,4,'2020-09-16',110,8),(444,4,'2020-09-16',112,8),(445,4,'2020-09-16',127,8),(446,4,'2020-09-16',128,8),(447,4,'2020-09-16',130,8),(448,4,'2020-09-16',131,8),(449,4,'2020-09-16',132,8),(450,3,'2020-09-16',97,8),(451,3,'2020-09-16',101,8),(452,3,'2020-09-16',102,8),(453,3,'2020-09-16',103,8),(454,3,'2020-09-16',107,8),(455,3,'2020-09-16',109,8),(456,3,'2020-09-16',113,8),(457,3,'2020-09-16',114,8),(458,3,'2020-09-16',115,8),(459,3,'2020-09-16',116,8),(460,3,'2020-09-16',117,8),(461,3,'2020-09-16',118,8),(462,3,'2020-09-16',119,8),(463,3,'2020-09-16',120,8),(464,3,'2020-09-16',121,8),(465,3,'2020-09-16',122,8),(466,4,'2020-09-16',123,8),(467,3,'2020-09-16',124,8),(468,3,'2020-09-16',125,8),(469,3,'2020-09-16',108,8),(470,1,'2020-09-20',102,8),(471,1,'2020-09-20',135,8),(472,1,'2020-09-22',98,8),(473,1,'2020-09-22',99,8),(474,1,'2020-09-22',106,8),(475,1,'2020-09-22',127,8),(476,1,'2020-09-22',131,8),(477,1,'2020-09-22',97,8),(478,1,'2020-09-22',100,8),(479,1,'2020-09-22',105,8),(480,1,'2020-09-22',107,8),(481,1,'2020-09-22',125,8),(482,1,'2020-09-22',128,8),(483,1,'2020-09-22',130,8),(484,1,'2020-09-22',132,8),(485,1,'2020-09-22',133,8),(486,1,'2020-09-22',134,8),(487,1,'2020-09-22',135,8),(488,1,'2020-09-22',101,8),(489,1,'2020-09-22',102,8),(490,1,'2020-09-22',103,8),(491,1,'2020-09-22',104,8),(492,1,'2020-09-22',108,8),(493,1,'2020-09-22',109,8),(494,1,'2020-09-22',110,8),(495,1,'2020-09-22',111,8),(496,1,'2020-09-22',112,8),(497,1,'2020-09-22',113,8),(498,1,'2020-09-22',114,8),(499,1,'2020-09-22',115,8),(500,1,'2020-09-22',116,8),(501,1,'2020-09-22',117,8),(502,1,'2020-09-22',118,8),(503,1,'2020-09-22',119,8),(504,1,'2020-09-22',120,8),(505,1,'2020-09-22',121,8),(506,1,'2020-09-22',122,8),(507,1,'2020-09-22',123,8),(508,1,'2020-09-22',124,8),(509,1,'2020-09-25',97,8),(510,1,'2020-09-25',124,8),(511,1,'2020-09-25',98,8),(512,1,'2020-09-26',124,8),(513,1,'2020-09-26',136,8),(514,1,'2020-09-27',98,8),(515,3,'2020-09-27',97,8),(516,1,'2020-09-27',133,8),(517,1,'2020-09-28',102,8),(518,1,'2020-09-28',124,8),(519,1,'2020-09-28',99,8),(520,1,'2020-09-28',100,8),(521,1,'2020-09-28',136,8),(522,1,'2020-09-28',122,8),(523,1,'2020-09-28',101,8),(524,1,'2020-09-28',123,8),(525,1,'2020-09-28',125,8),(526,1,'2020-09-28',135,8),(527,1,'2020-09-28',127,8),(528,1,'2020-09-28',121,8),(529,1,'2020-09-29',134,8),(530,1,'2020-09-29',135,8),(531,1,'2020-09-29',132,8),(532,1,'2020-09-29',130,8),(533,1,'2020-09-29',131,8),(534,1,'2020-09-29',133,8),(535,1,'2020-09-29',103,8),(536,2,'2020-09-29',121,8),(537,1,'2020-09-29',119,8),(538,1,'2020-09-29',116,8),(539,1,'2020-09-29',118,8),(540,1,'2020-09-30',117,8),(541,1,'2020-09-30',114,8),(542,2,'2020-09-30',113,8),(543,1,'2020-09-30',115,8),(544,1,'2020-09-30',104,8),(545,1,'2020-09-30',112,8),(546,2,'2020-09-30',111,8),(547,1,'2020-09-30',120,8),(548,1,'2020-09-30',103,8),(549,1,'2020-09-30',137,8),(550,1,'2020-09-30',131,8),(551,1,'2020-09-30',119,8),(552,1,'2020-09-30',106,8),(553,1,'2020-09-30',110,8),(554,2,'2020-10-01',136,8),(555,1,'2020-10-01',128,8),(556,1,'2020-10-02',107,8),(557,3,'2020-10-02',135,8),(558,1,'2020-10-02',136,8),(559,1,'2020-10-02',137,8),(560,1,'2020-10-02',106,8),(561,1,'2020-10-02',131,8),(562,1,'2020-10-03',133,8),(563,1,'2020-10-03',137,8),(564,1,'2020-10-03',109,8),(565,1,'2020-10-03',108,8),(566,1,'2020-10-04',114,8),(567,1,'2020-10-04',116,8),(568,1,'2020-10-04',113,8),(569,1,'2020-10-04',117,8),(570,1,'2020-10-04',132,8),(571,1,'2020-10-05',99,8),(572,1,'2020-10-05',103,8),(573,1,'2020-10-05',130,8),(574,1,'2020-10-05',100,8),(575,1,'2020-10-05',125,8),(576,1,'2020-10-05',132,8),(577,1,'2020-10-06',133,8),(578,1,'2020-10-06',99,8),(579,1,'2020-10-06',136,8),(580,1,'2020-10-07',99,8),(581,1,'2020-10-07',98,8),(582,1,'2020-10-07',137,8),(583,1,'2020-10-07',138,8),(584,1,'2020-10-07',101,8),(585,1,'2020-10-08',135,8),(586,2,'2020-10-08',116,8),(587,1,'2020-10-08',104,8),(588,1,'2020-10-08',134,8),(589,1,'2020-10-08',118,8),(590,1,'2020-10-08',117,8),(591,1,'2020-10-08',109,8),(592,1,'2020-10-08',131,8),(593,1,'2020-10-08',137,8),(594,1,'2020-10-09',99,8),(595,1,'2020-10-09',104,8),(596,1,'2020-10-09',116,8),(597,1,'2020-10-09',118,8),(598,1,'2020-10-09',133,8),(599,1,'2020-10-09',134,8),(600,1,'2020-10-09',135,8),(601,1,'2020-10-09',137,8),(602,1,'2020-10-09',98,8),(603,2,'2020-10-09',100,8),(604,1,'2020-10-09',103,8),(605,1,'2020-10-09',105,8),(606,1,'2020-10-09',115,8),(607,1,'2020-10-09',117,8),(608,1,'2020-10-09',119,8),(609,1,'2020-10-09',132,8),(610,1,'2020-10-09',136,8),(611,1,'2020-10-09',138,8),(612,1,'2020-10-09',97,8),(613,1,'2020-10-09',101,8),(614,1,'2020-10-09',102,8),(615,1,'2020-10-09',106,8),(616,1,'2020-10-09',109,8),(617,1,'2020-10-09',110,8),(618,1,'2020-10-09',111,8),(619,1,'2020-10-09',112,8),(620,1,'2020-10-09',113,8),(621,1,'2020-10-09',114,8),(622,1,'2020-10-09',120,8),(623,1,'2020-10-09',121,8),(624,1,'2020-10-09',122,8),(625,1,'2020-10-09',123,8),(626,1,'2020-10-09',124,8),(627,2,'2020-10-09',125,8),(628,1,'2020-10-09',127,8),(629,1,'2020-10-09',128,8),(630,2,'2020-10-09',130,8),(631,1,'2020-10-09',131,8),(632,1,'2020-10-09',107,8),(633,2,'2020-10-09',108,8),(634,1,'2020-10-10',132,8),(635,1,'2020-10-10',113,8),(636,2,'2020-10-10',133,8),(637,1,'2020-10-10',138,8),(638,1,'2020-10-11',99,8),(639,1,'2020-10-12',112,8),(640,1,'2020-10-12',117,8),(641,2,'2020-10-12',133,8),(642,1,'2020-10-12',136,8),(643,1,'2020-10-13',134,8),(644,1,'2020-10-13',136,8),(645,1,'2020-10-13',133,8),(646,1,'2020-10-14',103,8),(647,1,'2020-10-15',101,8),(648,1,'2020-10-15',104,8),(649,1,'2020-10-15',123,8),(650,1,'2020-10-15',121,8),(651,1,'2020-10-15',124,8),(652,2,'2020-10-16',100,8),(653,2,'2020-10-16',101,8),(654,2,'2020-10-16',104,8),(655,2,'2020-10-16',112,8),(656,2,'2020-10-16',121,8),(657,2,'2020-10-16',123,8),(658,2,'2020-10-16',124,8),(659,2,'2020-10-16',133,8),(660,2,'2020-10-16',136,8),(661,1,'2020-10-16',132,8),(662,1,'2020-10-16',99,8),(663,1,'2020-10-16',102,8),(664,1,'2020-10-16',103,8),(665,1,'2020-10-16',105,8),(666,1,'2020-10-16',111,8),(667,1,'2020-10-16',113,8),(668,1,'2020-10-16',120,8),(669,1,'2020-10-16',122,8),(670,1,'2020-10-16',125,8),(671,1,'2020-10-16',131,8),(672,1,'2020-10-16',134,8),(673,1,'2020-10-16',135,8),(674,1,'2020-10-16',137,8),(675,1,'2020-10-16',138,8),(676,1,'2020-10-16',97,8),(677,1,'2020-10-16',98,8),(678,1,'2020-10-16',106,8),(679,1,'2020-10-16',109,8),(680,1,'2020-10-16',110,8),(681,1,'2020-10-16',114,8),(682,1,'2020-10-16',115,8),(683,1,'2020-10-16',116,8),(684,1,'2020-10-16',117,8),(685,1,'2020-10-16',118,8),(686,1,'2020-10-16',119,8),(687,1,'2020-10-16',127,8),(688,1,'2020-10-16',128,8),(689,1,'2020-10-16',130,8),(690,1,'2020-10-16',107,8),(691,1,'2020-10-16',108,8),(692,2,'2020-10-17',99,8),(693,1,'2020-10-17',100,8),(694,1,'2020-10-17',101,8),(695,1,'2020-10-17',104,8),(696,1,'2020-10-17',112,8),(697,1,'2020-10-17',121,8),(698,1,'2020-10-17',123,8),(699,1,'2020-10-17',133,8),(700,1,'2020-10-17',136,8),(701,1,'2020-10-17',98,8),(702,1,'2020-10-17',102,8),(703,1,'2020-10-17',103,8),(704,1,'2020-10-17',105,8),(705,1,'2020-10-17',111,8),(706,1,'2020-10-17',113,8),(707,1,'2020-10-17',120,8),(708,1,'2020-10-17',122,8),(709,1,'2020-10-17',124,8),(710,1,'2020-10-17',132,8),(711,1,'2020-10-17',134,8),(712,1,'2020-10-17',135,8),(713,1,'2020-10-17',137,8),(714,1,'2020-10-17',138,8),(715,1,'2020-10-18',97,8),(716,1,'2020-10-18',106,8),(717,1,'2020-10-18',109,8),(718,1,'2020-10-18',110,8),(719,1,'2020-10-18',114,8),(720,1,'2020-10-18',115,8),(721,1,'2020-10-18',116,8),(722,1,'2020-10-18',117,8),(723,1,'2020-10-18',118,8),(724,1,'2020-10-18',119,8),(725,1,'2020-10-18',125,8),(726,1,'2020-10-18',127,8),(727,1,'2020-10-18',128,8),(728,1,'2020-10-18',130,8),(729,1,'2020-10-18',131,8),(730,1,'2020-10-18',107,8),(731,1,'2020-10-18',108,8),(732,1,'2020-10-19',98,8),(733,1,'2020-10-19',103,8),(734,1,'2020-10-19',134,8),(735,1,'2020-10-19',136,8),(736,1,'2020-10-19',104,8),(737,1,'2020-10-19',130,8),(738,1,'2020-10-19',122,8),(739,1,'2020-10-19',117,8),(740,1,'2020-10-19',138,8),(741,1,'2020-10-20',133,8),(742,1,'2020-10-20',134,8),(743,1,'2020-10-20',101,8),(744,1,'2020-10-20',100,8),(745,1,'2020-10-20',135,8),(746,1,'2020-10-20',124,8),(747,1,'2020-10-21',132,8),(748,1,'2020-10-21',131,8),(749,1,'2020-10-21',133,8),(750,1,'2020-10-21',99,8),(751,1,'2020-10-21',135,8),(752,1,'2020-10-21',139,8),(753,1,'2020-10-24',103,8),(754,1,'2020-10-24',139,8),(755,1,'2020-10-25',136,8),(756,1,'2020-10-27',124,8),(757,1,'2020-10-29',139,8),(758,1,'2020-10-30',139,8),(759,1,'2020-10-30',138,8),(760,2,'2020-11-02',110,8),(761,1,'2020-11-04',124,8),(762,1,'2020-11-05',138,8),(763,1,'2020-11-05',140,8),(764,1,'2020-11-06',114,8),(765,1,'2020-11-08',139,8),(766,1,'2020-11-08',141,8),(767,1,'2020-11-14',137,8),(768,1,'2020-11-14',135,8),(769,1,'2020-11-15',141,8),(770,1,'2020-11-18',121,8),(771,1,'2020-11-19',105,8),(772,1,'2020-11-19',97,8),(773,1,'2020-11-19',117,8),(774,1,'2020-11-20',117,8),(775,1,'2020-11-26',142,8),(776,1,'2020-11-28',141,8),(777,1,'2020-11-29',141,8),(778,1,'2020-11-30',142,8),(779,1,'2020-11-30',141,8),(780,1,'2020-11-30',140,8),(781,1,'2020-11-30',139,8),(782,2,'2020-12-15',142,8),(783,1,'2020-12-15',141,8),(784,1,'2020-12-16',141,8),(785,1,'2020-12-16',142,8),(786,2,'2020-12-19',113,8),(787,1,'2020-12-19',112,8),(788,1,'2020-12-19',114,8),(789,1,'2020-12-19',109,8),(790,1,'2020-12-19',110,8),(791,1,'2020-12-19',111,8),(792,1,'2020-12-19',115,8),(793,1,'2020-12-19',97,8),(794,1,'2020-12-19',98,8),(795,1,'2020-12-19',99,8),(796,1,'2020-12-19',100,8),(797,1,'2020-12-19',101,8),(798,1,'2020-12-19',102,8),(799,1,'2020-12-19',103,8),(800,1,'2020-12-19',104,8),(801,1,'2020-12-19',105,8),(802,1,'2020-12-19',106,8),(803,1,'2020-12-19',108,8),(804,1,'2020-12-19',116,8),(805,1,'2020-12-19',117,8),(806,1,'2020-12-19',118,8),(807,1,'2020-12-19',119,8),(808,1,'2020-12-19',120,8),(809,1,'2020-12-19',121,8),(810,1,'2020-12-19',122,8),(811,1,'2020-12-19',123,8),(812,1,'2020-12-19',124,8),(813,1,'2020-12-19',125,8),(814,1,'2020-12-19',127,8),(815,1,'2020-12-19',128,8),(816,1,'2020-12-19',130,8),(817,1,'2020-12-19',131,8),(818,1,'2020-12-19',132,8),(819,1,'2020-12-19',133,8),(820,1,'2020-12-19',134,8),(821,1,'2020-12-19',135,8),(822,1,'2020-12-19',136,8),(823,1,'2020-12-19',137,8),(824,1,'2020-12-19',138,8),(825,1,'2020-12-19',139,8),(826,1,'2020-12-19',140,8),(827,1,'2020-12-19',107,8),(828,1,'2020-12-20',137,8),(829,1,'2020-12-23',141,8),(830,2,'2020-12-23',142,8),(831,1,'2020-12-25',113,8),(832,1,'2020-12-26',113,8),(833,1,'2020-12-26',112,8),(834,1,'2020-12-26',114,8),(835,1,'2020-12-26',109,8),(836,1,'2020-12-26',110,8),(837,1,'2020-12-26',111,8),(838,3,'2020-12-26',115,8),(839,1,'2020-12-26',97,8),(840,1,'2020-12-26',98,8),(841,1,'2020-12-26',99,8),(842,2,'2020-12-26',100,8),(843,1,'2020-12-26',101,8),(844,1,'2020-12-26',102,8),(845,1,'2020-12-26',103,8),(846,1,'2020-12-26',104,8),(847,1,'2020-12-26',105,8),(848,1,'2020-12-26',106,8),(849,1,'2020-12-26',108,8),(850,1,'2020-12-26',116,8),(851,1,'2020-12-26',117,8),(852,1,'2020-12-26',118,8),(853,1,'2020-12-26',119,8),(854,1,'2020-12-26',120,8),(855,1,'2020-12-26',121,8),(856,1,'2020-12-26',122,8),(857,1,'2020-12-26',123,8),(858,1,'2020-12-26',124,8),(859,1,'2020-12-26',125,8),(860,1,'2020-12-26',127,8),(861,1,'2020-12-26',128,8),(862,1,'2020-12-26',130,8),(863,1,'2020-12-26',131,8),(864,1,'2020-12-26',132,8),(865,1,'2020-12-26',133,8),(866,1,'2020-12-26',134,8),(867,1,'2020-12-26',135,8),(868,1,'2020-12-26',136,8),(869,1,'2020-12-26',137,8),(870,1,'2020-12-26',138,8),(871,1,'2020-12-26',139,8),(872,1,'2020-12-26',140,8),(873,1,'2020-12-27',107,8),(874,1,'2020-12-28',107,8),(875,1,'2020-12-30',141,8),(876,1,'2020-12-30',142,8),(877,1,'2020-12-31',118,8),(878,1,'2020-12-31',105,8),(879,1,'2021-01-01',124,8),(880,1,'2021-01-01',123,8),(881,1,'2021-01-01',122,8),(882,1,'2021-01-01',121,8),(883,1,'2021-01-01',120,8),(884,1,'2021-01-01',102,8),(885,1,'2021-01-01',101,8),(886,1,'2021-01-02',113,8),(887,1,'2021-01-03',112,8),(888,1,'2021-01-03',114,8),(889,1,'2021-01-03',109,8),(890,1,'2021-01-03',110,8),(891,1,'2021-01-03',111,8),(892,1,'2021-01-03',115,8),(893,1,'2021-01-03',97,8),(894,1,'2021-01-03',98,8),(895,1,'2021-01-03',99,8),(896,1,'2021-01-03',100,8),(897,1,'2021-01-03',101,8),(898,1,'2021-01-03',102,8),(899,1,'2021-01-03',103,8),(900,1,'2021-01-03',104,8),(901,1,'2021-01-03',105,8),(902,1,'2021-01-03',106,8),(903,1,'2021-01-03',108,8),(904,1,'2021-01-03',116,8),(905,1,'2021-01-03',117,8),(906,1,'2021-01-03',118,8),(907,1,'2021-01-03',119,8),(908,1,'2021-01-03',120,8),(909,2,'2021-01-03',121,8),(910,1,'2021-01-03',122,8),(911,1,'2021-01-03',123,8),(912,2,'2021-01-03',124,8),(913,1,'2021-01-03',125,8),(914,1,'2021-01-03',127,8),(915,1,'2021-01-03',128,8),(916,1,'2021-01-03',130,8),(917,1,'2021-01-03',131,8),(918,1,'2021-01-03',132,8),(919,1,'2021-01-03',133,8),(920,1,'2021-01-03',134,8),(921,1,'2021-01-03',135,8),(922,1,'2021-01-03',136,8),(923,1,'2021-01-03',137,8),(924,1,'2021-01-03',138,8),(925,1,'2021-01-03',139,8),(926,1,'2021-01-03',140,8),(927,1,'2021-01-04',107,8),(928,1,'2021-01-04',121,8),(929,1,'2021-01-04',97,8),(930,1,'2021-01-05',121,8),(931,1,'2021-01-09',124,8),(932,1,'2021-01-09',123,8),(933,1,'2021-01-09',121,8),(934,1,'2021-01-09',102,8),(935,1,'2021-01-09',97,8),(936,1,'2021-01-09',125,8),(937,1,'2021-01-10',127,8),(938,1,'2021-01-10',124,8),(939,1,'2021-01-11',134,8),(940,1,'2021-01-11',137,8),(941,1,'2021-01-11',124,8),(942,1,'2021-01-11',119,8),(943,1,'2021-01-11',136,8),(944,1,'2021-01-11',98,8),(945,1,'2021-01-11',135,8),(946,1,'2021-01-12',104,8),(947,2,'2021-01-12',124,8),(948,2,'2021-01-12',106,8),(949,2,'2021-01-12',107,8),(950,1,'2021-01-12',142,8),(951,1,'2021-01-12',128,8),(952,1,'2021-01-12',130,8),(953,1,'2021-01-12',132,8),(954,1,'2021-01-12',138,8),(955,1,'2021-01-12',133,8),(956,1,'2021-01-12',141,8),(957,1,'2021-01-12',140,8),(958,1,'2021-01-13',106,8),(959,1,'2021-01-13',142,8),(960,1,'2021-01-13',107,8),(961,1,'2021-01-13',140,8),(962,1,'2021-01-13',104,8),(963,2,'2021-01-13',124,8),(964,1,'2021-01-13',134,8),(965,2,'2021-01-13',141,8),(966,2,'2021-01-13',136,8),(967,1,'2021-01-13',137,8),(968,3,'2021-01-13',139,8),(969,1,'2021-01-13',138,8),(970,2,'2021-01-13',133,8),(971,2,'2021-01-13',135,8),(972,1,'2021-01-13',108,8),(973,1,'2021-01-13',105,8),(974,1,'2021-01-13',123,8),(975,1,'2021-01-13',103,8),(976,1,'2021-01-13',125,8),(977,1,'2021-01-14',136,8),(978,1,'2021-01-14',122,8),(979,1,'2021-01-14',139,8),(980,1,'2021-01-16',108,8),(981,1,'2021-01-17',127,8),(982,2,'2021-01-18',124,8),(983,1,'2021-01-20',139,8),(984,1,'2021-01-20',97,8),(985,1,'2021-01-22',97,8),(986,1,'2021-01-22',108,8),(987,1,'2021-01-22',124,8),(988,1,'2021-01-22',127,8),(989,1,'2021-01-22',139,8),(990,1,'2021-01-22',98,8),(991,1,'2021-01-22',107,8),(992,1,'2021-01-22',109,8),(993,1,'2021-01-22',123,8),(994,1,'2021-01-22',125,8),(995,1,'2021-01-22',128,8),(996,1,'2021-01-22',136,8),(997,1,'2021-01-22',137,8),(998,1,'2021-01-22',138,8),(999,1,'2021-01-22',140,8),(1000,1,'2021-01-22',141,8),(1001,1,'2021-01-22',142,8),(1002,7,'2021-01-23',99,8),(1003,1,'2021-01-23',100,8),(1004,1,'2021-01-23',101,8),(1005,1,'2021-01-23',102,8),(1006,2,'2021-01-23',103,8),(1007,1,'2021-01-23',104,8),(1008,1,'2021-01-23',105,8),(1009,1,'2021-01-23',106,8),(1010,1,'2021-01-23',110,8),(1011,1,'2021-01-23',111,8),(1012,1,'2021-01-23',112,8),(1013,1,'2021-01-23',113,8),(1014,1,'2021-01-23',114,8),(1015,1,'2021-01-23',115,8),(1016,1,'2021-01-23',116,8),(1017,1,'2021-01-23',117,8),(1018,1,'2021-01-23',118,8),(1019,1,'2021-01-23',119,8),(1020,1,'2021-01-23',120,8),(1021,1,'2021-01-23',121,8),(1022,1,'2021-01-23',122,8),(1023,1,'2021-01-23',130,8),(1024,1,'2021-01-23',131,8),(1025,1,'2021-01-23',132,8),(1026,1,'2021-01-23',133,8),(1027,1,'2021-01-23',134,8),(1028,1,'2021-01-23',135,8),(1029,1,'2021-01-27',139,8),(1030,1,'2021-01-28',121,8),(1031,1,'2021-01-29',97,8),(1032,1,'2021-01-29',108,8),(1033,1,'2021-01-29',124,8),(1034,1,'2021-01-29',127,8),(1035,1,'2021-01-29',139,8),(1036,1,'2021-01-29',98,8),(1037,1,'2021-01-29',142,8),(1038,1,'2021-01-30',99,8),(1039,1,'2021-01-30',100,8),(1040,1,'2021-01-30',101,8),(1041,1,'2021-01-30',102,8),(1042,1,'2021-01-30',103,8),(1043,1,'2021-01-30',104,8),(1044,1,'2021-01-30',105,8),(1045,1,'2021-01-30',106,8),(1046,1,'2021-01-30',110,8),(1047,1,'2021-01-30',111,8),(1048,1,'2021-01-30',112,8),(1049,1,'2021-01-30',113,8),(1050,1,'2021-01-30',114,8),(1051,1,'2021-01-30',115,8),(1052,1,'2021-01-30',116,8),(1053,1,'2021-01-30',117,8),(1054,1,'2021-01-30',118,8),(1055,1,'2021-01-30',119,8),(1056,1,'2021-01-30',120,8),(1057,1,'2021-01-30',121,8),(1058,1,'2021-01-30',122,8),(1059,1,'2021-01-30',130,8),(1060,1,'2021-01-30',131,8),(1061,1,'2021-01-30',132,8),(1062,1,'2021-01-30',133,8),(1063,1,'2021-01-30',134,8),(1064,1,'2021-01-30',135,8),(1065,1,'2021-02-01',107,8),(1066,1,'2021-02-01',109,8),(1067,1,'2021-02-01',123,8),(1068,1,'2021-02-01',125,8),(1069,2,'2021-02-01',128,8),(1070,2,'2021-02-01',136,8),(1071,2,'2021-02-01',137,8),(1072,1,'2021-02-01',138,8),(1073,1,'2021-02-01',140,8),(1074,1,'2021-02-01',141,8),(1075,1,'2021-02-01',142,8),(1076,1,'2021-02-02',107,8),(1077,1,'2021-02-03',139,8),(1078,1,'2021-02-03',104,8),(1079,1,'2021-02-05',142,8),(1080,1,'2021-02-09',107,8),(1081,1,'2021-02-09',139,8),(1082,1,'2021-02-09',104,8),(1083,1,'2021-02-09',142,8),(1084,1,'2021-02-09',136,8),(1085,1,'2021-02-09',141,8),(1086,1,'2021-02-09',140,8),(1087,1,'2021-02-09',138,8),(1088,2,'2021-02-09',137,8),(1089,1,'2021-02-09',108,8),(1090,1,'2021-02-09',106,8),(1091,1,'2021-02-09',105,8),(1092,1,'2021-02-09',103,8),(1093,1,'2021-02-09',101,8),(1094,1,'2021-02-09',135,8),(1095,1,'2021-02-09',118,8),(1096,1,'2021-02-09',119,8),(1097,1,'2021-02-09',133,8),(1098,1,'2021-02-09',134,8),(1099,1,'2021-02-09',102,8),(1100,1,'2021-02-09',98,8),(1101,1,'2021-02-09',99,8),(1102,1,'2021-02-09',122,8),(1103,1,'2021-02-09',100,8),(1104,1,'2021-02-09',97,8),(1105,1,'2021-02-09',120,8),(1106,2,'2021-02-09',121,8),(1107,2,'2021-02-09',123,8),(1108,1,'2021-02-09',116,8),(1109,2,'2021-02-09',124,8),(1110,2,'2021-02-09',117,8),(1111,2,'2021-02-09',125,8),(1112,1,'2021-02-09',132,8),(1113,2,'2021-02-09',131,8),(1114,2,'2021-02-09',130,8),(1115,2,'2021-02-09',128,8),(1116,2,'2021-02-09',127,8),(1117,2,'2021-02-09',110,8),(1118,2,'2021-02-09',113,8),(1119,2,'2021-02-09',115,8),(1120,2,'2021-02-09',114,8),(1121,2,'2021-02-09',112,8),(1122,2,'2021-02-09',111,8),(1123,2,'2021-02-09',109,8),(1124,1,'2021-02-10',97,8),(1125,1,'2021-02-10',108,8),(1126,1,'2021-02-10',124,8),(1127,1,'2021-02-10',127,8),(1128,1,'2021-02-10',139,8),(1129,1,'2021-02-10',98,8),(1130,1,'2021-02-11',99,8),(1131,1,'2021-02-11',100,8),(1132,1,'2021-02-11',101,8),(1133,1,'2021-02-11',102,8),(1134,1,'2021-02-11',103,8),(1135,1,'2021-02-11',104,8),(1136,1,'2021-02-11',105,8),(1137,1,'2021-02-11',106,8),(1138,1,'2021-02-11',110,8),(1139,1,'2021-02-11',111,8),(1140,1,'2021-02-11',112,8),(1141,1,'2021-02-11',113,8),(1142,1,'2021-02-11',114,8),(1143,1,'2021-02-11',115,8),(1144,1,'2021-02-11',116,8),(1145,1,'2021-02-11',117,8),(1146,1,'2021-02-11',118,8),(1147,1,'2021-02-11',119,8),(1148,1,'2021-02-11',120,8),(1149,1,'2021-02-11',121,8),(1150,1,'2021-02-11',122,8),(1151,1,'2021-02-11',130,8),(1152,1,'2021-02-11',131,8),(1153,1,'2021-02-11',132,8),(1154,1,'2021-02-11',133,8),(1155,1,'2021-02-11',134,8),(1156,1,'2021-02-11',135,8),(1157,1,'2021-02-11',107,8),(1158,1,'2021-02-11',109,8),(1159,1,'2021-02-11',123,8),(1160,1,'2021-02-11',125,8),(1161,1,'2021-02-11',128,8),(1162,1,'2021-02-11',136,8),(1163,1,'2021-02-11',137,8),(1164,1,'2021-02-11',138,8),(1165,1,'2021-02-11',140,8),(1166,1,'2021-02-11',141,8),(1167,1,'2021-02-11',142,8),(1168,1,'2021-02-18',97,8),(1169,1,'2021-02-18',108,8),(1170,1,'2021-02-18',124,8),(1171,1,'2021-02-18',127,8),(1172,1,'2021-02-18',139,8),(1173,1,'2021-02-18',98,8),(1174,1,'2021-02-18',99,8),(1175,1,'2021-02-18',100,8),(1176,1,'2021-02-18',101,8),(1177,1,'2021-02-18',102,8),(1178,1,'2021-02-18',103,8),(1179,1,'2021-02-18',104,8),(1180,1,'2021-02-18',105,8),(1181,1,'2021-02-18',106,8),(1182,1,'2021-02-18',110,8),(1183,1,'2021-02-18',111,8),(1184,1,'2021-02-18',112,8),(1185,1,'2021-02-18',113,8),(1186,1,'2021-02-18',114,8),(1187,1,'2021-02-18',115,8),(1188,1,'2021-02-18',116,8),(1189,1,'2021-02-18',117,8),(1190,1,'2021-02-18',118,8),(1191,1,'2021-02-18',119,8),(1192,1,'2021-02-18',120,8),(1193,1,'2021-02-18',121,8),(1194,1,'2021-02-19',122,8),(1195,1,'2021-02-19',130,8),(1196,1,'2021-02-19',131,8),(1197,1,'2021-02-19',132,8),(1198,1,'2021-02-19',133,8),(1199,1,'2021-02-19',134,8),(1200,1,'2021-02-19',135,8),(1201,1,'2021-02-19',107,8),(1202,1,'2021-02-19',109,8),(1203,1,'2021-02-19',123,8),(1204,1,'2021-02-19',125,8),(1205,1,'2021-02-19',128,8),(1206,1,'2021-02-19',136,8),(1207,1,'2021-02-19',137,8),(1208,1,'2021-02-19',138,8),(1209,1,'2021-02-19',140,8),(1210,1,'2021-02-19',141,8),(1211,1,'2021-02-19',142,8),(1212,1,'2021-02-22',122,8),(1213,1,'2021-02-23',141,8),(1214,2,'2021-02-23',105,8),(1215,1,'2021-02-23',114,8),(1216,1,'2021-02-23',111,8),(1217,1,'2021-02-28',97,8),(1218,1,'2021-02-28',108,8),(1219,1,'2021-02-28',124,8),(1220,1,'2021-02-28',127,8),(1221,1,'2021-02-28',139,8),(1222,1,'2021-02-28',98,8),(1223,1,'2021-03-01',99,8),(1224,1,'2021-03-01',100,8),(1225,1,'2021-03-01',101,8),(1226,1,'2021-03-01',102,8),(1227,1,'2021-03-01',103,8),(1228,1,'2021-03-01',104,8),(1229,1,'2021-03-01',105,8),(1230,1,'2021-03-01',106,8),(1231,1,'2021-03-01',110,8),(1232,1,'2021-03-01',111,8),(1233,1,'2021-03-01',112,8),(1234,1,'2021-03-01',113,8),(1235,1,'2021-03-01',114,8),(1236,1,'2021-03-01',115,8),(1237,1,'2021-03-01',116,8),(1238,1,'2021-03-01',117,8),(1239,1,'2021-03-01',118,8),(1240,1,'2021-03-01',119,8),(1241,1,'2021-03-01',120,8),(1242,1,'2021-03-01',121,8),(1243,1,'2021-03-01',122,8),(1244,1,'2021-03-01',130,8),(1245,1,'2021-03-01',131,8),(1246,1,'2021-03-01',132,8),(1247,1,'2021-03-01',133,8),(1248,1,'2021-03-01',134,8),(1249,1,'2021-03-01',135,8),(1250,1,'2021-03-01',107,8),(1251,1,'2021-03-01',109,8),(1252,1,'2021-03-01',123,8),(1253,1,'2021-03-01',125,8),(1254,1,'2021-03-01',128,8),(1255,1,'2021-03-01',136,8),(1256,1,'2021-03-01',137,8),(1257,1,'2021-03-01',138,8),(1258,1,'2021-03-01',140,8),(1259,1,'2021-03-01',141,8),(1260,1,'2021-03-01',142,8),(1261,1,'2021-03-01',139,8),(1262,1,'2021-03-06',139,8),(1263,2,'2021-03-17',142,8),(1264,1,'2021-03-22',142,8),(1265,1,'2021-03-23',132,8),(1266,1,'2021-03-25',139,8),(1267,1,'2021-03-25',124,8),(1268,1,'2021-03-25',122,8),(1269,1,'2021-03-25',102,8),(1270,1,'2021-03-25',100,8),(1271,1,'2021-03-25',97,8),(1272,1,'2021-03-25',132,8),(1273,1,'2021-03-25',105,8),(1274,1,'2021-03-25',143,8),(1275,1,'2021-03-26',111,8),(1276,1,'2021-03-26',105,8),(1277,1,'2021-03-27',139,8),(1278,1,'2021-03-28',122,8),(1279,1,'2021-03-31',143,8),(1280,1,'2021-03-31',139,8),(1281,1,'2021-03-31',122,8),(1282,1,'2021-03-31',97,8),(1283,1,'2021-03-31',105,8),(1284,1,'2021-03-31',142,8),(1285,1,'2021-03-31',141,8),(1286,1,'2021-03-31',140,8),(1287,1,'2021-03-31',138,8),(1288,1,'2021-03-31',137,8),(1289,1,'2021-03-31',106,8),(1290,1,'2021-03-31',98,8),(1291,1,'2021-03-31',104,8),(1292,1,'2021-03-31',123,8),(1293,1,'2021-03-31',121,8),(1294,1,'2021-03-31',136,8),(1295,1,'2021-03-31',133,8),(1296,1,'2021-03-31',101,8),(1297,1,'2021-03-31',135,8),(1298,1,'2021-03-31',118,8),(1299,1,'2021-03-31',119,8),(1300,1,'2021-03-31',110,8),(1301,1,'2021-03-31',112,8),(1302,1,'2021-03-31',115,8),(1303,1,'2021-03-31',114,8),(1304,1,'2021-03-31',109,8),(1305,1,'2021-03-31',127,8),(1306,1,'2021-03-31',132,8),(1307,1,'2021-03-31',131,8),(1308,1,'2021-03-31',99,8),(1309,1,'2021-03-31',117,8),(1310,1,'2021-03-31',124,8),(1311,1,'2021-03-31',125,8),(1312,1,'2021-03-31',128,8),(1313,1,'2021-03-31',116,8),(1314,1,'2021-03-31',100,8),(1315,1,'2021-03-31',107,8),(1316,1,'2021-03-31',108,8),(1317,1,'2021-04-01',114,8),(1318,1,'2021-04-02',139,8),(1319,1,'2021-04-02',143,8),(1320,2,'2021-04-05',139,8),(1321,1,'2021-04-06',122,8),(1322,1,'2021-04-06',139,8),(1323,1,'2021-04-20',132,8),(1324,1,'2021-04-21',143,8),(1325,1,'2021-04-21',123,8),(1326,1,'2021-04-22',139,8),(1327,1,'2021-04-24',102,8),(1328,1,'2021-04-25',103,8),(1329,1,'2021-04-25',137,8),(1330,1,'2021-04-25',101,8),(1331,1,'2021-04-25',121,8),(1332,1,'2021-04-25',104,8),(1333,1,'2021-04-25',122,8),(1334,1,'2021-04-25',124,8),(1335,1,'2021-04-25',120,8),(1336,1,'2021-04-25',99,8),(1337,1,'2021-04-25',97,8),(1338,1,'2021-04-25',116,8),(1339,1,'2021-04-25',117,8),(1340,1,'2021-04-25',119,8),(1341,1,'2021-04-25',125,8),(1342,1,'2021-04-25',134,8),(1343,1,'2021-04-25',130,8),(1344,1,'2021-04-25',132,8),(1345,1,'2021-04-25',131,8),(1346,1,'2021-04-25',133,8),(1347,1,'2021-04-25',118,8),(1348,1,'2021-04-25',115,8),(1349,1,'2021-04-25',127,8),(1350,1,'2021-04-25',128,8),(1351,1,'2021-04-25',106,8),(1352,1,'2021-04-25',114,8),(1353,1,'2021-04-25',113,8),(1354,1,'2021-04-25',111,8),(1355,1,'2021-04-26',109,8),(1356,1,'2021-04-26',107,8),(1357,1,'2021-04-26',135,8),(1358,1,'2021-04-27',108,8),(1359,1,'2021-04-29',99,8),(1360,1,'2021-04-29',143,8),(1361,1,'2021-04-29',142,8),(1362,1,'2021-04-29',141,8),(1363,1,'2021-04-29',140,8),(1364,1,'2021-04-29',97,8),(1365,1,'2021-05-02',114,8),(1366,1,'2021-05-16',109,8),(1367,1,'2021-05-20',109,8),(1368,1,'2021-05-20',110,8),(1369,1,'2021-05-22',123,8),(1370,1,'2021-05-22',138,8),(1371,1,'2021-05-22',139,8),(1372,1,'2021-05-22',117,8),(1373,1,'2021-05-23',111,8),(1374,1,'2021-05-23',105,8),(1375,1,'2021-05-24',139,8),(1376,1,'2021-05-24',122,8),(1377,1,'2021-05-25',139,8),(1378,1,'2021-05-25',122,8),(1379,1,'2021-05-25',123,8),(1380,1,'2021-05-25',117,8),(1381,1,'2021-05-25',110,8),(1382,1,'2021-05-25',143,8),(1383,1,'2021-05-25',142,8),(1384,1,'2021-05-25',141,8),(1385,1,'2021-05-25',140,8),(1386,1,'2021-05-25',138,8),(1387,1,'2021-05-25',137,8),(1388,1,'2021-05-25',121,8),(1389,1,'2021-05-25',124,8),(1390,1,'2021-05-25',118,8),(1391,1,'2021-05-25',116,8),(1392,1,'2021-05-25',111,8),(1393,1,'2021-05-25',109,8),(1394,1,'2021-05-25',102,8),(1395,1,'2021-05-25',100,8),(1396,1,'2021-05-25',99,8),(1397,1,'2021-05-25',98,8),(1398,1,'2021-05-25',97,8),(1399,1,'2021-05-25',119,8),(1400,1,'2021-05-25',136,8),(1401,1,'2021-05-25',134,8),(1402,1,'2021-05-25',133,8),(1403,1,'2021-05-25',135,8),(1404,1,'2021-05-25',132,8),(1405,1,'2021-05-25',131,8),(1406,1,'2021-05-25',130,8),(1407,1,'2021-05-25',128,8),(1408,1,'2021-05-25',127,8),(1409,1,'2021-05-25',125,8),(1410,1,'2021-05-25',104,8),(1411,1,'2021-05-25',103,8),(1412,1,'2021-05-25',101,8),(1413,1,'2021-05-25',105,8),(1414,1,'2021-05-25',115,8),(1415,1,'2021-05-25',114,8),(1416,1,'2021-05-25',113,8),(1417,1,'2021-05-25',112,8),(1418,1,'2021-05-25',120,8),(1419,1,'2021-05-25',106,8),(1420,1,'2021-05-25',108,8),(1421,1,'2021-05-25',107,8),(1422,1,'2021-05-28',137,8),(1423,1,'2021-05-29',143,8),(1424,1,'2021-05-30',139,8),(1425,1,'2021-05-30',143,8),(1426,1,'2021-05-30',140,8),(1427,1,'2021-06-06',109,8),(1428,1,'2021-06-06',143,8),(1429,1,'2021-06-15',117,8),(1430,1,'2021-06-17',137,8),(1431,1,'2021-06-18',143,8),(1432,1,'2021-06-19',142,8),(1433,1,'2021-06-19',141,8),(1434,1,'2021-06-19',140,8),(1435,2,'2021-06-20',105,8),(1436,1,'2021-06-20',114,8),(1437,2,'2021-06-24',143,8),(1438,1,'2021-06-24',105,8),(1439,1,'2021-06-24',142,8),(1440,1,'2021-06-24',140,8),(1441,1,'2021-06-24',137,8),(1442,1,'2021-06-24',139,8),(1443,1,'2021-06-24',141,8),(1444,1,'2021-06-24',138,8),(1445,1,'2021-06-24',106,8),(1446,1,'2021-06-24',104,8),(1447,1,'2021-06-24',136,8),(1448,1,'2021-06-24',119,8),(1449,1,'2021-06-24',118,8),(1450,1,'2021-06-24',135,8),(1451,1,'2021-06-24',121,8),(1452,1,'2021-06-24',123,8),(1453,1,'2021-06-24',125,8),(1454,1,'2021-06-24',122,8),(1455,1,'2021-06-24',127,8),(1456,1,'2021-06-24',128,8),(1457,1,'2021-06-24',124,8),(1458,1,'2021-06-24',101,8),(1459,2,'2021-06-24',99,8),(1460,1,'2021-06-24',103,8),(1461,1,'2021-06-24',97,8),(1462,2,'2021-06-24',100,8),(1463,2,'2021-06-24',98,8),(1464,1,'2021-06-24',102,8),(1465,2,'2021-06-24',110,8),(1466,2,'2021-06-24',113,8),(1467,2,'2021-06-24',115,8),(1468,2,'2021-06-24',112,8),(1469,2,'2021-06-24',114,8),(1470,1,'2021-06-24',111,8),(1471,1,'2021-06-24',109,8),(1472,1,'2021-06-24',120,8),(1473,2,'2021-06-24',116,8),(1474,2,'2021-06-24',117,8),(1475,1,'2021-06-24',134,8),(1476,2,'2021-06-24',133,8),(1477,1,'2021-06-24',131,8),(1478,2,'2021-06-24',130,8),(1479,2,'2021-06-24',132,8),(1480,1,'2021-06-24',107,8),(1481,2,'2021-06-24',108,8),(1482,1,'2021-06-25',137,8),(1483,1,'2021-06-29',109,8),(1484,1,'2021-06-29',143,8),(1485,1,'2021-07-01',137,8),(1486,1,'2021-07-04',112,8),(1487,1,'2021-07-04',111,8),(1488,1,'2021-07-05',137,8),(1489,1,'2021-07-06',110,8),(1490,1,'2021-07-07',110,8),(1491,2,'2021-07-08',110,8),(1492,1,'2021-07-08',111,8),(1493,1,'2021-07-08',117,8),(1494,1,'2021-07-09',111,8),(1495,1,'2021-07-09',105,8),(1496,1,'2021-07-10',139,8),(1497,1,'2021-07-10',109,8),(1498,1,'2021-07-10',110,8),(1499,1,'2021-07-12',143,8),(1500,1,'2021-07-13',110,8),(1501,1,'2021-07-14',110,8),(1502,1,'2021-07-15',143,8),(1503,1,'2021-07-17',110,8),(1504,2,'2021-07-19',110,8),(1505,16,'2021-07-19',117,8),(1506,1,'2021-07-20',100,8),(1507,1,'2021-07-22',109,8),(1508,1,'2021-07-27',100,8),(1509,2,'2021-07-30',117,8),(1510,2,'2021-07-30',114,8),(1511,1,'2021-07-30',113,8),(1512,1,'2021-07-30',121,8),(1513,1,'2021-07-31',103,8),(1514,1,'2021-07-31',101,8),(1515,1,'2021-07-31',104,8),(1516,1,'2021-07-31',143,8),(1517,2,'2021-07-31',110,8),(1518,2,'2021-07-31',123,8),(1519,1,'2021-07-31',118,8),(1520,1,'2021-07-31',119,8),(1521,1,'2021-08-01',98,8),(1522,1,'2021-08-01',136,8),(1523,1,'2021-08-01',103,8),(1524,1,'2021-08-01',122,8),(1525,4,'2021-08-01',110,8),(1526,1,'2021-08-01',115,8),(1527,1,'2021-08-02',143,8),(1528,4,'2021-08-02',110,8),(1529,1,'2021-08-02',116,8),(1530,1,'2021-08-02',117,8),(1531,1,'2021-08-02',135,8),(1532,1,'2021-08-02',99,8),(1533,1,'2021-08-02',98,8),(1534,1,'2021-08-02',122,8),(1535,1,'2021-08-02',142,8),(1536,1,'2021-08-02',141,8),(1537,1,'2021-08-02',102,8),(1538,1,'2021-08-02',125,8),(1539,1,'2021-08-03',130,8),(1540,1,'2021-08-03',131,8),(1541,1,'2021-08-03',127,8),(1542,1,'2021-08-03',133,8),(1543,1,'2021-08-03',132,8),(1544,1,'2021-08-03',98,8),(1545,1,'2021-08-03',112,8),(1546,1,'2021-08-03',128,8),(1547,1,'2021-08-03',97,8),(1548,2,'2021-08-03',110,8),(1549,1,'2021-08-03',102,8),(1550,1,'2021-08-03',124,8),(1551,1,'2021-08-04',140,8),(1552,4,'2021-08-04',124,8),(1553,4,'2021-08-04',110,8),(1554,1,'2021-08-04',100,8),(1555,2,'2021-08-04',123,8),(1556,3,'2021-08-05',123,8),(1557,5,'2021-08-05',124,8),(1558,4,'2021-08-05',110,8),(1559,1,'2021-08-06',107,8),(1560,1,'2021-08-06',123,8),(1561,1,'2021-08-06',110,8),(1562,2,'2021-08-06',124,8),(1563,1,'2021-08-06',106,8),(1564,1,'2021-08-07',143,8),(1565,1,'2021-08-08',137,8),(1566,1,'2021-08-09',125,8),(1567,1,'2021-08-09',124,8),(1568,1,'2021-08-10',99,8),(1569,1,'2021-08-10',110,8),(1570,1,'2021-08-11',141,8),(1571,1,'2021-08-11',140,8),(1572,1,'2021-08-11',121,8),(1573,1,'2021-08-13',105,8),(1574,2,'2021-08-13',110,8),(1575,3,'2021-08-13',123,8),(1576,3,'2021-08-13',124,8),(1577,1,'2021-08-14',113,8),(1578,1,'2021-08-14',135,8),(1579,3,'2021-08-15',123,8),(1580,1,'2021-08-16',123,8),(1581,1,'2021-08-17',124,8),(1582,1,'2021-08-17',123,8),(1583,1,'2021-08-17',110,8),(1584,1,'2021-08-17',137,8),(1585,3,'2021-08-18',110,8),(1586,6,'2021-08-18',123,8),(1587,3,'2021-08-18',124,8),(1588,1,'2021-08-18',103,8),(1589,1,'2021-08-18',142,8),(1590,1,'2021-08-18',100,8),(1591,4,'2021-08-19',110,8),(1592,4,'2021-08-19',124,8),(1593,1,'2021-08-19',137,8),(1594,1,'2021-08-19',127,8),(1595,1,'2021-08-20',115,8),(1596,2,'2021-08-22',117,8),(1597,1,'2021-08-22',143,8),(1598,1,'2021-08-23',143,8),(1599,1,'2021-08-24',136,8),(1600,1,'2021-08-25',138,8),(1601,1,'2021-08-25',122,8),(1602,1,'2021-08-26',98,8),(1603,1,'2021-08-26',128,8),(1604,1,'2021-08-26',117,8),(1605,1,'2021-08-26',136,8),(1606,1,'2021-08-26',124,8),(1607,1,'2021-08-27',116,8),(1608,1,'2021-08-27',110,8),(1609,1,'2021-08-27',138,8),(1610,1,'2021-08-28',141,8),(1611,1,'2021-08-28',123,8),(1612,1,'2021-08-28',114,8),(1613,1,'2021-08-28',143,8),(1614,1,'2021-08-28',122,8),(1615,1,'2021-08-28',125,8),(1616,1,'2021-08-28',118,8),(1617,1,'2021-08-28',119,8),(1618,1,'2021-08-28',113,8),(1619,1,'2021-08-28',121,8),(1620,1,'2021-08-29',131,8),(1621,1,'2021-08-29',137,8),(1622,1,'2021-08-29',107,8),(1623,1,'2021-08-29',102,8),(1624,1,'2021-08-29',98,8),(1625,1,'2021-08-29',115,8),(1626,1,'2021-08-29',140,8),(1627,1,'2021-08-29',109,8),(1628,1,'2021-08-29',139,8),(1629,1,'2021-08-29',135,8),(1630,1,'2021-08-29',134,8),(1631,1,'2021-08-29',116,8),(1632,1,'2021-08-29',142,8),(1633,1,'2021-08-29',133,8),(1634,1,'2021-08-29',105,8),(1635,1,'2021-08-29',106,8),(1636,1,'2021-08-30',128,8),(1637,1,'2021-08-30',127,8),(1638,1,'2021-08-30',132,8),(1639,1,'2021-08-30',108,8),(1640,1,'2021-08-30',97,8),(1641,1,'2021-08-30',112,8),(1642,1,'2021-08-30',114,8),(1643,1,'2021-08-30',101,8),(1644,1,'2021-08-30',111,8),(1645,1,'2021-08-30',99,8),(1646,1,'2021-08-30',103,8),(1647,1,'2021-08-30',100,8),(1648,1,'2021-08-31',130,8),(1649,1,'2021-08-31',106,8),(1650,2,'2021-09-01',124,8),(1651,1,'2021-09-01',117,8),(1652,1,'2021-09-01',107,8),(1653,1,'2021-09-01',125,8),(1654,1,'2021-09-01',120,8),(1655,1,'2021-09-01',104,8),(1656,1,'2021-09-01',136,8),(1657,1,'2021-09-02',138,8),(1658,1,'2021-09-02',131,8),(1659,1,'2021-09-02',99,8),(1660,1,'2021-09-02',143,8),(1661,1,'2021-09-02',110,8),(1662,1,'2021-09-03',122,8),(1663,1,'2021-09-03',123,8),(1664,1,'2021-09-03',121,8),(1665,1,'2021-09-03',141,8),(1666,1,'2021-09-03',98,8),(1667,1,'2021-09-03',135,8),(1668,1,'2021-09-03',137,8),(1669,1,'2021-09-03',140,8),(1670,1,'2021-09-03',110,8),(1671,1,'2021-09-03',115,8),(1672,1,'2021-09-03',102,8),(1673,1,'2021-09-03',119,8),(1674,1,'2021-09-03',104,8),(1675,1,'2021-09-04',121,8),(1676,1,'2021-09-04',125,8),(1677,1,'2021-09-04',109,8),(1678,1,'2021-09-04',101,8),(1679,1,'2021-09-04',118,8),(1680,1,'2021-09-04',113,8),(1681,1,'2021-09-04',142,8),(1682,1,'2021-09-04',133,8),(1683,1,'2021-09-04',132,8),(1684,1,'2021-09-04',141,8),(1685,1,'2021-09-04',105,8),(1686,1,'2021-09-04',102,8),(1687,1,'2021-09-04',134,8),(1688,1,'2021-09-05',139,8),(1689,1,'2021-09-05',130,8),(1690,1,'2021-09-05',127,8),(1691,1,'2021-09-05',140,8),(1692,1,'2021-09-05',111,8),(1693,1,'2021-09-06',108,8),(1694,1,'2021-09-06',114,8),(1695,1,'2021-09-06',116,8),(1696,1,'2021-09-06',128,8),(1697,1,'2021-09-06',99,8),(1698,1,'2021-09-06',97,8),(1699,1,'2021-09-06',103,8),(1700,1,'2021-09-06',112,8),(1701,1,'2021-09-06',106,8),(1702,1,'2021-09-06',101,8),(1703,1,'2021-09-06',124,8),(1704,1,'2021-09-07',136,8),(1705,1,'2021-09-07',104,8),(1706,1,'2021-09-07',117,8),(1707,1,'2021-09-07',107,8),(1708,1,'2021-09-07',124,8),(1709,1,'2021-09-07',120,8),(1710,1,'2021-09-08',123,8),(1711,1,'2021-09-08',138,8),(1712,1,'2021-09-08',143,8),(1713,1,'2021-09-08',109,8),(1714,1,'2021-09-08',131,8),(1715,1,'2021-09-08',124,8),(1716,1,'2021-09-09',122,8),(1717,1,'2021-09-09',137,8),(1718,2,'2021-09-09',135,8),(1719,1,'2021-09-09',119,8),(1720,1,'2021-09-09',121,8),(1721,1,'2021-09-09',98,8),(1722,1,'2021-09-09',102,8),(1723,1,'2021-09-09',118,8),(1724,1,'2021-09-09',125,8),(1725,1,'2021-09-09',132,8),(1726,1,'2021-09-10',113,8),(1727,1,'2021-09-10',110,8),(1728,1,'2021-09-10',115,8),(1729,1,'2021-09-10',141,8),(1730,1,'2021-09-10',133,8),(1731,1,'2021-09-10',105,8),(1732,1,'2021-09-10',123,8),(1733,1,'2021-09-10',140,8),(1734,1,'2021-09-11',108,8),(1735,2,'2021-09-11',130,8),(1736,1,'2021-09-11',127,8),(1737,1,'2021-09-11',114,8),(1738,1,'2021-09-11',106,8),(1739,1,'2021-09-11',139,8),(1740,1,'2021-09-12',103,8),(1741,1,'2021-09-12',99,8),(1742,1,'2021-09-12',97,8),(1743,1,'2021-09-12',109,8),(1744,1,'2021-09-12',128,8),(1745,1,'2021-09-12',112,8),(1746,1,'2021-09-12',142,8),(1747,1,'2021-09-12',100,8),(1748,1,'2021-09-12',111,8),(1749,1,'2021-09-12',116,8),(1750,1,'2021-09-12',107,8),(1751,1,'2021-09-13',104,8),(1752,1,'2021-09-13',120,8),(1753,1,'2021-09-13',134,8),(1754,1,'2021-09-13',138,8),(1755,1,'2021-09-13',103,8),(1756,1,'2021-09-13',101,8),(1757,1,'2021-09-13',142,8),(1758,1,'2021-09-13',100,8),(1759,1,'2021-09-13',131,8),(1760,1,'2021-09-13',106,8),(1761,1,'2021-09-14',122,8),(1762,1,'2021-09-14',143,8),(1763,1,'2021-09-14',136,8),(1764,1,'2021-09-14',124,8),(1765,1,'2021-09-14',117,8),(1766,1,'2021-09-14',127,8),(1767,1,'2021-09-15',125,8),(1768,1,'2021-09-15',133,8),(1769,2,'2021-09-15',115,8),(1770,1,'2021-09-15',132,8),(1771,1,'2021-09-15',102,8),(1772,1,'2021-09-15',123,8),(1773,1,'2021-09-15',105,8),(1774,1,'2021-09-15',135,8),(1775,1,'2021-09-15',121,8),(1776,1,'2021-09-15',137,8),(1777,1,'2021-09-15',98,8),(1778,1,'2021-09-16',118,8),(1779,1,'2021-09-16',119,8),(1780,1,'2021-09-16',108,8),(1781,1,'2021-09-16',140,8),(1782,1,'2021-09-16',110,8),(1783,1,'2021-09-16',133,8),(1784,1,'2021-09-17',101,8),(1785,1,'2021-09-17',134,8),(1786,1,'2021-09-17',139,8),(1787,1,'2021-09-17',112,8),(1788,1,'2021-09-17',127,8),(1789,1,'2021-09-17',130,8),(1790,1,'2021-09-17',106,8),(1791,1,'2021-09-17',113,8),(1792,1,'2021-09-17',143,8),(1793,1,'2021-09-17',125,8),(1794,1,'2021-09-17',142,8),(1795,1,'2021-09-18',114,8),(1796,1,'2021-09-18',109,8),(1797,1,'2021-09-18',108,8),(1798,1,'2021-09-18',116,8),(1799,1,'2021-09-18',128,8),(1800,1,'2021-09-18',107,8),(1801,1,'2021-09-18',111,8),(1802,1,'2021-09-18',141,8),(1803,1,'2021-09-18',99,8),(1804,1,'2021-09-18',103,8),(1805,1,'2021-09-18',105,8),(1806,1,'2021-09-19',97,8),(1807,1,'2021-09-19',100,8),(1808,1,'2021-09-19',135,8),(1809,2,'2021-09-19',136,8),(1810,1,'2021-09-19',111,8),(1811,1,'2021-09-19',104,8),(1812,1,'2021-09-19',122,8),(1813,1,'2021-09-19',120,8),(1814,1,'2021-09-19',139,8),(1815,1,'2021-09-19',143,8),(1816,1,'2021-09-19',106,8),(1817,1,'2021-09-19',117,8),(1818,1,'2021-09-20',106,8),(1819,1,'2021-09-20',124,8),(1820,1,'2021-09-20',131,8),(1821,2,'2021-09-20',138,8),(1822,1,'2021-09-21',137,8),(1823,3,'2021-09-21',123,8),(1824,1,'2021-09-21',98,8),(1825,2,'2021-09-21',124,8),(1826,1,'2021-09-21',132,8),(1827,1,'2021-09-21',135,8),(1828,2,'2021-09-22',98,8),(1829,3,'2021-09-22',110,8),(1830,1,'2021-09-22',123,8),(1831,3,'2021-09-22',124,8),(1832,1,'2021-09-22',137,8),(1833,1,'2021-09-22',132,8),(1834,1,'2021-09-22',135,8),(1835,2,'2021-09-22',106,8),(1836,1,'2021-09-22',111,8),(1837,1,'2021-09-22',143,8),(1838,1,'2021-09-22',142,8),(1839,1,'2021-09-22',141,8),(1840,2,'2021-09-22',140,8),(1841,1,'2021-09-22',139,8),(1842,1,'2021-09-22',138,8),(1843,1,'2021-09-22',99,8),(1844,1,'2021-09-22',97,8),(1845,1,'2021-09-22',109,8),(1846,1,'2021-09-22',122,8),(1847,1,'2021-09-22',125,8),(1848,1,'2021-09-22',136,8),(1849,1,'2021-09-22',133,8),(1850,1,'2021-09-22',131,8),(1851,2,'2021-09-22',134,8),(1852,1,'2021-09-22',107,8),(1853,1,'2021-09-22',105,8),(1854,1,'2021-09-22',112,8),(1855,1,'2021-09-22',102,8),(1856,1,'2021-09-22',100,8),(1857,1,'2021-09-22',119,8),(1858,1,'2021-09-22',118,8),(1859,1,'2021-09-22',130,8),(1860,1,'2021-09-22',128,8),(1861,1,'2021-09-22',127,8),(1862,1,'2021-09-22',121,8),(1863,1,'2021-09-22',104,8),(1864,1,'2021-09-22',103,8),(1865,1,'2021-09-22',101,8),(1866,1,'2021-09-22',117,8),(1867,1,'2021-09-22',116,8),(1868,1,'2021-09-22',115,8),(1869,1,'2021-09-22',114,8),(1870,1,'2021-09-22',113,8),(1871,1,'2021-09-22',120,8),(1872,1,'2021-09-23',112,8),(1873,1,'2021-09-23',127,8),(1874,1,'2021-09-23',119,8),(1875,1,'2021-09-23',130,8),(1876,1,'2021-09-23',117,8),(1877,1,'2021-09-23',113,8),(1878,1,'2021-09-23',102,8),(1879,1,'2021-09-23',114,8),(1880,1,'2021-09-24',117,8),(1881,1,'2021-09-24',128,8),(1882,2,'2021-09-24',143,8),(1883,1,'2021-09-24',108,8),(1884,1,'2021-09-24',139,8),(1885,1,'2021-09-24',110,8),(1886,1,'2021-09-24',118,8),(1887,1,'2021-09-24',141,8),(1888,1,'2021-09-24',125,8),(1889,1,'2021-09-24',137,8),(1890,1,'2021-09-25',142,8),(1891,1,'2021-09-25',120,8),(1892,2,'2021-09-25',117,8),(1893,1,'2021-09-25',109,8),(1894,1,'2021-09-25',101,8),(1895,1,'2021-09-25',106,8),(1896,1,'2021-09-25',97,8),(1897,1,'2021-09-25',100,8),(1898,1,'2021-09-25',103,8),(1899,1,'2021-09-26',116,8),(1900,1,'2021-09-26',125,8),(1901,1,'2021-09-26',111,8),(1902,1,'2021-09-26',105,8),(1903,1,'2021-09-26',123,8),(1904,1,'2021-09-27',104,8),(1905,1,'2021-09-27',98,8),(1906,1,'2021-09-27',121,8),(1907,1,'2021-09-28',115,8),(1908,1,'2021-09-28',112,8),(1909,1,'2021-09-28',133,8),(1910,1,'2021-09-28',135,8),(1911,1,'2021-09-29',107,8),(1912,1,'2021-09-29',102,8),(1913,1,'2021-09-29',136,8),(1914,2,'2021-09-29',124,8),(1915,1,'2021-09-29',132,8),(1916,1,'2021-09-29',127,8),(1917,1,'2021-09-29',118,8),(1918,1,'2021-09-29',110,8),(1919,2,'2021-09-30',99,8),(1920,1,'2021-09-30',143,8),(1921,1,'2021-09-30',110,8),(1922,1,'2021-09-30',111,8),(1923,1,'2021-09-30',104,8),(1924,1,'2021-09-30',124,8),(1925,1,'2021-09-30',105,8),(1926,1,'2021-09-30',125,8),(1927,1,'2021-09-30',106,8),(1928,1,'2021-09-30',116,8),(1929,1,'2021-09-30',117,8),(1930,1,'2021-09-30',141,8),(1931,1,'2021-09-30',128,8),(1932,1,'2021-09-30',140,8),(1933,2,'2021-09-30',123,8),(1934,1,'2021-10-01',137,8),(1935,1,'2021-10-01',125,8),(1936,1,'2021-10-01',120,8),(1937,1,'2021-10-01',116,8),(1938,1,'2021-10-01',141,8),(1939,1,'2021-10-01',140,8),(1940,1,'2021-10-01',143,8),(1941,1,'2021-10-01',142,8),(1942,1,'2021-10-01',101,8),(1943,1,'2021-10-02',131,8),(1944,2,'2021-10-02',139,8),(1945,1,'2021-10-02',134,8),(1946,3,'2021-10-02',124,8),(1947,1,'2021-10-02',120,8),(1948,1,'2021-10-02',118,8),(1949,1,'2021-10-02',122,8),(1950,1,'2021-10-02',103,8),(1951,1,'2021-10-02',115,8),(1952,1,'2021-10-02',107,8),(1953,1,'2021-10-02',127,8),(1954,1,'2021-10-02',138,8),(1955,1,'2021-10-02',109,8),(1956,1,'2021-10-02',140,8),(1957,1,'2021-10-02',141,8),(1958,1,'2021-10-02',142,8),(1959,1,'2021-10-02',143,8),(1960,1,'2021-10-02',112,8),(1961,1,'2021-10-03',111,8),(1962,1,'2021-10-03',121,8),(1963,1,'2021-10-03',137,8),(1964,1,'2021-10-03',108,8),(1965,1,'2021-10-03',104,8),(1966,1,'2021-10-03',128,8),(1967,1,'2021-10-03',106,8),(1968,1,'2021-10-03',100,8),(1969,1,'2021-10-03',119,8),(1970,1,'2021-10-03',112,8),(1971,1,'2021-10-03',97,8),(1972,1,'2021-10-04',105,8),(1973,1,'2021-10-04',115,8),(1974,1,'2021-10-04',133,8),(1975,1,'2021-10-04',123,8),(1976,1,'2021-10-04',97,8),(1977,1,'2021-10-04',135,8),(1978,2,'2021-10-05',136,8),(1979,1,'2021-10-05',130,8),(1980,1,'2021-10-05',117,8),(1981,1,'2021-10-05',120,8),(1982,1,'2021-10-05',121,8),(1983,1,'2021-10-05',119,8),(1984,1,'2021-10-05',97,8),(1985,1,'2021-10-05',98,8),(1986,1,'2021-10-05',99,8),(1987,1,'2021-10-05',100,8),(1988,1,'2021-10-05',101,8),(1989,1,'2021-10-05',102,8),(1990,1,'2021-10-05',137,8),(1991,1,'2021-10-05',113,8),(1992,1,'2021-10-05',133,8),(1993,2,'2021-10-05',114,8),(1994,1,'2021-10-05',134,8),(1995,1,'2021-10-05',135,8),(1996,1,'2021-10-05',127,8),(1997,1,'2021-10-06',143,8),(1998,1,'2021-10-06',141,8),(1999,1,'2021-10-06',130,8),(2000,1,'2021-10-07',135,8),(2001,1,'2021-10-07',138,8),(2002,1,'2021-10-07',139,8),(2003,1,'2021-10-07',142,8),(2004,1,'2021-10-07',101,8),(2005,1,'2021-10-07',98,8),(2006,1,'2021-10-07',113,8),(2007,1,'2021-10-07',132,8),(2008,1,'2021-10-07',125,8),(2009,1,'2021-10-07',128,8),(2010,1,'2021-10-07',120,8),(2011,1,'2021-10-07',118,8),(2012,1,'2021-10-08',137,8),(2013,1,'2021-10-08',110,8),(2014,1,'2021-10-08',143,8),(2015,1,'2021-10-09',97,8),(2016,1,'2021-10-09',100,8),(2017,1,'2021-10-09',140,8),(2018,1,'2021-10-09',112,8),(2019,1,'2021-10-09',103,8),(2020,1,'2021-10-09',137,8),(2021,1,'2021-10-09',108,8),(2022,1,'2021-10-09',105,8),(2023,1,'2021-10-10',115,8),(2024,1,'2021-10-10',133,8),(2025,1,'2021-10-10',124,8),(2026,1,'2021-10-10',132,8),(2027,1,'2021-10-13',143,8),(2028,1,'2021-10-18',140,8),(2029,1,'2021-10-18',142,8),(2030,1,'2021-10-18',137,8),(2031,1,'2021-10-18',138,8),(2032,1,'2021-10-18',119,8),(2033,1,'2021-10-18',114,8),(2034,1,'2021-10-19',108,8),(2035,1,'2021-10-19',130,8),(2036,1,'2021-10-19',132,8),(2037,1,'2021-10-20',141,8),(2038,1,'2021-10-20',108,8),(2039,1,'2021-10-20',119,8),(2040,1,'2021-10-20',122,8),(2041,1,'2021-10-20',143,8),(2042,1,'2021-10-20',138,8),(2043,1,'2021-10-20',139,8),(2044,1,'2021-10-20',98,8),(2045,1,'2021-10-20',140,8),(2046,3,'2021-10-20',144,8),(2047,2,'2021-10-20',145,8),(2048,2,'2021-10-20',146,8),(2049,1,'2021-10-20',147,8),(2050,1,'2021-10-20',148,8),(2051,1,'2021-10-20',149,8),(2052,2,'2021-10-20',150,8),(2053,2,'2021-10-20',151,8),(2054,1,'2021-10-21',152,8),(2055,1,'2021-10-21',153,8),(2056,1,'2021-10-21',154,8),(2057,1,'2021-10-21',146,8),(2058,1,'2021-10-21',155,8),(2059,1,'2021-10-21',156,8),(2060,1,'2021-10-21',157,8),(2061,1,'2021-10-21',151,8),(2062,1,'2021-10-22',157,8),(2063,1,'2021-10-22',124,8),(2064,2,'2021-10-23',124,8),(2065,1,'2021-10-23',144,8),(2066,1,'2021-10-23',145,8),(2067,1,'2021-10-23',141,8),(2068,1,'2021-10-25',153,8),(2069,1,'2021-10-26',153,8),(2070,1,'2021-10-26',144,8),(2071,1,'2021-10-26',145,8),(2072,1,'2021-10-26',156,8),(2073,2,'2021-10-26',158,8),(2074,2,'2021-10-27',116,8),(2075,2,'2021-10-27',143,8),(2076,1,'2021-10-27',156,8),(2077,1,'2021-10-27',134,8),(2078,2,'2021-10-27',158,8),(2079,2,'2021-10-27',157,8),(2080,1,'2021-10-28',118,8),(2081,1,'2021-10-29',130,8),(2082,1,'2021-10-29',156,8),(2083,1,'2021-10-31',137,8),(2084,1,'2021-10-31',124,8),(2085,1,'2021-10-31',159,8),(2086,1,'2021-11-01',156,8),(2087,1,'2021-11-01',158,8),(2088,1,'2021-11-01',159,8),(2089,1,'2021-11-02',108,8),(2090,1,'2021-11-03',143,8),(2091,3,'2021-11-04',124,8),(2092,1,'2021-11-04',143,8),(2093,1,'2021-11-05',143,8),(2094,1,'2021-11-06',98,8),(2095,1,'2021-11-08',123,8),(2096,1,'2021-11-08',110,8),(2097,1,'2021-11-08',124,8),(2098,1,'2021-11-09',106,8),(2099,1,'2021-11-09',123,8),(2100,1,'2021-11-10',106,8),(2101,1,'2021-11-10',124,8),(2102,1,'2021-11-10',110,8),(2103,1,'2021-11-11',123,8),(2104,1,'2021-11-11',157,8),(2105,1,'2021-11-11',124,8),(2106,1,'2021-11-11',110,8),(2107,1,'2021-11-12',113,8),(2108,2,'2021-11-12',123,8),(2109,1,'2021-11-12',145,8),(2110,1,'2021-11-12',119,8),(2111,1,'2021-11-12',104,8),(2112,1,'2021-11-12',115,8),(2113,1,'2021-11-12',99,8),(2114,1,'2021-11-12',120,8),(2115,1,'2021-11-12',102,8),(2116,1,'2021-11-13',105,8),(2117,1,'2021-11-13',103,8),(2118,1,'2021-11-13',107,8),(2119,1,'2021-11-13',122,8),(2120,1,'2021-11-13',112,8),(2121,1,'2021-11-13',97,8),(2122,1,'2021-11-13',139,8),(2123,1,'2021-11-13',133,8),(2124,1,'2021-11-13',141,8),(2125,1,'2021-11-13',134,8),(2126,1,'2021-11-13',101,8),(2127,1,'2021-11-13',140,8),(2128,1,'2021-11-13',118,8),(2129,1,'2021-11-13',158,8),(2130,1,'2021-11-13',130,8),(2131,1,'2021-11-13',99,8),(2132,1,'2021-11-13',110,8),(2133,1,'2021-11-14',132,8),(2134,1,'2021-11-14',110,8),(2135,1,'2021-11-14',153,8),(2136,3,'2021-11-14',124,8),(2137,1,'2021-11-14',107,8),(2138,1,'2021-11-14',105,8),(2139,1,'2021-11-14',154,8),(2140,2,'2021-11-14',158,8),(2141,1,'2021-11-14',157,8),(2142,1,'2021-11-14',121,8),(2143,1,'2021-11-14',100,8),(2144,1,'2021-11-14',142,8),(2145,1,'2021-11-14',131,8),(2146,1,'2021-11-14',143,8),(2147,1,'2021-11-14',114,8),(2148,1,'2021-11-15',127,8),(2149,1,'2021-11-15',117,8),(2150,1,'2021-11-15',98,8),(2151,1,'2021-11-15',108,8),(2152,1,'2021-11-15',124,8),(2153,1,'2021-11-15',135,8),(2154,1,'2021-11-15',123,8),(2155,1,'2021-11-15',109,8),(2156,1,'2021-11-15',148,8),(2157,1,'2021-11-15',156,8),(2158,1,'2021-11-15',152,8),(2159,1,'2021-11-15',157,8),(2160,1,'2021-11-16',107,8),(2161,1,'2021-11-16',136,8),(2162,1,'2021-11-16',116,8),(2163,1,'2021-11-16',106,8),(2164,1,'2021-11-16',109,8),(2165,1,'2021-11-16',158,8),(2166,1,'2021-11-16',125,8),(2167,1,'2021-11-16',124,8),(2168,1,'2021-11-17',128,8),(2169,2,'2021-11-17',150,8),(2170,2,'2021-11-17',151,8),(2171,2,'2021-11-17',140,8),(2172,2,'2021-11-17',110,8),(2173,3,'2021-11-17',124,8),(2174,1,'2021-11-17',149,8),(2175,1,'2021-11-17',158,8),(2176,2,'2021-11-17',106,8),(2177,1,'2021-11-17',111,8),(2178,1,'2021-11-17',123,8),(2179,1,'2021-11-17',104,8),(2180,1,'2021-11-17',105,8),(2181,1,'2021-11-17',125,8),(2182,1,'2021-11-17',116,8),(2183,1,'2021-11-17',117,8),(2184,1,'2021-11-17',157,8),(2185,1,'2021-11-17',118,8),(2186,1,'2021-11-17',138,8),(2187,1,'2021-11-17',109,8),(2188,1,'2021-11-17',139,8),(2189,1,'2021-11-17',141,8),(2190,1,'2021-11-17',112,8),(2191,1,'2021-11-17',122,8),(2192,1,'2021-11-17',142,8),(2193,1,'2021-11-17',103,8),(2194,1,'2021-11-17',143,8),(2195,1,'2021-11-18',115,8),(2196,2,'2021-11-18',107,8),(2197,1,'2021-11-18',127,8),(2198,2,'2021-11-18',137,8),(2199,1,'2021-11-18',123,8),(2200,1,'2021-11-18',111,8),(2201,1,'2021-11-18',112,8),(2202,1,'2021-11-18',156,8),(2203,1,'2021-11-18',116,8),(2204,1,'2021-11-19',124,8),(2205,1,'2021-11-19',120,8),(2206,1,'2021-11-19',135,8),(2207,1,'2021-11-19',125,8),(2208,1,'2021-11-20',123,8),(2209,2,'2021-11-20',124,8),(2210,1,'2021-11-20',102,8),(2211,1,'2021-11-20',106,8),(2212,1,'2021-11-20',157,8),(2213,1,'2021-11-20',145,8),(2214,1,'2021-11-20',115,8),(2215,1,'2021-11-20',159,8),(2216,1,'2021-11-20',154,8),(2217,1,'2021-11-20',117,8),(2218,1,'2021-11-20',130,8),(2219,1,'2021-11-20',144,8),(2220,1,'2021-11-20',133,8),(2221,1,'2021-11-20',158,8),(2222,1,'2021-11-20',100,8),(2223,1,'2021-11-20',119,8),(2224,1,'2021-11-20',132,8),(2225,1,'2021-11-20',139,8),(2226,1,'2021-11-21',97,8),(2227,1,'2021-11-21',118,8),(2228,1,'2021-11-21',121,8),(2229,1,'2021-11-21',148,8),(2230,1,'2021-11-21',145,8),(2231,1,'2021-11-21',158,8),(2232,2,'2021-11-22',100,8),(2233,2,'2021-11-22',152,8),(2234,2,'2021-11-22',128,8),(2235,1,'2021-11-22',127,8),(2236,2,'2021-11-22',136,8),(2237,1,'2021-11-22',158,8),(2238,2,'2021-11-22',153,8),(2239,1,'2021-11-22',159,8),(2240,1,'2021-11-22',150,8),(2241,1,'2021-11-22',151,8),(2242,1,'2021-11-22',154,8),(2243,1,'2021-11-22',155,8),(2244,1,'2021-11-22',156,8),(2245,1,'2021-11-22',157,8),(2246,1,'2021-11-22',119,8),(2247,1,'2021-11-22',97,8),(2248,1,'2021-11-22',98,8),(2249,1,'2021-11-22',99,8),(2250,1,'2021-11-22',120,8),(2251,1,'2021-11-22',101,8),(2252,1,'2021-11-22',121,8),(2253,2,'2021-11-22',134,8),(2254,1,'2021-11-22',137,8),(2255,1,'2021-11-22',102,8),(2256,1,'2021-11-22',113,8),(2257,1,'2021-11-22',133,8),(2258,1,'2021-11-22',114,8),(2259,1,'2021-11-22',144,8),(2260,1,'2021-11-22',135,8),(2261,2,'2021-11-22',146,8),(2262,1,'2021-11-23',113,8),(2263,1,'2021-11-23',138,8),(2264,2,'2021-11-23',108,8),(2265,1,'2021-11-23',116,8),(2266,1,'2021-11-23',130,8),(2267,1,'2021-11-23',131,8),(2268,2,'2021-11-23',132,8),(2269,1,'2021-11-23',152,8),(2270,2,'2021-11-23',145,8),(2271,1,'2021-11-23',150,8),(2272,1,'2021-11-23',156,8),(2273,1,'2021-11-23',153,8),(2274,1,'2021-11-23',127,8),(2275,1,'2021-11-23',135,8),(2276,2,'2021-11-23',154,8),(2277,1,'2021-11-23',147,8),(2278,1,'2021-11-23',114,8),(2279,1,'2021-11-23',101,8),(2280,1,'2021-11-24',120,8),(2281,2,'2021-11-24',108,8),(2282,3,'2021-11-24',159,8),(2283,1,'2021-11-24',156,8),(2284,1,'2021-11-24',137,8),(2285,1,'2021-11-24',98,8),(2286,1,'2021-11-24',128,8),(2287,1,'2021-11-24',146,8),(2288,1,'2021-11-24',133,8),(2289,1,'2021-11-24',139,8),(2290,1,'2021-11-24',136,8),(2291,1,'2021-11-24',105,8),(2292,1,'2021-11-24',150,8),(2293,1,'2021-11-24',124,8),(2294,1,'2021-11-24',138,8),(2295,1,'2021-11-24',147,8),(2296,1,'2021-11-24',104,8),(2297,3,'2021-11-25',152,8),(2298,1,'2021-11-25',110,8),(2299,1,'2021-11-25',125,8),(2300,1,'2021-11-25',140,8),(2301,1,'2021-11-25',158,8),(2302,1,'2021-11-25',147,8),(2303,1,'2021-11-25',132,8),(2304,1,'2021-11-25',109,8),(2305,1,'2021-11-25',142,8),(2306,1,'2021-11-25',131,8),(2307,1,'2021-11-25',134,8),(2308,1,'2021-11-26',117,8),(2309,2,'2021-11-26',143,8),(2310,1,'2021-11-26',102,8),(2311,1,'2021-11-26',155,8),(2312,1,'2021-11-26',137,8),(2313,3,'2021-11-26',152,8),(2314,1,'2021-11-26',138,8),(2315,1,'2021-11-26',111,8),(2316,2,'2021-11-26',139,8),(2317,1,'2021-11-26',101,8),(2318,1,'2021-11-26',122,8),(2319,1,'2021-11-26',120,8),(2320,1,'2021-11-26',148,8),(2321,2,'2021-11-27',97,8),(2322,1,'2021-11-27',105,8),(2323,1,'2021-11-27',115,8),(2324,2,'2021-11-27',121,8),(2325,1,'2021-11-27',113,8),(2326,1,'2021-11-27',158,8),(2327,1,'2021-11-27',159,8),(2328,1,'2021-11-27',99,8),(2329,1,'2021-11-27',107,8),(2330,1,'2021-11-27',106,8),(2331,1,'2021-11-27',145,8),(2332,1,'2021-11-27',152,8),(2333,1,'2021-11-28',123,8),(2334,1,'2021-11-28',151,8),(2335,1,'2021-11-28',144,8),(2336,1,'2021-11-28',118,8),(2337,2,'2021-11-28',112,8),(2338,1,'2021-11-28',138,8),(2339,2,'2021-11-28',152,8),(2340,1,'2021-11-28',117,8),(2341,1,'2021-11-28',113,8),(2342,2,'2021-11-28',158,8),(2343,1,'2021-11-28',154,8),(2344,1,'2021-11-28',106,8),(2345,1,'2021-11-28',141,8),(2346,1,'2021-11-28',116,8),(2347,1,'2021-11-28',121,8),(2348,1,'2021-11-28',136,8),(2349,1,'2021-11-28',104,8),(2350,1,'2021-11-28',119,8),(2351,1,'2021-11-28',110,8),(2352,1,'2021-11-28',120,8),(2353,1,'2021-11-28',150,8),(2354,1,'2021-11-28',149,8),(2355,1,'2021-11-28',143,8),(2356,2,'2021-11-29',122,8),(2357,3,'2021-11-29',155,8),(2358,2,'2021-11-29',158,8),(2359,1,'2021-11-29',112,8),(2360,1,'2021-11-29',152,8),(2361,2,'2021-11-29',143,8),(2362,1,'2021-11-29',151,8),(2363,2,'2021-11-29',159,8),(2364,1,'2021-11-29',136,8),(2365,1,'2021-11-29',121,8),(2366,1,'2021-11-29',108,8),(2367,1,'2021-11-29',120,8),(2368,2,'2021-11-29',157,8),(2369,1,'2021-11-29',156,8),(2370,1,'2021-11-29',154,8),(2371,1,'2021-11-29',153,8),(2372,1,'2021-11-29',107,8),(2373,2,'2021-11-29',110,8),(2374,1,'2021-11-29',130,8),(2375,1,'2021-11-29',127,8),(2376,1,'2021-11-29',128,8),(2377,1,'2021-11-29',124,8),(2378,1,'2021-11-29',150,8),(2379,1,'2021-11-30',100,8),(2380,1,'2021-11-30',150,8),(2381,3,'2021-11-30',121,8),(2382,1,'2021-11-30',157,8),(2383,1,'2021-11-30',115,8),(2384,1,'2021-11-30',119,8),(2385,1,'2021-11-30',158,8),(2386,1,'2021-11-30',132,8),(2387,1,'2021-11-30',149,8),(2388,1,'2021-11-30',118,8),(2389,1,'2021-11-30',134,8),(2390,1,'2021-11-30',130,8),(2391,1,'2021-11-30',137,8),(2392,1,'2021-12-01',142,8),(2393,2,'2021-12-01',144,8),(2394,1,'2021-12-01',135,8),(2395,1,'2021-12-01',151,8),(2396,2,'2021-12-01',149,8),(2397,1,'2021-12-01',109,8),(2398,1,'2021-12-01',158,8),(2399,1,'2021-12-01',148,8),(2400,1,'2021-12-01',131,8),(2401,1,'2021-12-01',157,8),(2402,1,'2021-12-01',124,8),(2403,1,'2021-12-01',139,8),(2404,1,'2021-12-02',103,8),(2405,1,'2021-12-02',97,8),(2406,1,'2021-12-02',105,8),(2407,1,'2021-12-02',107,8),(2408,1,'2021-12-02',140,8),(2409,1,'2021-12-02',144,8),(2410,1,'2021-12-02',110,8),(2411,1,'2021-12-02',159,8),(2412,1,'2021-12-02',101,8),(2413,1,'2021-12-02',104,8),(2414,1,'2021-12-02',131,8),(2415,1,'2021-12-03',125,8),(2416,1,'2021-12-03',155,8),(2417,1,'2021-12-03',158,8),(2418,1,'2021-12-03',156,8),(2419,1,'2021-12-03',108,8),(2420,1,'2021-12-03',102,8),(2421,1,'2021-12-04',157,8),(2422,1,'2021-12-04',133,8),(2423,1,'2021-12-04',152,8),(2424,1,'2021-12-04',138,8),(2425,1,'2021-12-04',120,8),(2426,1,'2021-12-04',146,8),(2427,1,'2021-12-04',123,8),(2428,1,'2021-12-04',118,8),(2429,1,'2021-12-04',149,8),(2430,1,'2021-12-04',121,8),(2431,1,'2021-12-04',112,8),(2432,1,'2021-12-05',130,8),(2433,1,'2021-12-05',117,8),(2434,1,'2021-12-05',147,8),(2435,1,'2021-12-06',150,8),(2436,1,'2021-12-06',124,8),(2437,1,'2021-12-06',127,8),(2438,1,'2021-12-06',135,8),(2439,1,'2021-12-06',143,8),(2440,1,'2021-12-06',109,8),(2441,1,'2021-12-07',149,8),(2442,2,'2021-12-07',116,8),(2443,1,'2021-12-07',98,8),(2444,1,'2021-12-07',139,8),(2445,1,'2021-12-07',97,8),(2446,1,'2021-12-07',107,8),(2447,1,'2021-12-07',154,8),(2448,2,'2021-12-08',106,8),(2449,3,'2021-12-08',102,8),(2450,1,'2021-12-08',97,8),(2451,1,'2021-12-08',98,8),(2452,1,'2021-12-08',107,8),(2453,1,'2021-12-08',116,8),(2454,1,'2021-12-08',139,8),(2455,1,'2021-12-08',144,8),(2456,1,'2021-12-08',149,8),(2457,2,'2021-12-08',157,8),(2458,2,'2021-12-08',131,8),(2459,2,'2021-12-08',100,8),(2460,1,'2021-12-08',99,8),(2461,1,'2021-12-08',105,8),(2462,1,'2021-12-08',108,8),(2463,2,'2021-12-08',115,8),(2464,1,'2021-12-08',117,8),(2465,1,'2021-12-08',138,8),(2466,1,'2021-12-08',140,8),(2467,1,'2021-12-08',143,8),(2468,1,'2021-12-08',145,8),(2469,1,'2021-12-08',148,8),(2470,1,'2021-12-08',150,8),(2471,1,'2021-12-08',153,8),(2472,1,'2021-12-08',154,8),(2473,1,'2021-12-08',155,8),(2474,1,'2021-12-08',156,8),(2475,1,'2021-12-08',158,8),(2476,1,'2021-12-08',159,8),(2477,2,'2021-12-08',125,8),(2478,1,'2021-12-08',101,8),(2479,1,'2021-12-08',103,8),(2480,1,'2021-12-08',104,8),(2481,1,'2021-12-08',109,8),(2482,1,'2021-12-08',111,8),(2483,1,'2021-12-08',112,8),(2484,1,'2021-12-08',113,8),(2485,1,'2021-12-08',114,8),(2486,1,'2021-12-08',118,8),(2487,1,'2021-12-08',119,8),(2488,1,'2021-12-08',120,8),(2489,1,'2021-12-08',121,8),(2490,1,'2021-12-08',122,8),(2491,1,'2021-12-08',123,8),(2492,1,'2021-12-08',124,8),(2493,1,'2021-12-08',127,8),(2494,1,'2021-12-08',128,8),(2495,1,'2021-12-08',130,8),(2496,1,'2021-12-08',132,8),(2497,1,'2021-12-08',133,8),(2498,1,'2021-12-08',134,8),(2499,1,'2021-12-08',135,8),(2500,1,'2021-12-08',136,8),(2501,1,'2021-12-08',137,8),(2502,1,'2021-12-08',141,8),(2503,1,'2021-12-08',142,8),(2504,1,'2021-12-08',146,8),(2505,1,'2021-12-08',147,8),(2506,1,'2021-12-08',151,8),(2507,1,'2021-12-08',152,8),(2508,1,'2021-12-09',110,8),(2509,3,'2021-12-09',148,8),(2510,1,'2021-12-09',147,8),(2511,1,'2021-12-09',104,8),(2512,1,'2021-12-09',138,8),(2513,1,'2021-12-10',119,8),(2514,1,'2021-12-10',117,8),(2515,1,'2021-12-11',113,8),(2516,1,'2021-12-11',156,8),(2517,1,'2021-12-11',108,8),(2518,1,'2021-12-11',146,8),(2519,1,'2021-12-11',137,8),(2520,1,'2021-12-11',152,8),(2521,1,'2021-12-11',101,8),(2522,1,'2021-12-11',119,8),(2523,1,'2021-12-11',155,8),(2524,1,'2021-12-12',147,8),(2525,1,'2021-12-12',136,8),(2526,1,'2021-12-12',98,8),(2527,1,'2021-12-13',130,8),(2528,1,'2021-12-13',132,8),(2529,1,'2021-12-13',143,8),(2530,1,'2021-12-13',105,8),(2531,1,'2021-12-13',127,8),(2532,1,'2021-12-13',107,8),(2533,1,'2021-12-13',151,8),(2534,1,'2021-12-13',149,8),(2535,1,'2021-12-13',122,8),(2536,1,'2021-12-13',97,8),(2537,1,'2021-12-13',145,8);
/*!40000 ALTER TABLE `read_record_readdetail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `read_record_readnum`
--

DROP TABLE IF EXISTS `read_record_readnum`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `read_record_readnum` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `read_num` int(11) NOT NULL,
  `object_id` int(10) unsigned NOT NULL,
  `content_type_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `read_record_readnum_content_type_id_fa40fe67_fk_django_co` (`content_type_id`),
  CONSTRAINT `read_record_readnum_content_type_id_fa40fe67_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=80 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `read_record_readnum`
--

LOCK TABLES `read_record_readnum` WRITE;
/*!40000 ALTER TABLE `read_record_readnum` DISABLE KEYS */;
INSERT INTO `read_record_readnum` VALUES (17,89,97,8),(18,90,98,8),(19,87,99,8),(20,84,100,8),(21,82,101,8),(22,85,102,8),(23,81,103,8),(24,80,104,8),(25,80,105,8),(26,87,106,8),(27,73,107,8),(28,71,108,8),(29,73,109,8),(30,118,110,8),(31,71,112,8),(32,70,113,8),(33,78,114,8),(34,72,111,8),(35,74,115,8),(36,75,116,8),(37,109,117,8),(38,77,118,8),(39,78,119,8),(40,67,120,8),(41,89,121,8),(42,78,122,8),(43,113,123,8),(44,142,124,8),(45,72,125,8),(46,1,126,8),(47,67,127,8),(48,70,128,8),(49,1,129,8),(50,72,130,8),(51,68,131,8),(52,78,132,8),(53,82,133,8),(54,68,134,8),(55,76,135,8),(56,51,136,8),(57,57,137,8),(58,43,138,8),(59,58,139,8),(60,40,140,8),(61,43,141,8),(62,44,142,8),(63,51,143,8),(64,12,144,8),(65,12,145,8),(66,9,146,8),(67,8,147,8),(68,9,148,8),(69,10,149,8),(70,12,150,8),(71,11,151,8),(72,18,152,8),(73,9,153,8),(74,10,154,8),(75,9,155,8),(76,14,156,8),(77,17,157,8),(78,23,158,8),(79,12,159,8);
/*!40000 ALTER TABLE `read_record_readnum` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `userprofile_profile`
--

DROP TABLE IF EXISTS `userprofile_profile`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `userprofile_profile` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `nickname` varchar(20) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_id` (`user_id`),
  CONSTRAINT `userprofile_profile_user_id_f37c6bb1_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `userprofile_profile`
--

LOCK TABLES `userprofile_profile` WRITE;
/*!40000 ALTER TABLE `userprofile_profile` DISABLE KEYS */;
INSERT INTO `userprofile_profile` VALUES (1,'+宇+',1);
/*!40000 ALTER TABLE `userprofile_profile` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-12-13 20:01:39
